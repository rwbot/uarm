package com.jogamp.opengl.util.awt;

import com.jogamp.opengl.GLDrawable;
import com.jogamp.opengl.GLException;
import java.awt.Graphics2D;













































public class Overlay
{
  private final GLDrawable drawable;
  private TextureRenderer renderer;
  private boolean contentsLost;
  
  public Overlay(GLDrawable paramGLDrawable)
  {
    drawable = paramGLDrawable;
  }
  









  public Graphics2D createGraphics()
  {
    validateRenderer();
    return renderer.createGraphics();
  }
  









  public boolean contentsLost()
  {
    return contentsLost;
  }
  














  public void markDirty(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    renderer.markDirty(paramInt1, paramInt2, paramInt3, paramInt4);
  }
  








  public void drawAll()
    throws GLException
  {
    beginRendering();
    draw(0, 0, drawable.getSurfaceWidth(), drawable.getSurfaceHeight());
    endRendering();
  }
  




  public void beginRendering()
    throws GLException
  {
    renderer.beginOrthoRendering(drawable.getSurfaceWidth(), drawable.getSurfaceHeight());
  }
  




  public void endRendering()
    throws GLException
  {
    renderer.endOrthoRendering();
  }
  














  public void draw(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
    throws GLException
  {
    draw(paramInt1, paramInt2, paramInt1, paramInt2, paramInt3, paramInt4);
  }
  





















  public void draw(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
    throws GLException
  {
    renderer.drawOrthoRect(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
  }
  





  private void validateRenderer()
  {
    if (renderer == null)
    {
      renderer = new TextureRenderer(drawable.getSurfaceWidth(), drawable.getSurfaceHeight(), true);
      
      contentsLost = true;
    } else if ((renderer.getWidth() != drawable.getSurfaceWidth()) || 
      (renderer.getHeight() != drawable.getSurfaceHeight())) {
      renderer.setSize(drawable.getSurfaceWidth(), drawable.getSurfaceHeight());
      contentsLost = true;
    } else {
      contentsLost = false;
    }
  }
}
