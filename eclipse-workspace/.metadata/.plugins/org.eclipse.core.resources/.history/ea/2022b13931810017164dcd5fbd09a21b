package com.leapmotion.leap;



public class Interface
{
  private long swigCPtr;
  

  protected boolean swigCMemOwn;
  


  public Interface(long paramLong, boolean paramBoolean)
  {
    swigCMemOwn = paramBoolean;
    swigCPtr = paramLong;
  }
  
  public static long getCPtr(Interface paramInterface) {
    return paramInterface == null ? 0L : swigCPtr;
  }
  
  public synchronized void delete() {
    if (swigCPtr != 0L) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0L;
    }
  }
  
  public static class Implementation {
    private long swigCPtr;
    protected boolean swigCMemOwn;
    
    public Implementation(long paramLong, boolean paramBoolean) {
      swigCMemOwn = paramBoolean;
      swigCPtr = paramLong;
    }
    
    public static long getCPtr(Implementation paramImplementation) {
      return paramImplementation == null ? 0L : swigCPtr;
    }
    
    protected void finalize() {
      delete();
    }
    
    public synchronized void delete() {
      if (swigCPtr != 0L) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LeapJNI.delete_Interface_Implementation(swigCPtr);
        }
        swigCPtr = 0L;
      }
    }
    
    public Implementation() {
      this(LeapJNI.new_Interface_Implementation(), true);
    }
  }
}
