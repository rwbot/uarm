package com.leapmotion.leap;




public class KeyTapGesture
  extends Gesture
{
  private long swigCPtr;
  


  public KeyTapGesture(long paramLong, boolean paramBoolean)
  {
    super(LeapJNI.KeyTapGesture_SWIGUpcast(paramLong), paramBoolean);
    swigCPtr = paramLong;
  }
  
  public static long getCPtr(KeyTapGesture paramKeyTapGesture) {
    return paramKeyTapGesture == null ? 0L : swigCPtr;
  }
  
  protected void finalize() {
    delete();
  }
  
  public synchronized void delete() {
    if (swigCPtr != 0L) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        LeapJNI.delete_KeyTapGesture(swigCPtr);
      }
      swigCPtr = 0L;
    }
    super.delete();
  }
  
  public static Gesture.Type classType() {
    return Gesture.Type.swigToEnum(LeapJNI.KeyTapGesture_classType());
  }
  
  public KeyTapGesture() {
    this(LeapJNI.new_KeyTapGesture__SWIG_0(), true);
  }
  
  public KeyTapGesture(Gesture paramGesture) {
    this(LeapJNI.new_KeyTapGesture__SWIG_1(Gesture.getCPtr(paramGesture), paramGesture), true);
  }
  
  public Vector position() {
    return new Vector(LeapJNI.KeyTapGesture_position(swigCPtr, this), true);
  }
  
  public Vector direction() {
    return new Vector(LeapJNI.KeyTapGesture_direction(swigCPtr, this), true);
  }
  
  public float progress() {
    return LeapJNI.KeyTapGesture_progress(swigCPtr, this);
  }
  
  public Pointable pointable() {
    return new Pointable(LeapJNI.KeyTapGesture_pointable(swigCPtr, this), true);
  }
}
