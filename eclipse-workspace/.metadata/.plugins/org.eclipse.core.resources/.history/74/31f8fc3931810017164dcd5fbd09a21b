package jogamp.graph.font.typecast.ot.table;

import java.io.DataInput;
import java.io.IOException;
import jogamp.graph.font.typecast.ot.Fixed;






















































public class HeadTable
  implements Table
{
  private final DirectoryEntry _de;
  private final int _versionNumber;
  private final int _fontRevision;
  private final int _checkSumAdjustment;
  private final int _magicNumber;
  private final short _flags;
  private final short _unitsPerEm;
  private final long _created;
  private final long _modified;
  private final short _xMin;
  private final short _yMin;
  private final short _xMax;
  private final short _yMax;
  private final short _macStyle;
  private final short _lowestRecPPEM;
  private final short _fontDirectionHint;
  private final short _indexToLocFormat;
  private final short _glyphDataFormat;
  
  protected HeadTable(DirectoryEntry paramDirectoryEntry, DataInput paramDataInput)
    throws IOException
  {
    _de = ((DirectoryEntry)paramDirectoryEntry.clone());
    _versionNumber = paramDataInput.readInt();
    _fontRevision = paramDataInput.readInt();
    _checkSumAdjustment = paramDataInput.readInt();
    _magicNumber = paramDataInput.readInt();
    _flags = paramDataInput.readShort();
    _unitsPerEm = paramDataInput.readShort();
    _created = paramDataInput.readLong();
    _modified = paramDataInput.readLong();
    _xMin = paramDataInput.readShort();
    _yMin = paramDataInput.readShort();
    _xMax = paramDataInput.readShort();
    _yMax = paramDataInput.readShort();
    _macStyle = paramDataInput.readShort();
    _lowestRecPPEM = paramDataInput.readShort();
    _fontDirectionHint = paramDataInput.readShort();
    _indexToLocFormat = paramDataInput.readShort();
    _glyphDataFormat = paramDataInput.readShort();
  }
  
  public int getCheckSumAdjustment() {
    return _checkSumAdjustment;
  }
  
  public long getCreated() {
    return _created;
  }
  
  public short getFlags() {
    return _flags;
  }
  
  public short getFontDirectionHint() {
    return _fontDirectionHint;
  }
  
  public int getFontRevision() {
    return _fontRevision;
  }
  
  public short getGlyphDataFormat() {
    return _glyphDataFormat;
  }
  
  public short getIndexToLocFormat() {
    return _indexToLocFormat;
  }
  
  public short getLowestRecPPEM() {
    return _lowestRecPPEM;
  }
  
  public short getMacStyle() {
    return _macStyle;
  }
  
  public long getModified() {
    return _modified;
  }
  
  public int getType()
  {
    return 1751474532;
  }
  
  public short getUnitsPerEm() {
    return _unitsPerEm;
  }
  
  public int getVersionNumber() {
    return _versionNumber;
  }
  
  public short getXMax() {
    return _xMax;
  }
  
  public short getXMin() {
    return _xMin;
  }
  
  public short getYMax() {
    return _yMax;
  }
  
  public short getYMin() {
    return _yMin;
  }
  



















  public String toString()
  {
    return "'head' Table - Font Header\n--------------------------" + "\n  'head' version:      " + Fixed.floatValue(_versionNumber) + "\n  fontRevision:        " + Fixed.roundedFloatValue(_fontRevision, 8) + "\n  checkSumAdjustment:  0x" + Integer.toHexString(_checkSumAdjustment).toUpperCase() + "\n  magicNumber:         0x" + Integer.toHexString(_magicNumber).toUpperCase() + "\n  flags:               0x" + Integer.toHexString(_flags).toUpperCase() + "\n  unitsPerEm:          " + _unitsPerEm + "\n  created:             " + _created + "\n  modified:            " + _modified + "\n  xMin:                " + _xMin + "\n  yMin:                " + _yMin + "\n  xMax:                " + _xMax + "\n  yMax:                " + _yMax + "\n  macStyle bits:       " + Integer.toHexString(_macStyle).toUpperCase() + "\n  lowestRecPPEM:       " + _lowestRecPPEM + "\n  fontDirectionHint:   " + _fontDirectionHint + "\n  indexToLocFormat:    " + _indexToLocFormat + "\n  glyphDataFormat:     " + _glyphDataFormat;
  }
  






  public DirectoryEntry getDirectoryEntry()
  {
    return _de;
  }
}
