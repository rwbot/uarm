package com.jogamp.opengl;

import com.jogamp.common.nio.PointerBuffer;
import java.io.PrintStream;
import java.lang.reflect.Array;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import jogamp.opengl.Debug;











public class TraceGLES3
  implements GLES2, GL4ES3, GLES3
{
  public static final boolean DEBUG = Debug.debug("TraceGLES3");
  private PrintStream stream;
  
  public TraceGLES3(GLES3 paramGLES3, PrintStream paramPrintStream) { if (paramGLES3 == null) {
      throw new IllegalArgumentException("null downstreamGLES3");
    }
    downstreamGLES3 = paramGLES3;
    stream = paramPrintStream;
  }
  
  public final GL getDownstreamGL() throws GLException
  {
    return downstreamGLES3;
  }
  
  public int getBoundBuffer(int paramInt)
  {
    return downstreamGLES3.getBoundBuffer(paramInt);
  }
  
  public int getBoundFramebuffer(int paramInt)
  {
    return downstreamGLES3.getBoundFramebuffer(paramInt);
  }
  
  public GLBufferStorage getBufferStorage(int paramInt)
  {
    return downstreamGLES3.getBufferStorage(paramInt);
  }
  
  public GLContext getContext()
  {
    return downstreamGLES3.getContext();
  }
  
  public int getDefaultDrawFramebuffer()
  {
    return downstreamGLES3.getDefaultDrawFramebuffer();
  }
  
  public int getDefaultReadBuffer()
  {
    return downstreamGLES3.getDefaultReadBuffer();
  }
  
  public int getDefaultReadFramebuffer()
  {
    return downstreamGLES3.getDefaultReadFramebuffer();
  }
  
  public Object getExtension(String paramString)
  {
    return downstreamGLES3.getExtension(paramString);
  }
  
  public GL getGL()
  {
    return this;
  }
  
  public GL2 getGL2()
  {
    throw new GLException("Not a GL2 implementation");
  }
  
  public GL2ES1 getGL2ES1()
  {
    throw new GLException("Not a GL2ES1 implementation");
  }
  
  public GL2ES2 getGL2ES2()
  {
    if (isGL2ES2()) return this;
    throw new GLException("Not a GL2ES2 implementation");
  }
  
  public GL2ES3 getGL2ES3()
  {
    if (isGL2ES3()) return this;
    throw new GLException("Not a GL2ES3 implementation");
  }
  
  public GL2GL3 getGL2GL3()
  {
    throw new GLException("Not a GL2GL3 implementation");
  }
  
  public GL3 getGL3()
  {
    throw new GLException("Not a GL3 implementation");
  }
  
  public GL3ES3 getGL3ES3()
  {
    if (isGL3ES3()) return this;
    throw new GLException("Not a GL3ES3 implementation");
  }
  
  public GL3bc getGL3bc()
  {
    throw new GLException("Not a GL3bc implementation");
  }
  
  public GL4 getGL4()
  {
    throw new GLException("Not a GL4 implementation");
  }
  
  public GL4ES3 getGL4ES3()
  {
    if (isGL4ES3()) return this;
    throw new GLException("Not a GL4ES3 implementation");
  }
  
  public GL4bc getGL4bc()
  {
    throw new GLException("Not a GL4bc implementation");
  }
  
  public GLES1 getGLES1()
  {
    throw new GLException("Not a GLES1 implementation");
  }
  
  public GLES2 getGLES2()
  {
    if (isGLES2()) return this;
    throw new GLException("Not a GLES2 implementation");
  }
  
  public GLES3 getGLES3()
  {
    if (isGLES3()) return this;
    throw new GLException("Not a GLES3 implementation");
  }
  
  public GLProfile getGLProfile()
  {
    return downstreamGLES3.getGLProfile();
  }
  
  public int getMaxRenderbufferSamples()
  {
    return downstreamGLES3.getMaxRenderbufferSamples();
  }
  
  public Object getPlatformGLExtensions()
  {
    return downstreamGLES3.getPlatformGLExtensions();
  }
  
  public GL getRootGL()
  {
    return downstreamGLES3.getRootGL();
  }
  
  public int getSwapInterval()
  {
    return downstreamGLES3.getSwapInterval();
  }
  
  public void glActiveShaderProgram(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glActiveShaderProgram(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glActiveShaderProgram(paramInt1, paramInt2);
    println("");
  }
  
  public void glActiveTexture(int paramInt)
  {
    printIndent();
    print("glActiveTexture(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glActiveTexture(paramInt);
    println("");
  }
  
  public void glAlphaFuncQCOM(int paramInt, float paramFloat)
  {
    printIndent();
    print("glAlphaFuncQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES3.glAlphaFuncQCOM(paramInt, paramFloat);
    println("");
  }
  
  public void glApplyFramebufferAttachmentCMAAINTEL()
  {
    printIndent();
    print("glApplyFramebufferAttachmentCMAAINTEL()");
    downstreamGLES3.glApplyFramebufferAttachmentCMAAINTEL();
    println("");
  }
  
  public void glAttachShader(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glAttachShader(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glAttachShader(paramInt1, paramInt2);
    println("");
  }
  
  public void glBeginConditionalRender(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBeginConditionalRender(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBeginConditionalRender(paramInt1, paramInt2);
    println("");
  }
  
  public void glBeginQuery(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBeginQuery(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBeginQuery(paramInt1, paramInt2);
    println("");
  }
  
  public void glBeginTransformFeedback(int paramInt)
  {
    printIndent();
    print("glBeginTransformFeedback(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glBeginTransformFeedback(paramInt);
    println("");
  }
  
  public void glBindAttribLocation(int paramInt1, int paramInt2, String paramString)
  {
    printIndent();
    print("glBindAttribLocation(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.lang.String> " + paramString + ")");
    downstreamGLES3.glBindAttribLocation(paramInt1, paramInt2, paramString);
    println("");
  }
  
  public void glBindBuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBindBuffer(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindBufferBase(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBindBufferBase(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBindBufferBase(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBindBufferRange(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    printIndent();
    print("glBindBufferRange(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES3.glBindBufferRange(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    println("");
  }
  
  public void glBindFragDataLocationEXT(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    printIndent();
    print("glBindFragDataLocationEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBindFragDataLocationEXT(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    println("");
  }
  
  public void glBindFragDataLocationEXT(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glBindFragDataLocationEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glBindFragDataLocationEXT(paramInt1, paramInt2, paramByteBuffer);
    println("");
  }
  
  public void glBindFragDataLocationIndexedEXT(int paramInt1, int paramInt2, int paramInt3, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glBindFragDataLocationIndexedEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glBindFragDataLocationIndexedEXT(paramInt1, paramInt2, paramInt3, paramByteBuffer);
    println("");
  }
  
  public void glBindFragDataLocationIndexedEXT(int paramInt1, int paramInt2, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glBindFragDataLocationIndexedEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glBindFragDataLocationIndexedEXT(paramInt1, paramInt2, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glBindFramebuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBindFramebuffer(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindImageTexture(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glBindImageTexture(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glBindImageTexture(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glBindProgramPipeline(int paramInt)
  {
    printIndent();
    print("glBindProgramPipeline(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glBindProgramPipeline(paramInt);
    println("");
  }
  
  public void glBindRenderbuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindRenderbuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBindRenderbuffer(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindSampler(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindSampler(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBindSampler(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindTexture(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindTexture(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBindTexture(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindTransformFeedback(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindTransformFeedback(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBindTransformFeedback(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindVertexArray(int paramInt)
  {
    printIndent();
    print("glBindVertexArray(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glBindVertexArray(paramInt);
    println("");
  }
  
  public void glBindVertexArrayOES(int paramInt)
  {
    printIndent();
    print("glBindVertexArrayOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glBindVertexArrayOES(paramInt);
    println("");
  }
  
  public void glBindVertexBuffer(int paramInt1, int paramInt2, long paramLong, int paramInt3)
  {
    printIndent();
    print("glBindVertexBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBindVertexBuffer(paramInt1, paramInt2, paramLong, paramInt3);
    println("");
  }
  
  public void glBlendBarrier()
  {
    printIndent();
    print("glBlendBarrier()");
    downstreamGLES3.glBlendBarrier();
    println("");
  }
  
  public void glBlendColor(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glBlendColor(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES3.glBlendColor(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glBlendEquation(int paramInt)
  {
    printIndent();
    print("glBlendEquation(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glBlendEquation(paramInt);
    println("");
  }
  
  public void glBlendEquationSeparate(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendEquationSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationSeparate(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendEquationSeparatei(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBlendEquationSeparatei(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationSeparatei(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBlendEquationSeparateiEXT(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBlendEquationSeparateiEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationSeparateiEXT(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBlendEquationSeparateiOES(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBlendEquationSeparateiOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationSeparateiOES(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBlendEquationi(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendEquationi(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationi(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendEquationiEXT(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendEquationiEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationiEXT(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendEquationiOES(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendEquationiOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBlendEquationiOES(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendFunc(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendFunc(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBlendFunc(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendFuncSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glBlendFuncSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glBlendFuncSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glBlendFuncSeparatei(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glBlendFuncSeparatei(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glBlendFuncSeparatei(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glBlendFuncSeparateiEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glBlendFuncSeparateiEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glBlendFuncSeparateiEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glBlendFuncSeparateiOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glBlendFuncSeparateiOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glBlendFuncSeparateiOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glBlendFunci(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBlendFunci(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBlendFunci(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBlendFunciEXT(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBlendFunciEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBlendFunciEXT(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBlendFunciOES(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glBlendFunciOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glBlendFunciOES(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glBlitFramebuffer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10)
  {
    printIndent();
    print("glBlitFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ")");
    downstreamGLES3.glBlitFramebuffer(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10);
    println("");
  }
  
  public void glBlitFramebufferANGLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10)
  {
    printIndent();
    print("glBlitFramebufferANGLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ")");
    downstreamGLES3.glBlitFramebufferANGLE(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10);
    println("");
  }
  
  public void glBlitFramebufferNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10)
  {
    printIndent();
    print("glBlitFramebufferNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ")");
    downstreamGLES3.glBlitFramebufferNV(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10);
    println("");
  }
  
  public void glBufferData(int paramInt1, long paramLong, Buffer paramBuffer, int paramInt2)
  {
    printIndent();
    print("glBufferData(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBufferData(paramInt1, paramLong, paramBuffer, paramInt2);
    println("");
  }
  
  public void glBufferStorageEXT(int paramInt1, long paramLong, Buffer paramBuffer, int paramInt2)
  {
    printIndent();
    print("glBufferStorageEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glBufferStorageEXT(paramInt1, paramLong, paramBuffer, paramInt2);
    println("");
  }
  
  public void glBufferSubData(int paramInt, long paramLong1, long paramLong2, Buffer paramBuffer)
  {
    printIndent();
    print("glBufferSubData(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glBufferSubData(paramInt, paramLong1, paramLong2, paramBuffer);
    println("");
  }
  
  public int glCheckFramebufferStatus(int paramInt)
  {
    printIndent();
    print("glCheckFramebufferStatus(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    int i = downstreamGLES3.glCheckFramebufferStatus(paramInt);
    println(" = " + i);
    return i;
  }
  
  public void glClear(int paramInt)
  {
    printIndent();
    print("glClear(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glClear(paramInt);
    println("");
  }
  
  public void glClearBufferfi(int paramInt1, int paramInt2, float paramFloat, int paramInt3)
  {
    printIndent();
    print("glClearBufferfi(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glClearBufferfi(paramInt1, paramInt2, paramFloat, paramInt3);
    println("");
  }
  
  public void glClearBufferfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glClearBufferfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glClearBufferfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glClearBufferfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glClearBufferfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glClearBufferfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glClearBufferiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glClearBufferiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glClearBufferiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glClearBufferiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glClearBufferiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glClearBufferiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glClearBufferuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glClearBufferuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glClearBufferuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glClearBufferuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glClearBufferuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glClearBufferuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glClearColor(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glClearColor(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES3.glClearColor(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glClearDepth(double paramDouble)
  {
    printIndent();
    print("glClearDepth(<double> " + paramDouble + ")");
    downstreamGLES3.glClearDepth(paramDouble);
    println("");
  }
  
  public void glClearDepthf(float paramFloat)
  {
    printIndent();
    print("glClearDepthf(<float> " + paramFloat + ")");
    downstreamGLES3.glClearDepthf(paramFloat);
    println("");
  }
  
  public void glClearStencil(int paramInt)
  {
    printIndent();
    print("glClearStencil(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glClearStencil(paramInt);
    println("");
  }
  
  public int glClientWaitSync(long paramLong1, int paramInt, long paramLong2)
  {
    printIndent();
    print("glClientWaitSync(<long> " + paramLong1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong2 + ")");
    int i = downstreamGLES3.glClientWaitSync(paramLong1, paramInt, paramLong2);
    println(" = " + i);
    return i;
  }
  
  public void glColorMask(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    printIndent();
    print("glColorMask(<boolean> " + paramBoolean1 + ", " + "<boolean> " + paramBoolean2 + ", " + "<boolean> " + paramBoolean3 + ", " + "<boolean> " + paramBoolean4 + ")");
    downstreamGLES3.glColorMask(paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    println("");
  }
  
  public void glColorMaski(int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    printIndent();
    print("glColorMaski(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<boolean> " + paramBoolean1 + ", " + "<boolean> " + paramBoolean2 + ", " + "<boolean> " + paramBoolean3 + ", " + "<boolean> " + paramBoolean4 + ")");
    downstreamGLES3.glColorMaski(paramInt, paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    println("");
  }
  
  public void glColorMaskiEXT(int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    printIndent();
    print("glColorMaskiEXT(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<boolean> " + paramBoolean1 + ", " + "<boolean> " + paramBoolean2 + ", " + "<boolean> " + paramBoolean3 + ", " + "<boolean> " + paramBoolean4 + ")");
    downstreamGLES3.glColorMaskiEXT(paramInt, paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    println("");
  }
  
  public void glColorMaskiOES(int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    printIndent();
    print("glColorMaskiOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<boolean> " + paramBoolean1 + ", " + "<boolean> " + paramBoolean2 + ", " + "<boolean> " + paramBoolean3 + ", " + "<boolean> " + paramBoolean4 + ")");
    downstreamGLES3.glColorMaskiOES(paramInt, paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    println("");
  }
  
  public void glCompileShader(int paramInt)
  {
    printIndent();
    print("glCompileShader(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glCompileShader(paramInt);
    println("");
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, long paramLong)
  {
    printIndent();
    print("glCompressedTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramLong);
    println("");
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    printIndent();
    print("glCompressedTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    println("");
  }
  
  public void glCompressedTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glCompressedTexImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glCompressedTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glCompressedTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glCompressedTexImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glCompressedTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glCompressedTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glCompressedTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glCompressedTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, long paramLong)
  {
    printIndent();
    print("glCompressedTexSubImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glCompressedTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramLong);
    println("");
  }
  
  public void glCompressedTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    printIndent();
    print("glCompressedTexSubImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glCompressedTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    println("");
  }
  
  public void glCopyBufferSubData(int paramInt1, int paramInt2, long paramLong1, long paramLong2, long paramLong3)
  {
    printIndent();
    print("glCopyBufferSubData(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<long> " + paramLong3 + ")");
    downstreamGLES3.glCopyBufferSubData(paramInt1, paramInt2, paramLong1, paramLong2, paramLong3);
    println("");
  }
  
  public void glCopyBufferSubDataNV(int paramInt1, int paramInt2, long paramLong1, long paramLong2, long paramLong3)
  {
    printIndent();
    print("glCopyBufferSubDataNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<long> " + paramLong3 + ")");
    downstreamGLES3.glCopyBufferSubDataNV(paramInt1, paramInt2, paramLong1, paramLong2, paramLong3);
    println("");
  }
  
  public void glCopyImageSubData(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, int paramInt11, int paramInt12, int paramInt13, int paramInt14, int paramInt15)
  {
    printIndent();
    print("glCopyImageSubData(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt11).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt12).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt13).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt14).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt15).toUpperCase() + ")");
    downstreamGLES3.glCopyImageSubData(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramInt11, paramInt12, paramInt13, paramInt14, paramInt15);
    println("");
  }
  
  public void glCopyTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    printIndent();
    print("glCopyTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    downstreamGLES3.glCopyTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    println("");
  }
  
  public void glCopyTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    printIndent();
    print("glCopyTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    downstreamGLES3.glCopyTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    println("");
  }
  
  public void glCopyTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9)
  {
    printIndent();
    print("glCopyTexSubImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ")");
    downstreamGLES3.glCopyTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9);
    println("");
  }
  
  public void glCopyTextureLevelsAPPLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glCopyTextureLevelsAPPLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glCopyTextureLevelsAPPLE(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glCoverageMaskNV(boolean paramBoolean)
  {
    printIndent();
    print("glCoverageMaskNV(<boolean> " + paramBoolean + ")");
    downstreamGLES3.glCoverageMaskNV(paramBoolean);
    println("");
  }
  
  public void glCoverageModulationNV(int paramInt)
  {
    printIndent();
    print("glCoverageModulationNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glCoverageModulationNV(paramInt);
    println("");
  }
  
  public void glCoverageModulationTableNV(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glCoverageModulationTableNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glCoverageModulationTableNV(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glCoverageModulationTableNV(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glCoverageModulationTableNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glCoverageModulationTableNV(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glCoverageOperationNV(int paramInt)
  {
    printIndent();
    print("glCoverageOperationNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glCoverageOperationNV(paramInt);
    println("");
  }
  
  public int glCreateProgram()
  {
    printIndent();
    print("glCreateProgram()");
    int i = downstreamGLES3.glCreateProgram();
    println(" = " + i);
    return i;
  }
  
  public int glCreateShader(int paramInt)
  {
    printIndent();
    print("glCreateShader(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    int i = downstreamGLES3.glCreateShader(paramInt);
    println(" = " + i);
    return i;
  }
  
  public int glCreateShaderProgramv(int paramInt1, int paramInt2, String[] paramArrayOfString)
  {
    printIndent();
    print("glCreateShaderProgramv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ")");
    int i = downstreamGLES3.glCreateShaderProgramv(paramInt1, paramInt2, paramArrayOfString);
    println(" = " + i);
    return i;
  }
  
  public void glCullFace(int paramInt)
  {
    printIndent();
    print("glCullFace(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glCullFace(paramInt);
    println("");
  }
  
  public void glDebugMessageControl(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5, boolean paramBoolean)
  {
    printIndent();
    print("glDebugMessageControl(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glDebugMessageControl(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5, paramBoolean);
    println("");
  }
  
  public void glDebugMessageControl(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer, boolean paramBoolean)
  {
    printIndent();
    print("glDebugMessageControl(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glDebugMessageControl(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer, paramBoolean);
    println("");
  }
  
  public void glDebugMessageInsert(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, String paramString)
  {
    printIndent();
    print("glDebugMessageInsert(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<java.lang.String> " + paramString + ")");
    downstreamGLES3.glDebugMessageInsert(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramString);
    println("");
  }
  
  public void glDeleteBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteBuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteBuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteBuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteBuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteFramebuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteFramebuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteFramebuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteProgram(int paramInt)
  {
    printIndent();
    print("glDeleteProgram(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glDeleteProgram(paramInt);
    println("");
  }
  
  public void glDeleteProgramPipelines(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteProgramPipelines(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteProgramPipelines(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteProgramPipelines(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteProgramPipelines(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteProgramPipelines(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteQueries(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteQueries(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteQueries(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteQueries(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteQueries(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteQueries(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteRenderbuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteRenderbuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteRenderbuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteSamplers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteSamplers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteSamplers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteSamplers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteSamplers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteSamplers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteShader(int paramInt)
  {
    printIndent();
    print("glDeleteShader(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glDeleteShader(paramInt);
    println("");
  }
  
  public void glDeleteSync(long paramLong)
  {
    printIndent();
    print("glDeleteSync(<long> " + paramLong + ")");
    downstreamGLES3.glDeleteSync(paramLong);
    println("");
  }
  
  public void glDeleteTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteTextures(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteTextures(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteTextures(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteTextures(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteTransformFeedbacks(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteTransformFeedbacks(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteTransformFeedbacks(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteTransformFeedbacks(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteTransformFeedbacks(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteTransformFeedbacks(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteVertexArrays(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteVertexArrays(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteVertexArrays(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteVertexArrays(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteVertexArrays(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteVertexArrays(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDeleteVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDeleteVertexArraysOES(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDepthFunc(int paramInt)
  {
    printIndent();
    print("glDepthFunc(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glDepthFunc(paramInt);
    println("");
  }
  
  public void glDepthMask(boolean paramBoolean)
  {
    printIndent();
    print("glDepthMask(<boolean> " + paramBoolean + ")");
    downstreamGLES3.glDepthMask(paramBoolean);
    println("");
  }
  
  public void glDepthRange(double paramDouble1, double paramDouble2)
  {
    printIndent();
    print("glDepthRange(<double> " + paramDouble1 + ", " + "<double> " + paramDouble2 + ")");
    downstreamGLES3.glDepthRange(paramDouble1, paramDouble2);
    println("");
  }
  
  public void glDepthRangeArrayfvNV(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glDepthRangeArrayfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glDepthRangeArrayfvNV(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glDepthRangeArrayfvNV(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glDepthRangeArrayfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glDepthRangeArrayfvNV(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glDepthRangeIndexedfNV(int paramInt, float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glDepthRangeIndexedfNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES3.glDepthRangeIndexedfNV(paramInt, paramFloat1, paramFloat2);
    println("");
  }
  
  public void glDepthRangef(float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glDepthRangef(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES3.glDepthRangef(paramFloat1, paramFloat2);
    println("");
  }
  
  public void glDetachShader(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glDetachShader(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDetachShader(paramInt1, paramInt2);
    println("");
  }
  
  public void glDisable(int paramInt)
  {
    printIndent();
    print("glDisable(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glDisable(paramInt);
    println("");
  }
  
  public void glDisableDriverControlQCOM(int paramInt)
  {
    printIndent();
    print("glDisableDriverControlQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glDisableDriverControlQCOM(paramInt);
    println("");
  }
  
  public void glDisableVertexAttribArray(int paramInt)
  {
    printIndent();
    print("glDisableVertexAttribArray(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glDisableVertexAttribArray(paramInt);
    println("");
  }
  
  public void glDisablei(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glDisablei(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDisablei(paramInt1, paramInt2);
    println("");
  }
  
  public void glDisableiEXT(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glDisableiEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDisableiEXT(paramInt1, paramInt2);
    println("");
  }
  
  public void glDisableiNV(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glDisableiNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDisableiNV(paramInt1, paramInt2);
    println("");
  }
  
  public void glDisableiOES(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glDisableiOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDisableiOES(paramInt1, paramInt2);
    println("");
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glDiscardFramebufferEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glDiscardFramebufferEXT(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDiscardFramebufferEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDiscardFramebufferEXT(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glDispatchCompute(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glDispatchCompute(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glDispatchCompute(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glDispatchComputeIndirect(long paramLong)
  {
    printIndent();
    print("glDispatchComputeIndirect(<long> " + paramLong + ")");
    downstreamGLES3.glDispatchComputeIndirect(paramLong);
    println("");
  }
  
  public void glDrawArrays(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glDrawArrays(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glDrawArrays(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glDrawArraysIndirect(int paramInt, Buffer paramBuffer)
  {
    printIndent();
    print("glDrawArraysIndirect(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glDrawArraysIndirect(paramInt, paramBuffer);
    println("");
  }
  
  public void glDrawArraysIndirect(int paramInt, long paramLong)
  {
    printIndent();
    print("glDrawArraysIndirect(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glDrawArraysIndirect(paramInt, paramLong);
    println("");
  }
  
  public void glDrawArraysInstanced(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glDrawArraysInstanced(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawArraysInstanced(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glDrawArraysInstancedANGLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glDrawArraysInstancedANGLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawArraysInstancedANGLE(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glDrawArraysInstancedBaseInstance(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawArraysInstancedBaseInstance(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glDrawArraysInstancedBaseInstance(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawArraysInstancedNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glDrawArraysInstancedNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawArraysInstancedNV(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glDrawBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDrawBuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glDrawBuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDrawBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDrawBuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glDrawBuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDrawBuffersIndexedEXT(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glDrawBuffersIndexedEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glDrawBuffersIndexedEXT(paramInt1, paramArrayOfInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glDrawBuffersIndexedEXT(int paramInt, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glDrawBuffersIndexedEXT(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glDrawBuffersIndexedEXT(paramInt, paramIntBuffer1, paramIntBuffer2);
    println("");
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glDrawElements(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glDrawElements(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    printIndent();
    print("glDrawElements(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glDrawElements(paramInt1, paramInt2, paramInt3, paramLong);
    println("");
  }
  
  public void glDrawElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glDrawElementsBaseVertex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glDrawElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4)
  {
    printIndent();
    print("glDrawElementsBaseVertex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramLong, paramInt4);
    println("");
  }
  
  public void glDrawElementsBaseVertexEXT(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glDrawElementsBaseVertexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsBaseVertexEXT(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glDrawElementsBaseVertexOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glDrawElementsBaseVertexOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsBaseVertexOES(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glDrawElementsIndirect(int paramInt1, int paramInt2, long paramLong)
  {
    printIndent();
    print("glDrawElementsIndirect(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glDrawElementsIndirect(paramInt1, paramInt2, paramLong);
    println("");
  }
  
  public void glDrawElementsIndirect(int paramInt1, int paramInt2, Buffer paramBuffer)
  {
    printIndent();
    print("glDrawElementsIndirect(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glDrawElementsIndirect(paramInt1, paramInt2, paramBuffer);
    println("");
  }
  
  public void glDrawElementsInstanced(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glDrawElementsInstanced(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstanced(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glDrawElementsInstanced(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4)
  {
    printIndent();
    print("glDrawElementsInstanced(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstanced(paramInt1, paramInt2, paramInt3, paramLong, paramInt4);
    println("");
  }
  
  public void glDrawElementsInstancedANGLE(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glDrawElementsInstancedANGLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedANGLE(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glDrawElementsInstancedBaseInstance(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawElementsInstancedBaseInstance(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedBaseInstance(paramInt1, paramInt2, paramInt3, paramLong, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawElementsInstancedBaseVertex(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawElementsInstancedBaseVertex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedBaseVertex(paramInt1, paramInt2, paramInt3, paramLong, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawElementsInstancedBaseVertex(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawElementsInstancedBaseVertex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedBaseVertex(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawElementsInstancedBaseVertexBaseInstance(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glDrawElementsInstancedBaseVertexBaseInstance(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedBaseVertexBaseInstance(paramInt1, paramInt2, paramInt3, paramLong, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glDrawElementsInstancedBaseVertexEXT(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawElementsInstancedBaseVertexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedBaseVertexEXT(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawElementsInstancedBaseVertexOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawElementsInstancedBaseVertexOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedBaseVertexOES(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawElementsInstancedNV(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glDrawElementsInstancedNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glDrawElementsInstancedNV(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glDrawRangeElements(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer)
  {
    printIndent();
    print("glDrawRangeElements(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glDrawRangeElements(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer);
    println("");
  }
  
  public void glDrawRangeElements(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, long paramLong)
  {
    printIndent();
    print("glDrawRangeElements(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glDrawRangeElements(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramLong);
    println("");
  }
  
  public void glDrawRangeElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer, int paramInt6)
  {
    printIndent();
    print("glDrawRangeElementsBaseVertex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glDrawRangeElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer, paramInt6);
    println("");
  }
  
  public void glDrawRangeElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, long paramLong, int paramInt6)
  {
    printIndent();
    print("glDrawRangeElementsBaseVertex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glDrawRangeElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramLong, paramInt6);
    println("");
  }
  
  public void glDrawRangeElementsBaseVertexEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer, int paramInt6)
  {
    printIndent();
    print("glDrawRangeElementsBaseVertexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glDrawRangeElementsBaseVertexEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer, paramInt6);
    println("");
  }
  
  public void glDrawRangeElementsBaseVertexOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer, int paramInt6)
  {
    printIndent();
    print("glDrawRangeElementsBaseVertexOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glDrawRangeElementsBaseVertexOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer, paramInt6);
    println("");
  }
  
  public void glEGLImageTargetRenderbufferStorageOES(int paramInt, long paramLong)
  {
    printIndent();
    print("glEGLImageTargetRenderbufferStorageOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glEGLImageTargetRenderbufferStorageOES(paramInt, paramLong);
    println("");
  }
  
  public void glEGLImageTargetTexture2DOES(int paramInt, long paramLong)
  {
    printIndent();
    print("glEGLImageTargetTexture2DOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glEGLImageTargetTexture2DOES(paramInt, paramLong);
    println("");
  }
  
  public void glEnable(int paramInt)
  {
    printIndent();
    print("glEnable(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glEnable(paramInt);
    println("");
  }
  
  public void glEnableDriverControlQCOM(int paramInt)
  {
    printIndent();
    print("glEnableDriverControlQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glEnableDriverControlQCOM(paramInt);
    println("");
  }
  
  public void glEnableVertexAttribArray(int paramInt)
  {
    printIndent();
    print("glEnableVertexAttribArray(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glEnableVertexAttribArray(paramInt);
    println("");
  }
  
  public void glEnablei(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glEnablei(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glEnablei(paramInt1, paramInt2);
    println("");
  }
  
  public void glEnableiEXT(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glEnableiEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glEnableiEXT(paramInt1, paramInt2);
    println("");
  }
  
  public void glEnableiNV(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glEnableiNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glEnableiNV(paramInt1, paramInt2);
    println("");
  }
  
  public void glEnableiOES(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glEnableiOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glEnableiOES(paramInt1, paramInt2);
    println("");
  }
  
  public void glEndConditionalRender()
  {
    printIndent();
    print("glEndConditionalRender()");
    downstreamGLES3.glEndConditionalRender();
    println("");
  }
  
  public void glEndQuery(int paramInt)
  {
    printIndent();
    print("glEndQuery(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glEndQuery(paramInt);
    println("");
  }
  
  public void glEndTilingQCOM(int paramInt)
  {
    printIndent();
    print("glEndTilingQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glEndTilingQCOM(paramInt);
    println("");
  }
  
  public void glEndTransformFeedback()
  {
    printIndent();
    print("glEndTransformFeedback()");
    downstreamGLES3.glEndTransformFeedback();
    println("");
  }
  
  public void glExtGetBufferPointervQCOM(int paramInt, PointerBuffer paramPointerBuffer)
  {
    printIndent();
    print("glExtGetBufferPointervQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + paramPointerBuffer + ")");
    downstreamGLES3.glExtGetBufferPointervQCOM(paramInt, paramPointerBuffer);
    println("");
  }
  
  public void glExtGetBuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetBuffersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtGetBuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetBuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetBuffersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glExtGetBuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetFramebuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetFramebuffersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glExtGetFramebuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetFramebuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetFramebuffersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtGetFramebuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glExtGetProgramBinarySourceQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramArrayOfByte, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glExtGetProgramBinarySourceQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramByteBuffer, paramIntBuffer);
    println("");
  }
  
  public void glExtGetProgramsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetProgramsQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glExtGetProgramsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetProgramsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetProgramsQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtGetProgramsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetRenderbuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetRenderbuffersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glExtGetRenderbuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetRenderbuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetRenderbuffersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtGetRenderbuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetShadersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetShadersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glExtGetShadersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetShadersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetShadersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtGetShadersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5)
  {
    printIndent();
    print("glExtGetTexLevelParameterivQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5);
    println("");
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glExtGetTexLevelParameterivQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer);
    println("");
  }
  
  public void glExtGetTexSubImageQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    printIndent();
    print("glExtGetTexSubImageQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glExtGetTexSubImageQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    println("");
  }
  
  public void glExtGetTexturesQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetTexturesQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtGetTexturesQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetTexturesQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetTexturesQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glExtGetTexturesQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public boolean glExtIsProgramBinaryQCOM(int paramInt)
  {
    printIndent();
    print("glExtIsProgramBinaryQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glExtIsProgramBinaryQCOM(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public void glExtTexObjectStateOverrideiQCOM(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glExtTexObjectStateOverrideiQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glExtTexObjectStateOverrideiQCOM(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public long glFenceSync(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glFenceSync(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    long l = downstreamGLES3.glFenceSync(paramInt1, paramInt2);
    println(" = " + l);
    return l;
  }
  
  public void glFinish()
  {
    printIndent();
    print("glFinish()");
    downstreamGLES3.glFinish();
    println("");
  }
  
  public void glFlush()
  {
    printIndent();
    print("glFlush()");
    downstreamGLES3.glFlush();
    println("");
  }
  
  public void glFlushMappedBufferRange(int paramInt, long paramLong1, long paramLong2)
  {
    printIndent();
    print("glFlushMappedBufferRange(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES3.glFlushMappedBufferRange(paramInt, paramLong1, paramLong2);
    println("");
  }
  
  public void glFragmentCoverageColorNV(int paramInt)
  {
    printIndent();
    print("glFragmentCoverageColorNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glFragmentCoverageColorNV(paramInt);
    println("");
  }
  
  public void glFramebufferParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glFramebufferParameteri(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glFramebufferParameteri(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glFramebufferRenderbuffer(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glFramebufferRenderbuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glFramebufferRenderbuffer(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glFramebufferTexture(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glFramebufferTexture(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTexture(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glFramebufferTexture2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glFramebufferTexture2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTexture2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glFramebufferTexture2DMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFramebufferTexture2DMultisampleEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTexture2DMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glFramebufferTexture2DMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFramebufferTexture2DMultisampleIMG(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTexture2DMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glFramebufferTexture3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFramebufferTexture3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTexture3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glFramebufferTextureEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glFramebufferTextureEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTextureEXT(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glFramebufferTextureLayer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glFramebufferTextureLayer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTextureLayer(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glFramebufferTextureMultiviewOVR(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFramebufferTextureMultiviewOVR(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTextureMultiviewOVR(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glFramebufferTextureOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glFramebufferTextureOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glFramebufferTextureOES(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glFrontFace(int paramInt)
  {
    printIndent();
    print("glFrontFace(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glFrontFace(paramInt);
    println("");
  }
  
  public void glGenBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenBuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenBuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenBuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenBuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenFramebuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenFramebuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenFramebuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenProgramPipelines(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenProgramPipelines(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenProgramPipelines(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenProgramPipelines(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenProgramPipelines(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenProgramPipelines(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenQueries(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenQueries(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenQueries(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenQueries(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenQueries(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenQueries(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenRenderbuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenRenderbuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenRenderbuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenSamplers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenSamplers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenSamplers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenSamplers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenSamplers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenSamplers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenTextures(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenTextures(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenTextures(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenTextures(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenTransformFeedbacks(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenTransformFeedbacks(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenTransformFeedbacks(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenTransformFeedbacks(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenTransformFeedbacks(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenTransformFeedbacks(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenVertexArrays(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenVertexArrays(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenVertexArrays(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenVertexArrays(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenVertexArrays(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenVertexArrays(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGenVertexArraysOES(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGenVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenerateMipmap(int paramInt)
  {
    printIndent();
    print("glGenerateMipmap(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glGenerateMipmap(paramInt);
    println("");
  }
  
  public void glGetActiveAttrib(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetActiveAttrib(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer3 + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetActiveAttrib(paramInt1, paramInt2, paramInt3, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer);
    println("");
  }
  
  public void glGetActiveAttrib(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt1, int paramInt4, int[] paramArrayOfInt2, int paramInt5, int[] paramArrayOfInt3, int paramInt6, byte[] paramArrayOfByte, int paramInt7)
  {
    printIndent();
    print("glGetActiveAttrib(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ")");
    downstreamGLES3.glGetActiveAttrib(paramInt1, paramInt2, paramInt3, paramArrayOfInt1, paramInt4, paramArrayOfInt2, paramInt5, paramArrayOfInt3, paramInt6, paramArrayOfByte, paramInt7);
    println("");
  }
  
  public void glGetActiveUniform(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt1, int paramInt4, int[] paramArrayOfInt2, int paramInt5, int[] paramArrayOfInt3, int paramInt6, byte[] paramArrayOfByte, int paramInt7)
  {
    printIndent();
    print("glGetActiveUniform(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ")");
    downstreamGLES3.glGetActiveUniform(paramInt1, paramInt2, paramInt3, paramArrayOfInt1, paramInt4, paramArrayOfInt2, paramInt5, paramArrayOfInt3, paramInt6, paramArrayOfByte, paramInt7);
    println("");
  }
  
  public void glGetActiveUniform(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetActiveUniform(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer3 + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetActiveUniform(paramInt1, paramInt2, paramInt3, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer);
    println("");
  }
  
  public void glGetActiveUniformBlockName(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4, byte[] paramArrayOfByte, int paramInt5)
  {
    printIndent();
    print("glGetActiveUniformBlockName(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glGetActiveUniformBlockName(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4, paramArrayOfByte, paramInt5);
    println("");
  }
  
  public void glGetActiveUniformBlockName(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetActiveUniformBlockName(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetActiveUniformBlockName(paramInt1, paramInt2, paramInt3, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetActiveUniformBlockiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetActiveUniformBlockiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetActiveUniformBlockiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetActiveUniformBlockiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetActiveUniformBlockiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetActiveUniformBlockiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glGetActiveUniformsiv(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int paramInt4, int[] paramArrayOfInt2, int paramInt5)
  {
    printIndent();
    print("glGetActiveUniformsiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glGetActiveUniformsiv(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramInt4, paramArrayOfInt2, paramInt5);
    println("");
  }
  
  public void glGetActiveUniformsiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, int paramInt3, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glGetActiveUniformsiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glGetActiveUniformsiv(paramInt1, paramInt2, paramIntBuffer1, paramInt3, paramIntBuffer2);
    println("");
  }
  
  public void glGetAttachedShaders(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4)
  {
    printIndent();
    print("glGetAttachedShaders(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetAttachedShaders(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4);
    println("");
  }
  
  public void glGetAttachedShaders(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glGetAttachedShaders(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glGetAttachedShaders(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2);
    println("");
  }
  
  public int glGetAttribLocation(int paramInt, String paramString)
  {
    printIndent();
    print("glGetAttribLocation(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.lang.String> " + paramString + ")");
    int i = downstreamGLES3.glGetAttribLocation(paramInt, paramString);
    println(" = " + i);
    return i;
  }
  
  public void glGetBooleani_v(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetBooleani_v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetBooleani_v(paramInt1, paramInt2, paramByteBuffer);
    println("");
  }
  
  public void glGetBooleani_v(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    printIndent();
    print("glGetBooleani_v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetBooleani_v(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    println("");
  }
  
  public void glGetBooleanv(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    printIndent();
    print("glGetBooleanv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGetBooleanv(paramInt1, paramArrayOfByte, paramInt2);
    println("");
  }
  
  public void glGetBooleanv(int paramInt, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetBooleanv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetBooleanv(paramInt, paramByteBuffer);
    println("");
  }
  
  public void glGetBufferParameteri64v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    printIndent();
    print("glGetBufferParameteri64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + paramLongBuffer + ")");
    downstreamGLES3.glGetBufferParameteri64v(paramInt1, paramInt2, paramLongBuffer);
    println("");
  }
  
  public void glGetBufferParameteri64v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    printIndent();
    print("glGetBufferParameteri64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetBufferParameteri64v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    println("");
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetBufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetBufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetBufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetBufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetCoverageModulationTableNV(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glGetCoverageModulationTableNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGetCoverageModulationTableNV(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glGetCoverageModulationTableNV(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetCoverageModulationTableNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetCoverageModulationTableNV(paramInt, paramFloatBuffer);
    println("");
  }
  
  public int glGetDebugMessageLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, IntBuffer paramIntBuffer4, IntBuffer paramIntBuffer5, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetDebugMessageLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer3 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer4 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer5 + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    int i = downstreamGLES3.glGetDebugMessageLog(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramIntBuffer4, paramIntBuffer5, paramByteBuffer);
    println(" = " + i);
    return i;
  }
  
  public int glGetDebugMessageLog(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4, int[] paramArrayOfInt3, int paramInt5, int[] paramArrayOfInt4, int paramInt6, int[] paramArrayOfInt5, int paramInt7, byte[] paramArrayOfByte, int paramInt8)
  {
    printIndent();
    print("glGetDebugMessageLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    int i = downstreamGLES3.glGetDebugMessageLog(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4, paramArrayOfInt3, paramInt5, paramArrayOfInt4, paramInt6, paramArrayOfInt5, paramInt7, paramArrayOfByte, paramInt8);
    println(" = " + i);
    return i;
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetDriverControlStringQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetDriverControlStringQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetDriverControlsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glGetDriverControlsQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetDriverControlsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glGetDriverControlsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glGetDriverControlsQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glGetDriverControlsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public int glGetError()
  {
    printIndent();
    print("glGetError()");
    int i = downstreamGLES3.glGetError();
    println(" = " + i);
    return i;
  }
  
  public void glGetFloati_vNV(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetFloati_vNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetFloati_vNV(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetFloati_vNV(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetFloati_vNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetFloati_vNV(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetFloatv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glGetFloatv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGetFloatv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glGetFloatv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetFloatv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetFloatv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public int glGetFragDataIndexEXT(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    printIndent();
    print("glGetFragDataIndexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    int i = downstreamGLES3.glGetFragDataIndexEXT(paramInt1, paramArrayOfByte, paramInt2);
    println(" = " + i);
    return i;
  }
  
  public int glGetFragDataIndexEXT(int paramInt, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetFragDataIndexEXT(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    int i = downstreamGLES3.glGetFragDataIndexEXT(paramInt, paramByteBuffer);
    println(" = " + i);
    return i;
  }
  
  public int glGetFragDataLocation(int paramInt, String paramString)
  {
    printIndent();
    print("glGetFragDataLocation(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.lang.String> " + paramString + ")");
    int i = downstreamGLES3.glGetFragDataLocation(paramInt, paramString);
    println(" = " + i);
    return i;
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetFramebufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetFramebufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetFramebufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetFramebufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetFramebufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetFramebufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public int glGetGraphicsResetStatus()
  {
    printIndent();
    print("glGetGraphicsResetStatus()");
    int i = downstreamGLES3.glGetGraphicsResetStatus();
    println(" = " + i);
    return i;
  }
  
  public void glGetInteger64i_v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    printIndent();
    print("glGetInteger64i_v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetInteger64i_v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    println("");
  }
  
  public void glGetInteger64i_v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    printIndent();
    print("glGetInteger64i_v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + paramLongBuffer + ")");
    downstreamGLES3.glGetInteger64i_v(paramInt1, paramInt2, paramLongBuffer);
    println("");
  }
  
  public void glGetInteger64v(int paramInt, LongBuffer paramLongBuffer)
  {
    printIndent();
    print("glGetInteger64v(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.LongBuffer> " + paramLongBuffer + ")");
    downstreamGLES3.glGetInteger64v(paramInt, paramLongBuffer);
    println("");
  }
  
  public void glGetInteger64v(int paramInt1, long[] paramArrayOfLong, int paramInt2)
  {
    printIndent();
    print("glGetInteger64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGetInteger64v(paramInt1, paramArrayOfLong, paramInt2);
    println("");
  }
  
  public void glGetIntegeri_v(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetIntegeri_v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetIntegeri_v(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetIntegeri_v(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetIntegeri_v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetIntegeri_v(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetIntegeri_vEXT(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetIntegeri_vEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetIntegeri_vEXT(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetIntegeri_vEXT(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetIntegeri_vEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetIntegeri_vEXT(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetIntegerv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetIntegerv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetIntegerv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGetIntegerv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGetIntegerv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glGetIntegerv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGetInternalformativ(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5)
  {
    printIndent();
    print("glGetInternalformativ(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glGetInternalformativ(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5);
    println("");
  }
  
  public void glGetInternalformativ(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetInternalformativ(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetInternalformativ(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer);
    println("");
  }
  
  public void glGetMultisamplefv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetMultisamplefv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetMultisamplefv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetMultisamplefv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetMultisamplefv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetMultisamplefv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetObjectLabel(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetObjectLabel(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetObjectLabel(paramInt1, paramInt2, paramInt3, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetObjectLabel(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4, byte[] paramArrayOfByte, int paramInt5)
  {
    printIndent();
    print("glGetObjectLabel(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glGetObjectLabel(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4, paramArrayOfByte, paramInt5);
    println("");
  }
  
  public void glGetObjectPtrLabel(Buffer paramBuffer, int paramInt1, int[] paramArrayOfInt, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    printIndent();
    print("glGetObjectPtrLabel(<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetObjectPtrLabel(paramBuffer, paramInt1, paramArrayOfInt, paramInt2, paramArrayOfByte, paramInt3);
    println("");
  }
  
  public void glGetObjectPtrLabel(Buffer paramBuffer, int paramInt, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetObjectPtrLabel(<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetObjectPtrLabel(paramBuffer, paramInt, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetProgramBinary(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, Buffer paramBuffer)
  {
    printIndent();
    print("glGetProgramBinary(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glGetProgramBinary(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2, paramBuffer);
    println("");
  }
  
  public void glGetProgramBinary(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4, Buffer paramBuffer)
  {
    printIndent();
    print("glGetProgramBinary(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glGetProgramBinary(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4, paramBuffer);
    println("");
  }
  
  public void glGetProgramInfoLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetProgramInfoLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetProgramInfoLog(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetProgramInfoLog(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetProgramInfoLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetProgramInfoLog(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetProgramInterfaceiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetProgramInterfaceiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetProgramInterfaceiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glGetProgramInterfaceiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetProgramInterfaceiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetProgramInterfaceiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetProgramPipelineInfoLog(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetProgramPipelineInfoLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetProgramPipelineInfoLog(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetProgramPipelineInfoLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetProgramPipelineInfoLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetProgramPipelineInfoLog(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetProgramPipelineiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetProgramPipelineiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetProgramPipelineiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetProgramPipelineiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetProgramPipelineiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetProgramPipelineiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public int glGetProgramResourceIndex(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetProgramResourceIndex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    int i = downstreamGLES3.glGetProgramResourceIndex(paramInt1, paramInt2, paramByteBuffer);
    println(" = " + i);
    return i;
  }
  
  public int glGetProgramResourceIndex(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    printIndent();
    print("glGetProgramResourceIndex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    int i = downstreamGLES3.glGetProgramResourceIndex(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    println(" = " + i);
    return i;
  }
  
  public int glGetProgramResourceLocation(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    printIndent();
    print("glGetProgramResourceLocation(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    int i = downstreamGLES3.glGetProgramResourceLocation(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    println(" = " + i);
    return i;
  }
  
  public int glGetProgramResourceLocation(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetProgramResourceLocation(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    int i = downstreamGLES3.glGetProgramResourceLocation(paramInt1, paramInt2, paramByteBuffer);
    println(" = " + i);
    return i;
  }
  
  public int glGetProgramResourceLocationIndexEXT(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    printIndent();
    print("glGetProgramResourceLocationIndexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    int i = downstreamGLES3.glGetProgramResourceLocationIndexEXT(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    println(" = " + i);
    return i;
  }
  
  public int glGetProgramResourceLocationIndexEXT(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetProgramResourceLocationIndexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    int i = downstreamGLES3.glGetProgramResourceLocationIndexEXT(paramInt1, paramInt2, paramByteBuffer);
    println(" = " + i);
    return i;
  }
  
  public void glGetProgramResourceName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetProgramResourceName(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetProgramResourceName(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetProgramResourceName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5, byte[] paramArrayOfByte, int paramInt6)
  {
    printIndent();
    print("glGetProgramResourceName(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glGetProgramResourceName(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5, paramArrayOfByte, paramInt6);
    println("");
  }
  
  public void glGetProgramResourceiv(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer1, int paramInt5, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3)
  {
    printIndent();
    print("glGetProgramResourceiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer3 + ")");
    downstreamGLES3.glGetProgramResourceiv(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer1, paramInt5, paramIntBuffer2, paramIntBuffer3);
    println("");
  }
  
  public void glGetProgramResourceiv(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt1, int paramInt5, int paramInt6, int[] paramArrayOfInt2, int paramInt7, int[] paramArrayOfInt3, int paramInt8)
  {
    printIndent();
    print("glGetProgramResourceiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    downstreamGLES3.glGetProgramResourceiv(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt1, paramInt5, paramInt6, paramArrayOfInt2, paramInt7, paramArrayOfInt3, paramInt8);
    println("");
  }
  
  public void glGetProgramiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetProgramiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetProgramiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetProgramiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetProgramiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetProgramiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetQueryObjecti64v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    printIndent();
    print("glGetQueryObjecti64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetQueryObjecti64v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    println("");
  }
  
  public void glGetQueryObjecti64v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    printIndent();
    print("glGetQueryObjecti64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + paramLongBuffer + ")");
    downstreamGLES3.glGetQueryObjecti64v(paramInt1, paramInt2, paramLongBuffer);
    println("");
  }
  
  public void glGetQueryObjectiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetQueryObjectiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetQueryObjectiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetQueryObjectiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetQueryObjectiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetQueryObjectiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetQueryObjectui64v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    printIndent();
    print("glGetQueryObjectui64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.LongBuffer> " + paramLongBuffer + ")");
    downstreamGLES3.glGetQueryObjectui64v(paramInt1, paramInt2, paramLongBuffer);
    println("");
  }
  
  public void glGetQueryObjectui64v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    printIndent();
    print("glGetQueryObjectui64v(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[J>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetQueryObjectui64v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    println("");
  }
  
  public void glGetQueryObjectuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetQueryObjectuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetQueryObjectuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetQueryObjectuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetQueryObjectuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetQueryObjectuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetQueryiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetQueryiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetQueryiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetQueryiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetQueryiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetQueryiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetRenderbufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetRenderbufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetSamplerParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetSamplerParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetSamplerParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetSamplerParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetSamplerParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetSamplerParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetSamplerParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetSamplerParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetSamplerParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetSamplerParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetSamplerParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetSamplerParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetSamplerParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetSamplerParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetSamplerParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetSamplerParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetSamplerParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetSamplerParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetSamplerParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetSamplerParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetSamplerParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetSamplerParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetSamplerParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetSamplerParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetShaderInfoLog(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetShaderInfoLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetShaderInfoLog(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetShaderInfoLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetShaderInfoLog(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetShaderInfoLog(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetShaderPrecisionFormat(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4)
  {
    printIndent();
    print("glGetShaderPrecisionFormat(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetShaderPrecisionFormat(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4);
    println("");
  }
  
  public void glGetShaderPrecisionFormat(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glGetShaderPrecisionFormat(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glGetShaderPrecisionFormat(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2);
    println("");
  }
  
  public void glGetShaderSource(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetShaderSource(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetShaderSource(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetShaderSource(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetShaderSource(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetShaderSource(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetShaderiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetShaderiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetShaderiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetShaderiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetShaderiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetShaderiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public String glGetString(int paramInt)
  {
    printIndent();
    print("glGetString(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    String str = downstreamGLES3.glGetString(paramInt);
    println(" = " + str);
    return str;
  }
  
  public String glGetStringi(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glGetStringi(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    String str = downstreamGLES3.glGetStringi(paramInt1, paramInt2);
    println(" = " + str);
    return str;
  }
  
  public void glGetSynciv(long paramLong, int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glGetSynciv(<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glGetSynciv(paramLong, paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2);
    println("");
  }
  
  public void glGetSynciv(long paramLong, int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4)
  {
    printIndent();
    print("glGetSynciv(<long> " + paramLong + ", " + "<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetSynciv(paramLong, paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4);
    println("");
  }
  
  public void glGetTexLevelParameterfv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glGetTexLevelParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetTexLevelParameterfv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glGetTexLevelParameterfv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetTexLevelParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetTexLevelParameterfv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glGetTexLevelParameteriv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexLevelParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetTexLevelParameteriv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glGetTexLevelParameteriv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetTexLevelParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetTexLevelParameteriv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetTexParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetTexParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetTexParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetTexParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetTexParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTransformFeedbackVarying(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt1, int paramInt4, int[] paramArrayOfInt2, int paramInt5, int[] paramArrayOfInt3, int paramInt6, byte[] paramArrayOfByte, int paramInt7)
  {
    printIndent();
    print("glGetTransformFeedbackVarying(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ")");
    downstreamGLES3.glGetTransformFeedbackVarying(paramInt1, paramInt2, paramInt3, paramArrayOfInt1, paramInt4, paramArrayOfInt2, paramInt5, paramArrayOfInt3, paramInt6, paramArrayOfByte, paramInt7);
    println("");
  }
  
  public void glGetTransformFeedbackVarying(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetTransformFeedbackVarying(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer3 + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetTransformFeedbackVarying(paramInt1, paramInt2, paramInt3, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer);
    println("");
  }
  
  public void glGetTranslatedShaderSourceANGLE(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetTranslatedShaderSourceANGLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetTranslatedShaderSourceANGLE(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetTranslatedShaderSourceANGLE(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetTranslatedShaderSourceANGLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glGetTranslatedShaderSourceANGLE(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public int glGetUniformBlockIndex(int paramInt, String paramString)
  {
    printIndent();
    print("glGetUniformBlockIndex(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.lang.String> " + paramString + ")");
    int i = downstreamGLES3.glGetUniformBlockIndex(paramInt, paramString);
    println(" = " + i);
    return i;
  }
  
  public void glGetUniformIndices(int paramInt1, int paramInt2, String[] paramArrayOfString, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetUniformIndices(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetUniformIndices(paramInt1, paramInt2, paramArrayOfString, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetUniformIndices(int paramInt1, int paramInt2, String[] paramArrayOfString, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetUniformIndices(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetUniformIndices(paramInt1, paramInt2, paramArrayOfString, paramIntBuffer);
    println("");
  }
  
  public int glGetUniformLocation(int paramInt, String paramString)
  {
    printIndent();
    print("glGetUniformLocation(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.lang.String> " + paramString + ")");
    int i = downstreamGLES3.glGetUniformLocation(paramInt, paramString);
    println(" = " + i);
    return i;
  }
  
  public void glGetUniformfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetUniformfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetUniformfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetUniformfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetUniformfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetUniformfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetUniformiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetUniformiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetUniformiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetUniformiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetUniformiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetUniformiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetUniformuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetUniformuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetUniformuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetUniformuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetUniformuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetUniformuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetVertexAttribIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetVertexAttribIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetVertexAttribIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetVertexAttribIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetVertexAttribIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetVertexAttribIiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetVertexAttribIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetVertexAttribIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetVertexAttribIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetVertexAttribIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetVertexAttribIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetVertexAttribIuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetVertexAttribfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetVertexAttribfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetVertexAttribfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetVertexAttribfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetVertexAttribfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetVertexAttribfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetVertexAttribiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetVertexAttribiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetVertexAttribiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetVertexAttribiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetVertexAttribiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glGetVertexAttribiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glGetnUniformfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetnUniformfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetnUniformiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetnUniformiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glGetnUniformuiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetnUniformuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glGetnUniformuiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetnUniformuiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetnUniformuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glGetnUniformuiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glHint(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glHint(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glHint(paramInt1, paramInt2);
    println("");
  }
  
  public void glInvalidateFramebuffer(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glInvalidateFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glInvalidateFramebuffer(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glInvalidateFramebuffer(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glInvalidateFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glInvalidateFramebuffer(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glInvalidateSubFramebuffer(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    printIndent();
    print("glInvalidateSubFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ")");
    downstreamGLES3.glInvalidateSubFramebuffer(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7);
    println("");
  }
  
  public void glInvalidateSubFramebuffer(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glInvalidateSubFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glInvalidateSubFramebuffer(paramInt1, paramInt2, paramIntBuffer, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public boolean glIsBuffer(int paramInt)
  {
    printIndent();
    print("glIsBuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsBuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsEnabled(int paramInt)
  {
    printIndent();
    print("glIsEnabled(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsEnabled(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsEnabledi(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glIsEnabledi(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsEnabledi(paramInt1, paramInt2);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsEnablediEXT(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glIsEnablediEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsEnablediEXT(paramInt1, paramInt2);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsEnablediNV(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glIsEnablediNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsEnablediNV(paramInt1, paramInt2);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsEnablediOES(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glIsEnablediOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsEnablediOES(paramInt1, paramInt2);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsFramebuffer(int paramInt)
  {
    printIndent();
    print("glIsFramebuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsFramebuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsProgram(int paramInt)
  {
    printIndent();
    print("glIsProgram(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsProgram(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsProgramPipeline(int paramInt)
  {
    printIndent();
    print("glIsProgramPipeline(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsProgramPipeline(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsQuery(int paramInt)
  {
    printIndent();
    print("glIsQuery(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsQuery(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsRenderbuffer(int paramInt)
  {
    printIndent();
    print("glIsRenderbuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsRenderbuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsSampler(int paramInt)
  {
    printIndent();
    print("glIsSampler(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsSampler(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsShader(int paramInt)
  {
    printIndent();
    print("glIsShader(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsShader(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsSync(long paramLong)
  {
    printIndent();
    print("glIsSync(<long> " + paramLong + ")");
    boolean bool = downstreamGLES3.glIsSync(paramLong);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsTexture(int paramInt)
  {
    printIndent();
    print("glIsTexture(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsTexture(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsTransformFeedback(int paramInt)
  {
    printIndent();
    print("glIsTransformFeedback(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsTransformFeedback(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsVertexArray(int paramInt)
  {
    printIndent();
    print("glIsVertexArray(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsVertexArray(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsVertexArrayOES(int paramInt)
  {
    printIndent();
    print("glIsVertexArrayOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glIsVertexArrayOES(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public void glLineWidth(float paramFloat)
  {
    printIndent();
    print("glLineWidth(<float> " + paramFloat + ")");
    downstreamGLES3.glLineWidth(paramFloat);
    println("");
  }
  
  public void glLinkProgram(int paramInt)
  {
    printIndent();
    print("glLinkProgram(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glLinkProgram(paramInt);
    println("");
  }
  
  public ByteBuffer glMapBuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glMapBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    ByteBuffer localByteBuffer = downstreamGLES3.glMapBuffer(paramInt1, paramInt2);
    println(" = " + localByteBuffer);
    return localByteBuffer;
  }
  
  public ByteBuffer glMapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    printIndent();
    print("glMapBufferRange(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    ByteBuffer localByteBuffer = downstreamGLES3.glMapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    println(" = " + localByteBuffer);
    return localByteBuffer;
  }
  
  public void glMemoryBarrier(int paramInt)
  {
    printIndent();
    print("glMemoryBarrier(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glMemoryBarrier(paramInt);
    println("");
  }
  
  public void glMemoryBarrierByRegion(int paramInt)
  {
    printIndent();
    print("glMemoryBarrierByRegion(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glMemoryBarrierByRegion(paramInt);
    println("");
  }
  
  public void glMinSampleShading(float paramFloat)
  {
    printIndent();
    print("glMinSampleShading(<float> " + paramFloat + ")");
    downstreamGLES3.glMinSampleShading(paramFloat);
    println("");
  }
  
  public void glMinSampleShadingOES(float paramFloat)
  {
    printIndent();
    print("glMinSampleShadingOES(<float> " + paramFloat + ")");
    downstreamGLES3.glMinSampleShadingOES(paramFloat);
    println("");
  }
  
  public void glMultiDrawArraysIndirectEXT(int paramInt1, Buffer paramBuffer, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glMultiDrawArraysIndirectEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glMultiDrawArraysIndirectEXT(paramInt1, paramBuffer, paramInt2, paramInt3);
    println("");
  }
  
  public void glMultiDrawElementsBaseVertexEXT(int paramInt1, IntBuffer paramIntBuffer1, int paramInt2, PointerBuffer paramPointerBuffer, int paramInt3, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glMultiDrawElementsBaseVertexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + paramPointerBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glMultiDrawElementsBaseVertexEXT(paramInt1, paramIntBuffer1, paramInt2, paramPointerBuffer, paramInt3, paramIntBuffer2);
    println("");
  }
  
  public void glMultiDrawElementsBaseVertexEXT(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int paramInt3, PointerBuffer paramPointerBuffer, int paramInt4, int[] paramArrayOfInt2, int paramInt5)
  {
    printIndent();
    print("glMultiDrawElementsBaseVertexEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + paramPointerBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glMultiDrawElementsBaseVertexEXT(paramInt1, paramArrayOfInt1, paramInt2, paramInt3, paramPointerBuffer, paramInt4, paramArrayOfInt2, paramInt5);
    println("");
  }
  
  public void glMultiDrawElementsBaseVertexOES(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int paramInt3, PointerBuffer paramPointerBuffer, int paramInt4, int[] paramArrayOfInt2, int paramInt5)
  {
    printIndent();
    print("glMultiDrawElementsBaseVertexOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + paramPointerBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glMultiDrawElementsBaseVertexOES(paramInt1, paramArrayOfInt1, paramInt2, paramInt3, paramPointerBuffer, paramInt4, paramArrayOfInt2, paramInt5);
    println("");
  }
  
  public void glMultiDrawElementsBaseVertexOES(int paramInt1, IntBuffer paramIntBuffer1, int paramInt2, PointerBuffer paramPointerBuffer, int paramInt3, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glMultiDrawElementsBaseVertexOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + paramPointerBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES3.glMultiDrawElementsBaseVertexOES(paramInt1, paramIntBuffer1, paramInt2, paramPointerBuffer, paramInt3, paramIntBuffer2);
    println("");
  }
  
  public void glMultiDrawElementsIndirectEXT(int paramInt1, int paramInt2, Buffer paramBuffer, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glMultiDrawElementsIndirectEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glMultiDrawElementsIndirectEXT(paramInt1, paramInt2, paramBuffer, paramInt3, paramInt4);
    println("");
  }
  
  public void glNamedFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glNamedFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glNamedFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glNamedFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glNamedFramebufferSampleLocationsfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glNamedFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glObjectLabel(int paramInt1, int paramInt2, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glObjectLabel(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glObjectLabel(paramInt1, paramInt2, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glObjectLabel(int paramInt1, int paramInt2, int paramInt3, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glObjectLabel(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glObjectLabel(paramInt1, paramInt2, paramInt3, paramByteBuffer);
    println("");
  }
  
  public void glObjectPtrLabel(Buffer paramBuffer, int paramInt, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glObjectPtrLabel(<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glObjectPtrLabel(paramBuffer, paramInt, paramByteBuffer);
    println("");
  }
  
  public void glObjectPtrLabel(Buffer paramBuffer, int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    printIndent();
    print("glObjectPtrLabel(<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glObjectPtrLabel(paramBuffer, paramInt1, paramArrayOfByte, paramInt2);
    println("");
  }
  
  public void glPatchParameteri(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPatchParameteri(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glPatchParameteri(paramInt1, paramInt2);
    println("");
  }
  
  public void glPatchParameteriEXT(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPatchParameteriEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glPatchParameteriEXT(paramInt1, paramInt2);
    println("");
  }
  
  public void glPatchParameteriOES(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPatchParameteriOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glPatchParameteriOES(paramInt1, paramInt2);
    println("");
  }
  
  public void glPauseTransformFeedback()
  {
    printIndent();
    print("glPauseTransformFeedback()");
    downstreamGLES3.glPauseTransformFeedback();
    println("");
  }
  
  public void glPixelStorei(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPixelStorei(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glPixelStorei(paramInt1, paramInt2);
    println("");
  }
  
  public void glPolygonModeNV(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPolygonModeNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glPolygonModeNV(paramInt1, paramInt2);
    println("");
  }
  
  public void glPolygonOffset(float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glPolygonOffset(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES3.glPolygonOffset(paramFloat1, paramFloat2);
    println("");
  }
  
  public void glPopDebugGroup()
  {
    printIndent();
    print("glPopDebugGroup()");
    downstreamGLES3.glPopDebugGroup();
    println("");
  }
  
  public void glPrimitiveBoundingBox(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6, float paramFloat7, float paramFloat8)
  {
    printIndent();
    print("glPrimitiveBoundingBox(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ", " + "<float> " + paramFloat5 + ", " + "<float> " + paramFloat6 + ", " + "<float> " + paramFloat7 + ", " + "<float> " + paramFloat8 + ")");
    downstreamGLES3.glPrimitiveBoundingBox(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6, paramFloat7, paramFloat8);
    println("");
  }
  
  public void glPrimitiveBoundingBoxEXT(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6, float paramFloat7, float paramFloat8)
  {
    printIndent();
    print("glPrimitiveBoundingBoxEXT(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ", " + "<float> " + paramFloat5 + ", " + "<float> " + paramFloat6 + ", " + "<float> " + paramFloat7 + ", " + "<float> " + paramFloat8 + ")");
    downstreamGLES3.glPrimitiveBoundingBoxEXT(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6, paramFloat7, paramFloat8);
    println("");
  }
  
  public void glPrimitiveBoundingBoxOES(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6, float paramFloat7, float paramFloat8)
  {
    printIndent();
    print("glPrimitiveBoundingBoxOES(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ", " + "<float> " + paramFloat5 + ", " + "<float> " + paramFloat6 + ", " + "<float> " + paramFloat7 + ", " + "<float> " + paramFloat8 + ")");
    downstreamGLES3.glPrimitiveBoundingBoxOES(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6, paramFloat7, paramFloat8);
    println("");
  }
  
  public void glProgramBinary(int paramInt1, int paramInt2, Buffer paramBuffer, int paramInt3)
  {
    printIndent();
    print("glProgramBinary(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glProgramBinary(paramInt1, paramInt2, paramBuffer, paramInt3);
    println("");
  }
  
  public void glProgramParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glProgramParameteri(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glProgramParameteri(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glProgramUniform1f(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glProgramUniform1f(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES3.glProgramUniform1f(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glProgramUniform1fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniform1fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniform1fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniform1fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniform1fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform1fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniform1i(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glProgramUniform1i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform1i(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glProgramUniform1iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform1iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform1iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform1iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform1iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform1iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform1ui(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glProgramUniform1ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform1ui(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glProgramUniform1uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform1uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform1uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform1uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform1uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform1uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform2f(int paramInt1, int paramInt2, float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glProgramUniform2f(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES3.glProgramUniform2f(paramInt1, paramInt2, paramFloat1, paramFloat2);
    println("");
  }
  
  public void glProgramUniform2fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniform2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniform2fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniform2fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniform2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform2fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniform2i(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glProgramUniform2i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform2i(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glProgramUniform2iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform2iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform2iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform2iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform2iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform2iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform2ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glProgramUniform2ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform2ui(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glProgramUniform2uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform2uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform2uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform2uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform2uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform2uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform3f(int paramInt1, int paramInt2, float paramFloat1, float paramFloat2, float paramFloat3)
  {
    printIndent();
    print("glProgramUniform3f(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ")");
    downstreamGLES3.glProgramUniform3f(paramInt1, paramInt2, paramFloat1, paramFloat2, paramFloat3);
    println("");
  }
  
  public void glProgramUniform3fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniform3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniform3fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniform3fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniform3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform3fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniform3i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glProgramUniform3i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform3i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glProgramUniform3iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform3iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform3iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform3iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform3iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform3iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform3ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glProgramUniform3ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform3ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glProgramUniform3uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform3uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform3uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform3uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform3uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform3uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform4f(int paramInt1, int paramInt2, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glProgramUniform4f(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES3.glProgramUniform4f(paramInt1, paramInt2, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glProgramUniform4fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniform4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniform4fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniform4fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniform4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform4fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniform4i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glProgramUniform4i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform4i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glProgramUniform4iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform4iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform4iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform4iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform4iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform4iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniform4ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glProgramUniform4ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform4ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glProgramUniform4uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glProgramUniform4uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniform4uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glProgramUniform4uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glProgramUniform4uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glProgramUniform4uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix2x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix2x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix2x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix2x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix2x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix2x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix2x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix2x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix3x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix3x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix3x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix3x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix3x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix3x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix3x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix3x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix4x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix4x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glProgramUniformMatrix4x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix4x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix4x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glProgramUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glProgramUniformMatrix4x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glProgramUniformMatrix4x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glProgramUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glProgramUniformMatrix4x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glPushDebugGroup(int paramInt1, int paramInt2, int paramInt3, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glPushDebugGroup(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES3.glPushDebugGroup(paramInt1, paramInt2, paramInt3, paramByteBuffer);
    println("");
  }
  
  public void glPushDebugGroup(int paramInt1, int paramInt2, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glPushDebugGroup(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glPushDebugGroup(paramInt1, paramInt2, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glQueryCounter(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glQueryCounter(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glQueryCounter(paramInt1, paramInt2);
    println("");
  }
  
  public void glRasterSamplesEXT(int paramInt, boolean paramBoolean)
  {
    printIndent();
    print("glRasterSamplesEXT(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glRasterSamplesEXT(paramInt, paramBoolean);
    println("");
  }
  
  public void glReadBuffer(int paramInt)
  {
    printIndent();
    print("glReadBuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glReadBuffer(paramInt);
    println("");
  }
  
  public void glReadBufferIndexedEXT(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glReadBufferIndexedEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glReadBufferIndexedEXT(paramInt1, paramInt2);
    println("");
  }
  
  public void glReadBufferNV(int paramInt)
  {
    printIndent();
    print("glReadBufferNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glReadBufferNV(paramInt);
    println("");
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, long paramLong)
  {
    printIndent();
    print("glReadPixels(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramLong);
    println("");
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, Buffer paramBuffer)
  {
    printIndent();
    print("glReadPixels(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBuffer);
    println("");
  }
  
  public void glReadnPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    printIndent();
    print("glReadnPixels(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glReadnPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    println("");
  }
  
  public void glReleaseShaderCompiler()
  {
    printIndent();
    print("glReleaseShaderCompiler()");
    downstreamGLES3.glReleaseShaderCompiler();
    println("");
  }
  
  public void glRenderbufferStorage(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glRenderbufferStorage(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glRenderbufferStorage(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glRenderbufferStorageMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisample(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glRenderbufferStorageMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glRenderbufferStorageMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisampleEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glRenderbufferStorageMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glRenderbufferStorageMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisampleIMG(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glRenderbufferStorageMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glRenderbufferStorageMultisampleNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisampleNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glRenderbufferStorageMultisampleNV(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glResolveDepthValuesNV()
  {
    printIndent();
    print("glResolveDepthValuesNV()");
    downstreamGLES3.glResolveDepthValuesNV();
    println("");
  }
  
  public void glResolveMultisampleFramebuffer()
  {
    printIndent();
    print("glResolveMultisampleFramebuffer()");
    downstreamGLES3.glResolveMultisampleFramebuffer();
    println("");
  }
  
  public void glResumeTransformFeedback()
  {
    printIndent();
    print("glResumeTransformFeedback()");
    downstreamGLES3.glResumeTransformFeedback();
    println("");
  }
  
  public void glSampleCoverage(float paramFloat, boolean paramBoolean)
  {
    printIndent();
    print("glSampleCoverage(<float> " + paramFloat + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glSampleCoverage(paramFloat, paramBoolean);
    println("");
  }
  
  public void glSampleMaski(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glSampleMaski(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glSampleMaski(paramInt1, paramInt2);
    println("");
  }
  
  public void glSamplerParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glSamplerParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glSamplerParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glSamplerParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glSamplerParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glSamplerParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glSamplerParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glSamplerParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glSamplerParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glSamplerParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glSamplerParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glSamplerParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glSamplerParameterf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glSamplerParameterf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES3.glSamplerParameterf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glSamplerParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glSamplerParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glSamplerParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glSamplerParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glSamplerParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glSamplerParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glSamplerParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glSamplerParameteri(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glSamplerParameteri(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glSamplerParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glSamplerParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glSamplerParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glSamplerParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glSamplerParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glSamplerParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glScissor(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glScissor(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glScissor(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glScissorArrayvNV(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glScissorArrayvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glScissorArrayvNV(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glScissorArrayvNV(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glScissorArrayvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glScissorArrayvNV(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glScissorIndexedNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glScissorIndexedNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glScissorIndexedNV(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glScissorIndexedvNV(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glScissorIndexedvNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glScissorIndexedvNV(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glScissorIndexedvNV(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glScissorIndexedvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glScissorIndexedvNV(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glShaderBinary(int paramInt1, int[] paramArrayOfInt, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    printIndent();
    print("glShaderBinary(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glShaderBinary(paramInt1, paramArrayOfInt, paramInt2, paramInt3, paramBuffer, paramInt4);
    println("");
  }
  
  public void glShaderBinary(int paramInt1, IntBuffer paramIntBuffer, int paramInt2, Buffer paramBuffer, int paramInt3)
  {
    printIndent();
    print("glShaderBinary(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glShaderBinary(paramInt1, paramIntBuffer, paramInt2, paramBuffer, paramInt3);
    println("");
  }
  
  public void glShaderSource(int paramInt1, int paramInt2, String[] paramArrayOfString, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glShaderSource(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glShaderSource(paramInt1, paramInt2, paramArrayOfString, paramIntBuffer);
    println("");
  }
  
  public void glShaderSource(int paramInt1, int paramInt2, String[] paramArrayOfString, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glShaderSource(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glShaderSource(paramInt1, paramInt2, paramArrayOfString, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glStartTilingQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glStartTilingQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glStartTilingQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glStencilFunc(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glStencilFunc(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glStencilFunc(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glStencilFuncSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glStencilFuncSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glStencilFuncSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glStencilMask(int paramInt)
  {
    printIndent();
    print("glStencilMask(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glStencilMask(paramInt);
    println("");
  }
  
  public void glStencilMaskSeparate(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glStencilMaskSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glStencilMaskSeparate(paramInt1, paramInt2);
    println("");
  }
  
  public void glStencilOp(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glStencilOp(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glStencilOp(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glStencilOpSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glStencilOpSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glStencilOpSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glSubpixelPrecisionBiasNV(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glSubpixelPrecisionBiasNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glSubpixelPrecisionBiasNV(paramInt1, paramInt2);
    println("");
  }
  
  public void glTexBuffer(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexBuffer(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexBufferEXT(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexBufferEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexBufferEXT(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexBufferOES(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexBufferOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexBufferOES(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexBufferRange(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    printIndent();
    print("glTexBufferRange(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES3.glTexBufferRange(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    println("");
  }
  
  public void glTexBufferRangeEXT(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    printIndent();
    print("glTexBufferRangeEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES3.glTexBufferRangeEXT(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    println("");
  }
  
  public void glTexBufferRangeOES(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    printIndent();
    print("glTexBufferRangeOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES3.glTexBufferRangeOES(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    println("");
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glTexImage2DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, boolean paramBoolean)
  {
    printIndent();
    print("glTexImage2DMultisample(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glTexImage2DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBoolean);
    println("");
  }
  
  public void glTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, long paramLong)
  {
    printIndent();
    print("glTexImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramLong);
    println("");
  }
  
  public void glTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, Buffer paramBuffer)
  {
    printIndent();
    print("glTexImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramBuffer);
    println("");
  }
  
  public void glTexImage3DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, boolean paramBoolean)
  {
    printIndent();
    print("glTexImage3DMultisample(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glTexImage3DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBoolean);
    println("");
  }
  
  public void glTexPageCommitmentEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, boolean paramBoolean)
  {
    printIndent();
    print("glTexPageCommitmentEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glTexPageCommitmentEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBoolean);
    println("");
  }
  
  public void glTexParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glTexParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexParameterIiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glTexParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexParameterIuiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexParameterf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glTexParameterf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES3.glTexParameterf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glTexParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexParameteri(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexParameteri(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexStorage1D(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glTexStorage1D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glTexStorage1D(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glTexStorage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glTexStorage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glTexStorage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glTexStorage2DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, boolean paramBoolean)
  {
    printIndent();
    print("glTexStorage2DMultisample(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glTexStorage2DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBoolean);
    println("");
  }
  
  public void glTexStorage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glTexStorage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glTexStorage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glTexStorage3DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, boolean paramBoolean)
  {
    printIndent();
    print("glTexStorage3DMultisample(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glTexStorage3DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBoolean);
    println("");
  }
  
  public void glTexStorage3DMultisampleOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, boolean paramBoolean)
  {
    printIndent();
    print("glTexStorage3DMultisampleOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES3.glTexStorage3DMultisampleOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBoolean);
    println("");
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, long paramLong)
  {
    printIndent();
    print("glTexSubImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramLong);
    println("");
  }
  
  public void glTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    printIndent();
    print("glTexSubImage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    println("");
  }
  
  public void glTextureStorage1DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glTextureStorage1DEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glTextureStorage1DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glTextureStorage2DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glTextureStorage2DEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES3.glTextureStorage2DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glTextureStorage3DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    printIndent();
    print("glTextureStorage3DEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ")");
    downstreamGLES3.glTextureStorage3DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7);
    println("");
  }
  
  public void glTextureView(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    printIndent();
    print("glTextureView(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    downstreamGLES3.glTextureView(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    println("");
  }
  
  public void glTransformFeedbackVaryings(int paramInt1, int paramInt2, String[] paramArrayOfString, int paramInt3)
  {
    printIndent();
    print("glTransformFeedbackVaryings(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[Ljava.lang.String;>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glTransformFeedbackVaryings(paramInt1, paramInt2, paramArrayOfString, paramInt3);
    println("");
  }
  
  public void glUniform(GLUniformData paramGLUniformData)
  {
    printIndent();
    print("glUniform(<com.jogamp.opengl.GLUniformData> " + paramGLUniformData + ")");
    downstreamGLES3.glUniform(paramGLUniformData);
    println("");
  }
  
  public void glUniform1f(int paramInt, float paramFloat)
  {
    printIndent();
    print("glUniform1f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES3.glUniform1f(paramInt, paramFloat);
    println("");
  }
  
  public void glUniform1fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniform1fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniform1fv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glUniform1fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniform1fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform1fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniform1i(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glUniform1i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glUniform1i(paramInt1, paramInt2);
    println("");
  }
  
  public void glUniform1iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform1iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform1iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform1iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform1iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform1iv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform1ui(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glUniform1ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glUniform1ui(paramInt1, paramInt2);
    println("");
  }
  
  public void glUniform1uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform1uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform1uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform1uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform1uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform1uiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform2f(int paramInt, float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glUniform2f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES3.glUniform2f(paramInt, paramFloat1, paramFloat2);
    println("");
  }
  
  public void glUniform2fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniform2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniform2fv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glUniform2fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniform2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform2fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniform2i(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glUniform2i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform2i(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glUniform2iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform2iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform2iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform2iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform2iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform2iv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform2ui(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glUniform2ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform2ui(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glUniform2uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform2uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform2uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform2uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform2uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform2uiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform3f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3)
  {
    printIndent();
    print("glUniform3f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ")");
    downstreamGLES3.glUniform3f(paramInt, paramFloat1, paramFloat2, paramFloat3);
    println("");
  }
  
  public void glUniform3fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniform3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform3fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniform3fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniform3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniform3fv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glUniform3i(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glUniform3i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glUniform3i(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glUniform3iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform3iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform3iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform3iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform3iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform3iv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform3ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glUniform3ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glUniform3ui(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glUniform3uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform3uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform3uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform3uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform3uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform3uiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform4f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glUniform4f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES3.glUniform4f(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glUniform4fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniform4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform4fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniform4fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniform4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniform4fv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glUniform4i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glUniform4i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glUniform4i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glUniform4iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform4iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform4iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform4iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform4iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform4iv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniform4ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glUniform4ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glUniform4ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glUniform4uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glUniform4uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniform4uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glUniform4uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glUniform4uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glUniform4uiv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glUniformBlockBinding(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glUniformBlockBinding(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformBlockBinding(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glUniformMatrix2fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix2fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix2fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix2fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix2x3fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix2x3fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix2x3fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix2x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix2x3fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix2x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix2x3fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix2x3fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix2x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix2x3fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix2x3fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix2x4fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix2x4fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix2x4fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix2x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix2x4fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix2x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix2x4fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix2x4fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix2x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix2x4fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix2x4fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix3fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix3fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix3fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix3fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix3x2fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix3x2fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix3x2fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix3x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix3x2fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix3x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix3x2fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix3x2fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix3x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix3x2fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix3x2fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix3x4fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix3x4fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix3x4fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix3x4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix3x4fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix3x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix3x4fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix3x4fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix3x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix3x4fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix3x4fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix4fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix4fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix4fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix4fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix4x2fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix4x2fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix4x2fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix4x2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix4x2fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix4x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix4x2fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix4x2fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix4x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix4x2fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix4x2fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix4x3fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix4x3fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public void glUniformMatrix4x3fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix4x3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix4x3fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix4x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glUniformMatrix4x3fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUniformMatrix4x3fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glUniformMatrix4x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glUniformMatrix4x3fvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glUniformMatrix4x3fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    println("");
  }
  
  public boolean glUnmapBuffer(int paramInt)
  {
    printIndent();
    print("glUnmapBuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES3.glUnmapBuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public void glUseProgram(int paramInt)
  {
    printIndent();
    print("glUseProgram(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glUseProgram(paramInt);
    println("");
  }
  
  public void glUseProgramStages(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glUseProgramStages(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glUseProgramStages(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glValidateProgram(int paramInt)
  {
    printIndent();
    print("glValidateProgram(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glValidateProgram(paramInt);
    println("");
  }
  
  public void glValidateProgramPipeline(int paramInt)
  {
    printIndent();
    print("glValidateProgramPipeline(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES3.glValidateProgramPipeline(paramInt);
    println("");
  }
  
  public void glVertexAttrib1f(int paramInt, float paramFloat)
  {
    printIndent();
    print("glVertexAttrib1f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES3.glVertexAttrib1f(paramInt, paramFloat);
    println("");
  }
  
  public void glVertexAttrib1fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glVertexAttrib1fv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glVertexAttrib1fv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glVertexAttrib1fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glVertexAttrib1fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttrib1fv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glVertexAttrib2f(int paramInt, float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glVertexAttrib2f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES3.glVertexAttrib2f(paramInt, paramFloat1, paramFloat2);
    println("");
  }
  
  public void glVertexAttrib2fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glVertexAttrib2fv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glVertexAttrib2fv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glVertexAttrib2fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glVertexAttrib2fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttrib2fv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glVertexAttrib3f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3)
  {
    printIndent();
    print("glVertexAttrib3f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ")");
    downstreamGLES3.glVertexAttrib3f(paramInt, paramFloat1, paramFloat2, paramFloat3);
    println("");
  }
  
  public void glVertexAttrib3fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glVertexAttrib3fv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glVertexAttrib3fv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glVertexAttrib3fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glVertexAttrib3fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttrib3fv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glVertexAttrib4f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glVertexAttrib4f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES3.glVertexAttrib4f(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glVertexAttrib4fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glVertexAttrib4fv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glVertexAttrib4fv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glVertexAttrib4fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glVertexAttrib4fv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttrib4fv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glVertexAttribBinding(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glVertexAttribBinding(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribBinding(paramInt1, paramInt2);
    println("");
  }
  
  public void glVertexAttribDivisor(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glVertexAttribDivisor(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribDivisor(paramInt1, paramInt2);
    println("");
  }
  
  public void glVertexAttribDivisorANGLE(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glVertexAttribDivisorANGLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribDivisorANGLE(paramInt1, paramInt2);
    println("");
  }
  
  public void glVertexAttribDivisorNV(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glVertexAttribDivisorNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribDivisorNV(paramInt1, paramInt2);
    println("");
  }
  
  public void glVertexAttribFormat(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4)
  {
    printIndent();
    print("glVertexAttribFormat(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribFormat(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4);
    println("");
  }
  
  public void glVertexAttribI4i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glVertexAttribI4i(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribI4i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glVertexAttribI4iv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glVertexAttribI4iv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glVertexAttribI4iv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glVertexAttribI4iv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glVertexAttribI4iv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribI4iv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glVertexAttribI4ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glVertexAttribI4ui(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribI4ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glVertexAttribI4uiv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glVertexAttribI4uiv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES3.glVertexAttribI4uiv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glVertexAttribI4uiv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glVertexAttribI4uiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribI4uiv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glVertexAttribIFormat(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glVertexAttribIFormat(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glVertexAttribIFormat(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glVertexAttribIPointer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, long paramLong)
  {
    printIndent();
    print("glVertexAttribIPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glVertexAttribIPointer(paramInt1, paramInt2, paramInt3, paramInt4, paramLong);
    println("");
  }
  
  public void glVertexAttribIPointer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, Buffer paramBuffer)
  {
    printIndent();
    print("glVertexAttribIPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glVertexAttribIPointer(paramInt1, paramInt2, paramInt3, paramInt4, paramBuffer);
    println("");
  }
  
  public void glVertexAttribPointer(GLArrayData paramGLArrayData)
  {
    printIndent();
    print("glVertexAttribPointer(<com.jogamp.opengl.GLArrayData> " + paramGLArrayData + ")");
    downstreamGLES3.glVertexAttribPointer(paramGLArrayData);
    println("");
  }
  
  public void glVertexAttribPointer(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4, Buffer paramBuffer)
  {
    printIndent();
    print("glVertexAttribPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES3.glVertexAttribPointer(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4, paramBuffer);
    println("");
  }
  
  public void glVertexAttribPointer(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4, long paramLong)
  {
    printIndent();
    print("glVertexAttribPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<boolean> " + paramBoolean + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES3.glVertexAttribPointer(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4, paramLong);
    println("");
  }
  
  public void glVertexBindingDivisor(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glVertexBindingDivisor(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glVertexBindingDivisor(paramInt1, paramInt2);
    println("");
  }
  
  public void glViewport(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glViewport(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES3.glViewport(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glViewportArrayvNV(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glViewportArrayvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glViewportArrayvNV(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glViewportArrayvNV(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glViewportArrayvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES3.glViewportArrayvNV(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glViewportIndexedfNV(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glViewportIndexedfNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES3.glViewportIndexedfNV(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glViewportIndexedfvNV(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glViewportIndexedfvNV(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES3.glViewportIndexedfvNV(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glViewportIndexedfvNV(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glViewportIndexedfvNV(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES3.glViewportIndexedfvNV(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glWaitSync(long paramLong1, int paramInt, long paramLong2)
  {
    printIndent();
    print("glWaitSync(<long> " + paramLong1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES3.glWaitSync(paramLong1, paramInt, paramLong2);
    println("");
  }
  
  public boolean hasBasicFBOSupport()
  {
    return downstreamGLES3.hasBasicFBOSupport();
  }
  
  public boolean hasFullFBOSupport()
  {
    return downstreamGLES3.hasFullFBOSupport();
  }
  
  public boolean hasGLSL()
  {
    return downstreamGLES3.hasGLSL();
  }
  
  public boolean isExtensionAvailable(String paramString)
  {
    return downstreamGLES3.isExtensionAvailable(paramString);
  }
  
  public boolean isFunctionAvailable(String paramString)
  {
    return downstreamGLES3.isFunctionAvailable(paramString);
  }
  
  public boolean isGL()
  {
    return true;
  }
  
  public boolean isGL2()
  {
    return downstreamGLES3.isGL2();
  }
  
  public boolean isGL2ES1()
  {
    return downstreamGLES3.isGL2ES1();
  }
  
  public boolean isGL2ES2()
  {
    return downstreamGLES3.isGL2ES2();
  }
  
  public boolean isGL2ES3()
  {
    return downstreamGLES3.isGL2ES3();
  }
  
  public boolean isGL2GL3()
  {
    return downstreamGLES3.isGL2GL3();
  }
  
  public boolean isGL3()
  {
    return downstreamGLES3.isGL3();
  }
  
  public boolean isGL3ES3()
  {
    return downstreamGLES3.isGL3ES3();
  }
  
  public boolean isGL3bc()
  {
    return downstreamGLES3.isGL3bc();
  }
  
  public boolean isGL3core()
  {
    return downstreamGLES3.isGL3core();
  }
  
  public boolean isGL4()
  {
    return downstreamGLES3.isGL4();
  }
  
  public boolean isGL4ES3()
  {
    return downstreamGLES3.isGL4ES3();
  }
  
  public boolean isGL4bc()
  {
    return downstreamGLES3.isGL4bc();
  }
  
  public boolean isGL4core()
  {
    return downstreamGLES3.isGL4core();
  }
  
  public boolean isGLES()
  {
    return downstreamGLES3.isGLES();
  }
  
  public boolean isGLES1()
  {
    return downstreamGLES3.isGLES1();
  }
  
  public boolean isGLES2()
  {
    return downstreamGLES3.isGLES2();
  }
  
  public boolean isGLES2Compatible()
  {
    return downstreamGLES3.isGLES2Compatible();
  }
  
  public boolean isGLES3()
  {
    return downstreamGLES3.isGLES3();
  }
  
  public boolean isGLES31Compatible()
  {
    return downstreamGLES3.isGLES31Compatible();
  }
  
  public boolean isGLES32Compatible()
  {
    return downstreamGLES3.isGLES32Compatible();
  }
  
  public boolean isGLES3Compatible()
  {
    return downstreamGLES3.isGLES3Compatible();
  }
  
  public boolean isGLcore()
  {
    return downstreamGLES3.isGLcore();
  }
  
  public boolean isNPOTTextureAvailable()
  {
    return downstreamGLES3.isNPOTTextureAvailable();
  }
  
  public boolean isPBOPackBound()
  {
    return downstreamGLES3.isPBOPackBound();
  }
  
  public boolean isPBOUnpackBound()
  {
    return downstreamGLES3.isPBOUnpackBound();
  }
  
  public boolean isTextureFormatBGRA8888Available()
  {
    return downstreamGLES3.isTextureFormatBGRA8888Available();
  }
  
  public boolean isVBOArrayBound()
  {
    return downstreamGLES3.isVBOArrayBound();
  }
  
  public boolean isVBOElementArrayBound()
  {
    return downstreamGLES3.isVBOElementArrayBound();
  }
  
  public GLBufferStorage mapBuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("mapBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    GLBufferStorage localGLBufferStorage = downstreamGLES3.mapBuffer(paramInt1, paramInt2);
    println(" = " + localGLBufferStorage);
    return localGLBufferStorage;
  }
  
  public GLBufferStorage mapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    printIndent();
    print("mapBufferRange(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    GLBufferStorage localGLBufferStorage = downstreamGLES3.mapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    println(" = " + localGLBufferStorage);
    return localGLBufferStorage;
  }
  
  public void setSwapInterval(int paramInt)
  {
    downstreamGLES3.setSwapInterval(paramInt);
  }
  
  public String toString() {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("TraceGLES3 [this 0x" + Integer.toHexString(hashCode()) + " implementing com.jogamp.opengl.GLES3,\n\t");
    localStringBuilder.append(" downstream: " + downstreamGLES3.toString() + "\n\t]");
    return localStringBuilder.toString();
  }
  
  private int indent = 0;
  private GLES3 downstreamGLES3;
  
  protected String dumpArray(Object paramObject) { if (paramObject == null) return "[null]";
    StringBuilder localStringBuilder = new StringBuilder("[");
    int i = Array.getLength(paramObject);
    int j = Math.min(i, 16);
    for (int k = 0; k < j; k++) {
      localStringBuilder.append(Array.get(paramObject, k));
      if (k < j - 1)
        localStringBuilder.append(',');
    }
    if (i > 16)
      localStringBuilder.append("...").append(i);
    localStringBuilder.append(']');
    return localStringBuilder.toString();
  }
  
  protected void print(String paramString) {
    stream.print(paramString);
  }
  
  protected void println(String paramString) {
    stream.println(paramString);
  }
  
  protected void printIndent() {
    for (int i = 0; i < indent; i++) stream.print(' ');
  }
}
