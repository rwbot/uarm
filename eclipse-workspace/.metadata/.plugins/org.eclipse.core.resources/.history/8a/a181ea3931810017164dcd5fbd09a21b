package com.jogamp.opengl;

import com.jogamp.common.nio.PointerBuffer;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

public abstract interface GL3
  extends GL3ES3, GL2GL3
{
  public static final int GL_PATCH_DEFAULT_INNER_LEVEL = 36467;
  public static final int GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 33375;
  public static final int GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS = 36767;
  public static final int GL_NUM_COMPATIBLE_SUBROUTINES = 36426;
  public static final int GL_DOUBLE_MAT2x4 = 36682;
  public static final int GL_DOUBLE_MAT2x3 = 36681;
  public static final int GL_SRC1_COLOR = 35065;
  public static final int GL_LINES_ADJACENCY_ARB = 10;
  public static final int GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 36319;
  public static final int GL_SHADER_INCLUDE_ARB = 36270;
  public static final int GL_DOUBLE_VEC4 = 36862;
  public static final int GL_DOUBLE_VEC3 = 36861;
  public static final int GL_DOUBLE_VEC2 = 36860;
  public static final int GL_LINE_STRIP_ADJACENCY_ARB = 11;
  public static final int GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 36263;
  public static final int GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 36494;
  public static final int GL_VIEWPORT_BOUNDS_RANGE = 33373;
  public static final int GL_COMPATIBLE_SUBROUTINES = 36427;
  public static final int GL_DEPTH_CLAMP = 34383;
  public static final int GL_TRIANGLE_STRIP_ADJACENCY_ARB = 13;
  public static final int GL_SYNC_CL_EVENT_ARB = 33344;
  public static final int GL_TRIANGLES_ADJACENCY_ARB = 12;
  public static final int GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 36265;
  public static final int GL_ONE_MINUS_SRC1_COLOR = 35066;
  public static final int GL_ACTIVE_SUBROUTINE_UNIFORMS = 36326;
  public static final int GL_PATCH_DEFAULT_OUTER_LEVEL = 36468;
  public static final int GL_DOUBLE_MAT4 = 36680;
  public static final int GL_DOUBLE_MAT3 = 36679;
  public static final int GL_DOUBLE_MAT2 = 36678;
  public static final int GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 36317;
  public static final int GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 36425;
  public static final int GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 36492;
  public static final int GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 36493;
  public static final int GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 35881;
  public static final int GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 2;
  public static final int GL_GEOMETRY_OUTPUT_TYPE_ARB = 36316;
  public static final int GL_GEOMETRY_VERTICES_OUT_ARB = 36314;
  public static final int GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 36328;
  public static final int GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 36320;
  public static final int GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 36424;
  public static final int GL_NAMED_STRING_LENGTH_ARB = 36329;
  public static final int GL_DOUBLE_MAT4x2 = 36685;
  public static final int GL_DOUBLE_MAT4x3 = 36686;
  public static final int GL_GEOMETRY_INPUT_TYPE_ARB = 36315;
  public static final int GL_ONE_MINUS_SRC1_ALPHA = 35067;
  public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 34032;
  public static final int GL_PROGRAM_POINT_SIZE_ARB = 34370;
  public static final int GL_GEOMETRY_SHADER_ARB = 36313;
  public static final int GL_ACTIVE_SUBROUTINES = 36325;
  public static final int GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 36318;
  public static final int GL_VIEWPORT_SUBPIXEL_BITS = 33372;
  public static final int GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 36321;
  public static final int GL_SYNC_CL_EVENT_COMPLETE_ARB = 33345;
  public static final int GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 36264;
  public static final int GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 35068;
  public static final int GL_PROGRAM_POINT_SIZE = 34370;
  public static final int GL_CONTEXT_CORE_PROFILE_BIT = 1;
  public static final int GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 36495;
  public static final int GL_NAMED_STRING_TYPE_ARB = 36330;
  public static final int GL_DOUBLE_MAT3x4 = 36684;
  public static final int GL_DOUBLE_MAT3x2 = 36683;
  public static final int GL_CONTEXT_PROFILE_MASK = 37158;
  public static final int GL_MAX_SUBROUTINES = 36327;
  public static final int GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 36423;
  public static final int GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 34033;
  public static final int GL_MAX_VIEWPORTS = 33371;
  
  public abstract void glMultiDrawElementsBaseVertex(int paramInt1, IntBuffer paramIntBuffer1, int paramInt2, PointerBuffer paramPointerBuffer, int paramInt3, IntBuffer paramIntBuffer2);
  
  public abstract void glBindFragDataLocationIndexed(int paramInt1, int paramInt2, int paramInt3, String paramString);
  
  public abstract int glGetFragDataIndex(int paramInt, String paramString);
  
  public abstract void glVertexAttribP1ui(int paramInt1, int paramInt2, boolean paramBoolean, int paramInt3);
  
  public abstract void glVertexAttribP1uiv(int paramInt1, int paramInt2, boolean paramBoolean, IntBuffer paramIntBuffer);
  
  public abstract void glVertexAttribP1uiv(int paramInt1, int paramInt2, boolean paramBoolean, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glVertexAttribP2ui(int paramInt1, int paramInt2, boolean paramBoolean, int paramInt3);
  
  public abstract void glVertexAttribP2uiv(int paramInt1, int paramInt2, boolean paramBoolean, IntBuffer paramIntBuffer);
  
  public abstract void glVertexAttribP2uiv(int paramInt1, int paramInt2, boolean paramBoolean, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glVertexAttribP3ui(int paramInt1, int paramInt2, boolean paramBoolean, int paramInt3);
  
  public abstract void glVertexAttribP3uiv(int paramInt1, int paramInt2, boolean paramBoolean, IntBuffer paramIntBuffer);
  
  public abstract void glVertexAttribP3uiv(int paramInt1, int paramInt2, boolean paramBoolean, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glVertexAttribP4ui(int paramInt1, int paramInt2, boolean paramBoolean, int paramInt3);
  
  public abstract void glVertexAttribP4uiv(int paramInt1, int paramInt2, boolean paramBoolean, IntBuffer paramIntBuffer);
  
  public abstract void glVertexAttribP4uiv(int paramInt1, int paramInt2, boolean paramBoolean, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glUniform1d(int paramInt, double paramDouble);
  
  public abstract void glUniform2d(int paramInt, double paramDouble1, double paramDouble2);
  
  public abstract void glUniform3d(int paramInt, double paramDouble1, double paramDouble2, double paramDouble3);
  
  public abstract void glUniform4d(int paramInt, double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4);
  
  public abstract void glUniform1dv(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniform1dv(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniform2dv(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniform2dv(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniform3dv(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniform3dv(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniform4dv(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniform4dv(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix2dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix2dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix3dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix3dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix4dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix4dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix2x3dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix2x3dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix2x4dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix2x4dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix3x2dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix3x2dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix3x4dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix3x4dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix4x2dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix4x2dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glUniformMatrix4x3dv(int paramInt1, int paramInt2, boolean paramBoolean, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glUniformMatrix4x3dv(int paramInt1, int paramInt2, boolean paramBoolean, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glGetUniformdv(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glGetUniformdv(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract int glGetSubroutineUniformLocation(int paramInt1, int paramInt2, String paramString);
  
  public abstract int glGetSubroutineIndex(int paramInt1, int paramInt2, String paramString);
  
  public abstract void glGetActiveSubroutineUniformiv(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer);
  
  public abstract void glGetActiveSubroutineUniformiv(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5);
  
  public abstract void glGetActiveSubroutineUniformName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer);
  
  public abstract void glGetActiveSubroutineUniformName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5, byte[] paramArrayOfByte, int paramInt6);
  
  public abstract void glGetActiveSubroutineName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer);
  
  public abstract void glGetActiveSubroutineName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5, byte[] paramArrayOfByte, int paramInt6);
  
  public abstract void glUniformSubroutinesuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer);
  
  public abstract void glUniformSubroutinesuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glGetUniformSubroutineuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer);
  
  public abstract void glGetUniformSubroutineuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glGetProgramStageiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer);
  
  public abstract void glGetProgramStageiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4);
  
  public abstract void glPatchParameterfv(int paramInt, FloatBuffer paramFloatBuffer);
  
  public abstract void glPatchParameterfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2);
  
  public abstract void glViewportArrayv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer);
  
  public abstract void glViewportArrayv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3);
  
  public abstract void glViewportIndexedf(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4);
  
  public abstract void glViewportIndexedfv(int paramInt, FloatBuffer paramFloatBuffer);
  
  public abstract void glViewportIndexedfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2);
  
  public abstract void glScissorArrayv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer);
  
  public abstract void glScissorArrayv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glScissorIndexed(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
  
  public abstract void glScissorIndexedv(int paramInt, IntBuffer paramIntBuffer);
  
  public abstract void glScissorIndexedv(int paramInt1, int[] paramArrayOfInt, int paramInt2);
  
  public abstract void glDepthRangeArrayv(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glDepthRangeArrayv(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glDepthRangeIndexed(int paramInt, double paramDouble1, double paramDouble2);
  
  public abstract void glGetFloati_v(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer);
  
  public abstract void glGetFloati_v(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3);
  
  public abstract void glGetDoublei_v(int paramInt1, int paramInt2, DoubleBuffer paramDoubleBuffer);
  
  public abstract void glGetDoublei_v(int paramInt1, int paramInt2, double[] paramArrayOfDouble, int paramInt3);
  
  public abstract void glDrawTransformFeedbackInstanced(int paramInt1, int paramInt2, int paramInt3);
  
  public abstract void glDrawTransformFeedbackStreamInstanced(int paramInt1, int paramInt2, int paramInt3, int paramInt4);
  
  public abstract void glMultiDrawArraysIndirect(int paramInt1, long paramLong, int paramInt2, int paramInt3);
  
  public abstract void glMultiDrawElementsIndirect(int paramInt1, int paramInt2, Buffer paramBuffer, int paramInt3, int paramInt4);
  
  public abstract long glCreateSyncFromCLeventARB(long paramLong1, long paramLong2, int paramInt);
  
  public abstract void glNamedStringARB(int paramInt1, int paramInt2, String paramString1, int paramInt3, String paramString2);
  
  public abstract void glDeleteNamedStringARB(int paramInt, String paramString);
  
  public abstract void glCompileShaderIncludeARB(int paramInt1, int paramInt2, String[] paramArrayOfString, IntBuffer paramIntBuffer);
  
  public abstract void glCompileShaderIncludeARB(int paramInt1, int paramInt2, String[] paramArrayOfString, int[] paramArrayOfInt, int paramInt3);
  
  public abstract boolean glIsNamedStringARB(int paramInt, String paramString);
  
  public abstract void glGetNamedStringARB(int paramInt1, String paramString, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer);
  
  public abstract void glGetNamedStringARB(int paramInt1, String paramString, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4);
  
  public abstract void glGetNamedStringivARB(int paramInt1, String paramString, int paramInt2, IntBuffer paramIntBuffer);
  
  public abstract void glGetNamedStringivARB(int paramInt1, String paramString, int paramInt2, int[] paramArrayOfInt, int paramInt3);
  
  public abstract void glProgramParameteriARB(int paramInt1, int paramInt2, int paramInt3);
  
  public abstract void glFramebufferTextureARB(int paramInt1, int paramInt2, int paramInt3, int paramInt4);
  
  public abstract void glFramebufferTextureLayerARB(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
  
  public abstract void glFramebufferTextureFaceARB(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5);
}
