package com.leapmotion.leap;




public class BugReport
  extends Interface
{
  private long swigCPtr;
  


  public BugReport(long paramLong, boolean paramBoolean)
  {
    super(LeapJNI.BugReport_SWIGUpcast(paramLong), paramBoolean);
    swigCPtr = paramLong;
  }
  
  public static long getCPtr(BugReport paramBugReport) {
    return paramBugReport == null ? 0L : swigCPtr;
  }
  
  protected void finalize() {
    delete();
  }
  
  public synchronized void delete() {
    if (swigCPtr != 0L) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        LeapJNI.delete_BugReport(swigCPtr);
      }
      swigCPtr = 0L;
    }
    super.delete();
  }
  
  public BugReport() {
    this(LeapJNI.new_BugReport(), true);
  }
  
  public boolean beginRecording() {
    return LeapJNI.BugReport_beginRecording(swigCPtr, this);
  }
  
  public void endRecording() {
    LeapJNI.BugReport_endRecording(swigCPtr, this);
  }
  
  public boolean isActive() {
    return LeapJNI.BugReport_isActive(swigCPtr, this);
  }
  
  public float progress() {
    return LeapJNI.BugReport_progress(swigCPtr, this);
  }
  
  public float duration() {
    return LeapJNI.BugReport_duration(swigCPtr, this);
  }
}
