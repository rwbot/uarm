package jogamp.nativewindow.windows;

import com.jogamp.common.nio.Buffers;
import com.jogamp.common.nio.StructAccessor;
import com.jogamp.common.os.MachineDataInfo;
import com.jogamp.common.os.MachineDataInfo.StaticConfig;
import java.nio.ByteBuffer;
import jogamp.common.os.MachineDataInfoRuntime;










public class BITMAPINFOHEADER
{
  StructAccessor accessor;
  private static final int mdIdx = MachineDataInfoRuntime.getStatic().ordinal();
  
  private final MachineDataInfo md;
  private static final int[] BITMAPINFOHEADER_size = { 40, 40, 40, 40, 40, 40, 40, 40 };
  private static final int[] biSize_offset = { 0, 0, 0, 0, 0, 0, 0, 0 };
  
  private static final int[] biWidth_offset = { 4, 4, 4, 4, 4, 4, 4, 4 };
  
  private static final int[] biHeight_offset = { 8, 8, 8, 8, 8, 8, 8, 8 };
  
  private static final int[] biPlanes_offset = { 12, 12, 12, 12, 12, 12, 12, 12 };
  
  private static final int[] biBitCount_offset = { 14, 14, 14, 14, 14, 14, 14, 14 };
  
  private static final int[] biCompression_offset = { 16, 16, 16, 16, 16, 16, 16, 16 };
  
  private static final int[] biSizeImage_offset = { 20, 20, 20, 20, 20, 20, 20, 20 };
  
  private static final int[] biXPelsPerMeter_offset = { 24, 24, 24, 24, 24, 24, 24, 24 };
  
  private static final int[] biYPelsPerMeter_offset = { 28, 28, 28, 28, 28, 28, 28, 28 };
  
  private static final int[] biClrUsed_offset = { 32, 32, 32, 32, 32, 32, 32, 32 };
  
  private static final int[] biClrImportant_offset = { 36, 36, 36, 36, 36, 36, 36, 36 };
  
  public static int size()
  {
    return BITMAPINFOHEADER_size[mdIdx];
  }
  
  public static BITMAPINFOHEADER create() {
    return create(Buffers.newDirectByteBuffer(size()));
  }
  
  public static BITMAPINFOHEADER create(ByteBuffer paramByteBuffer) {
    return new BITMAPINFOHEADER(paramByteBuffer);
  }
  
  BITMAPINFOHEADER(ByteBuffer paramByteBuffer) {
    md = valuesmdIdxmd;
    accessor = new StructAccessor(paramByteBuffer);
  }
  
  public ByteBuffer getBuffer() {
    return accessor.getBuffer();
  }
  
  public BITMAPINFOHEADER setBiSize(int paramInt)
  {
    accessor.setIntAt(biSize_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiSize()
  {
    return accessor.getIntAt(biSize_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiWidth(int paramInt)
  {
    accessor.setIntAt(biWidth_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiWidth()
  {
    return accessor.getIntAt(biWidth_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiHeight(int paramInt)
  {
    accessor.setIntAt(biHeight_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiHeight()
  {
    return accessor.getIntAt(biHeight_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiPlanes(short paramShort)
  {
    accessor.setShortAt(biPlanes_offset[mdIdx], paramShort);
    return this;
  }
  
  public short getBiPlanes()
  {
    return accessor.getShortAt(biPlanes_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiBitCount(short paramShort)
  {
    accessor.setShortAt(biBitCount_offset[mdIdx], paramShort);
    return this;
  }
  
  public short getBiBitCount()
  {
    return accessor.getShortAt(biBitCount_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiCompression(int paramInt)
  {
    accessor.setIntAt(biCompression_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiCompression()
  {
    return accessor.getIntAt(biCompression_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiSizeImage(int paramInt)
  {
    accessor.setIntAt(biSizeImage_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiSizeImage()
  {
    return accessor.getIntAt(biSizeImage_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiXPelsPerMeter(int paramInt)
  {
    accessor.setIntAt(biXPelsPerMeter_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiXPelsPerMeter()
  {
    return accessor.getIntAt(biXPelsPerMeter_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiYPelsPerMeter(int paramInt)
  {
    accessor.setIntAt(biYPelsPerMeter_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiYPelsPerMeter()
  {
    return accessor.getIntAt(biYPelsPerMeter_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiClrUsed(int paramInt)
  {
    accessor.setIntAt(biClrUsed_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiClrUsed()
  {
    return accessor.getIntAt(biClrUsed_offset[mdIdx]);
  }
  
  public BITMAPINFOHEADER setBiClrImportant(int paramInt)
  {
    accessor.setIntAt(biClrImportant_offset[mdIdx], paramInt);
    return this;
  }
  
  public int getBiClrImportant()
  {
    return accessor.getIntAt(biClrImportant_offset[mdIdx]);
  }
}
