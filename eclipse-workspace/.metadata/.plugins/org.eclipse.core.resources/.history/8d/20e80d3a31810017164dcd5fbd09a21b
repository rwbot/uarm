package jogamp.nativewindow.x11;

import com.jogamp.nativewindow.AbstractGraphicsConfiguration;
import com.jogamp.nativewindow.AbstractGraphicsDevice;
import com.jogamp.nativewindow.AbstractGraphicsScreen;
import com.jogamp.nativewindow.CapabilitiesChooser;
import com.jogamp.nativewindow.CapabilitiesImmutable;
import com.jogamp.nativewindow.GraphicsConfigurationFactory;
import com.jogamp.nativewindow.NativeWindowException;
import com.jogamp.nativewindow.x11.X11GraphicsConfiguration;
import com.jogamp.nativewindow.x11.X11GraphicsDevice;
import com.jogamp.nativewindow.x11.X11GraphicsScreen;
import java.io.PrintStream;































public class X11GraphicsConfigurationFactory
  extends GraphicsConfigurationFactory
{
  public static void registerFactory()
  {
    GraphicsConfigurationFactory.registerFactory(X11GraphicsDevice.class, CapabilitiesImmutable.class, new X11GraphicsConfigurationFactory());
  }
  

  private X11GraphicsConfigurationFactory() {}
  

  protected AbstractGraphicsConfiguration chooseGraphicsConfigurationImpl(CapabilitiesImmutable paramCapabilitiesImmutable1, CapabilitiesImmutable paramCapabilitiesImmutable2, CapabilitiesChooser paramCapabilitiesChooser, AbstractGraphicsScreen paramAbstractGraphicsScreen, int paramInt)
    throws IllegalArgumentException, NativeWindowException
  {
    if (!(paramAbstractGraphicsScreen instanceof X11GraphicsScreen)) {
      throw new NativeWindowException("Only valid X11GraphicsScreen are allowed");
    }
    XVisualInfo localXVisualInfo;
    if (0 == paramInt) {
      localXVisualInfo = getXVisualInfo(paramAbstractGraphicsScreen, paramCapabilitiesImmutable1);
    } else {
      localXVisualInfo = getXVisualInfo(paramAbstractGraphicsScreen, paramInt);
    }
    
    X11Capabilities localX11Capabilities = X11GraphicsConfiguration.XVisualInfo2X11Capabilities((X11GraphicsDevice)paramAbstractGraphicsScreen.getDevice(), localXVisualInfo);
    X11GraphicsConfiguration localX11GraphicsConfiguration = new X11GraphicsConfiguration((X11GraphicsScreen)paramAbstractGraphicsScreen, localX11Capabilities, paramCapabilitiesImmutable2, localX11Capabilities.getXVisualInfo());
    if (DEBUG) {
      System.err.println("X11GraphicsConfigurationFactory.chooseGraphicsConfigurationImpl(visualID 0x" + Integer.toHexString(paramInt) + ", " + localXVisualInfo + ", " + paramAbstractGraphicsScreen + "," + paramCapabilitiesImmutable1 + "): " + localX11GraphicsConfiguration);
    }
    return localX11GraphicsConfiguration;
  }
  
  public static XVisualInfo getXVisualInfo(AbstractGraphicsScreen paramAbstractGraphicsScreen, int paramInt)
  {
    XVisualInfo localXVisualInfo = XVisualInfo.create();
    localXVisualInfo.setVisualid(paramInt);
    localXVisualInfo.setScreen(paramAbstractGraphicsScreen.getIndex());
    int[] arrayOfInt = { -1 };
    long l = paramAbstractGraphicsScreen.getDevice().getHandle();
    
    XVisualInfo[] arrayOfXVisualInfo = X11Lib.XGetVisualInfo(l, 3L, localXVisualInfo, arrayOfInt, 0);
    
    if ((arrayOfXVisualInfo == null) || (arrayOfInt[0] < 1)) {
      return null;
    }
    return XVisualInfo.create(arrayOfXVisualInfo[0]);
  }
  
  public static XVisualInfo getXVisualInfo(AbstractGraphicsScreen paramAbstractGraphicsScreen, CapabilitiesImmutable paramCapabilitiesImmutable)
  {
    XVisualInfo localXVisualInfo = getXVisualInfoImpl(paramAbstractGraphicsScreen, paramCapabilitiesImmutable, 4);
    if (null != localXVisualInfo) return localXVisualInfo;
    return getXVisualInfoImpl(paramAbstractGraphicsScreen, paramCapabilitiesImmutable, 5);
  }
  
  private static XVisualInfo getXVisualInfoImpl(AbstractGraphicsScreen paramAbstractGraphicsScreen, CapabilitiesImmutable paramCapabilitiesImmutable, int paramInt)
  {
    XVisualInfo localXVisualInfo1 = null;
    int[] arrayOfInt = { -1 };
    
    XVisualInfo localXVisualInfo2 = XVisualInfo.create();
    localXVisualInfo2.setScreen(paramAbstractGraphicsScreen.getIndex());
    localXVisualInfo2.setC_class(paramInt);
    long l = paramAbstractGraphicsScreen.getDevice().getHandle();
    
    XVisualInfo[] arrayOfXVisualInfo = X11Lib.XGetVisualInfo(l, 2L, localXVisualInfo2, arrayOfInt, 0);
    XVisualInfo localXVisualInfo3 = null;
    int i = paramCapabilitiesImmutable.getRedBits() + paramCapabilitiesImmutable.getGreenBits() + paramCapabilitiesImmutable.getBlueBits() + paramCapabilitiesImmutable.getAlphaBits();
    for (int j = 0; (arrayOfXVisualInfo != null) && (j < arrayOfInt[0]); j++) {
      if ((localXVisualInfo3 == null) || 
        (localXVisualInfo3.getDepth() < arrayOfXVisualInfo[j].getDepth()))
      {
        localXVisualInfo3 = arrayOfXVisualInfo[j];
        if (i <= localXVisualInfo3.getDepth())
          break;
      }
    }
    if ((null != localXVisualInfo3) && ((i <= localXVisualInfo3.getDepth()) || (24 == localXVisualInfo3.getDepth()))) {
      localXVisualInfo1 = XVisualInfo.create(localXVisualInfo3);
    }
    localXVisualInfo3 = null;
    
    return localXVisualInfo1;
  }
}
