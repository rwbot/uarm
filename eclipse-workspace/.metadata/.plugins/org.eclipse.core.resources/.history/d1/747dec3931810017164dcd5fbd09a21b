package com.jogamp.opengl;

import com.jogamp.common.nio.PointerBuffer;
import java.io.PrintStream;
import java.lang.reflect.Array;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.ShortBuffer;
import jogamp.opengl.Debug;










public class TraceGLES1
  implements GL2ES1, GLES1
{
  public static final boolean DEBUG = Debug.debug("TraceGLES1");
  private PrintStream stream;
  
  public TraceGLES1(GLES1 paramGLES1, PrintStream paramPrintStream) { if (paramGLES1 == null) {
      throw new IllegalArgumentException("null downstreamGLES1");
    }
    downstreamGLES1 = paramGLES1;
    stream = paramPrintStream;
  }
  
  public final GL getDownstreamGL() throws GLException
  {
    return downstreamGLES1;
  }
  
  public int getBoundBuffer(int paramInt)
  {
    return downstreamGLES1.getBoundBuffer(paramInt);
  }
  
  public int getBoundFramebuffer(int paramInt)
  {
    return downstreamGLES1.getBoundFramebuffer(paramInt);
  }
  
  public GLBufferStorage getBufferStorage(int paramInt)
  {
    return downstreamGLES1.getBufferStorage(paramInt);
  }
  
  public GLContext getContext()
  {
    return downstreamGLES1.getContext();
  }
  
  public int getDefaultDrawFramebuffer()
  {
    return downstreamGLES1.getDefaultDrawFramebuffer();
  }
  
  public int getDefaultReadBuffer()
  {
    return downstreamGLES1.getDefaultReadBuffer();
  }
  
  public int getDefaultReadFramebuffer()
  {
    return downstreamGLES1.getDefaultReadFramebuffer();
  }
  
  public Object getExtension(String paramString)
  {
    return downstreamGLES1.getExtension(paramString);
  }
  
  public GL getGL()
  {
    return this;
  }
  
  public GL2 getGL2()
  {
    throw new GLException("Not a GL2 implementation");
  }
  
  public GL2ES1 getGL2ES1()
  {
    if (isGL2ES1()) return this;
    throw new GLException("Not a GL2ES1 implementation");
  }
  
  public GL2ES2 getGL2ES2()
  {
    throw new GLException("Not a GL2ES2 implementation");
  }
  
  public GL2ES3 getGL2ES3()
  {
    throw new GLException("Not a GL2ES3 implementation");
  }
  
  public GL2GL3 getGL2GL3()
  {
    throw new GLException("Not a GL2GL3 implementation");
  }
  
  public GL3 getGL3()
  {
    throw new GLException("Not a GL3 implementation");
  }
  
  public GL3ES3 getGL3ES3()
  {
    throw new GLException("Not a GL3ES3 implementation");
  }
  
  public GL3bc getGL3bc()
  {
    throw new GLException("Not a GL3bc implementation");
  }
  
  public GL4 getGL4()
  {
    throw new GLException("Not a GL4 implementation");
  }
  
  public GL4ES3 getGL4ES3()
  {
    throw new GLException("Not a GL4ES3 implementation");
  }
  
  public GL4bc getGL4bc()
  {
    throw new GLException("Not a GL4bc implementation");
  }
  
  public GLES1 getGLES1()
  {
    if (isGLES1()) return this;
    throw new GLException("Not a GLES1 implementation");
  }
  
  public GLES2 getGLES2()
  {
    throw new GLException("Not a GLES2 implementation");
  }
  
  public GLES3 getGLES3()
  {
    throw new GLException("Not a GLES3 implementation");
  }
  
  public GLProfile getGLProfile()
  {
    return downstreamGLES1.getGLProfile();
  }
  
  public int getMaxRenderbufferSamples()
  {
    return downstreamGLES1.getMaxRenderbufferSamples();
  }
  
  public Object getPlatformGLExtensions()
  {
    return downstreamGLES1.getPlatformGLExtensions();
  }
  
  public GL getRootGL()
  {
    return downstreamGLES1.getRootGL();
  }
  
  public int getSwapInterval()
  {
    return downstreamGLES1.getSwapInterval();
  }
  
  public void glActiveTexture(int paramInt)
  {
    printIndent();
    print("glActiveTexture(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glActiveTexture(paramInt);
    println("");
  }
  
  public void glAlphaFunc(int paramInt, float paramFloat)
  {
    printIndent();
    print("glAlphaFunc(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glAlphaFunc(paramInt, paramFloat);
    println("");
  }
  
  public void glAlphaFuncx(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glAlphaFuncx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glAlphaFuncx(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindBuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBindBuffer(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindFramebuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindFramebuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBindFramebuffer(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindRenderbuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindRenderbuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBindRenderbuffer(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindTexture(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBindTexture(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBindTexture(paramInt1, paramInt2);
    println("");
  }
  
  public void glBindVertexArrayOES(int paramInt)
  {
    printIndent();
    print("glBindVertexArrayOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glBindVertexArrayOES(paramInt);
    println("");
  }
  
  public void glBlendEquation(int paramInt)
  {
    printIndent();
    print("glBlendEquation(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glBlendEquation(paramInt);
    println("");
  }
  
  public void glBlendEquationSeparate(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendEquationSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBlendEquationSeparate(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendFunc(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glBlendFunc(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBlendFunc(paramInt1, paramInt2);
    println("");
  }
  
  public void glBlendFuncSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glBlendFuncSeparate(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glBlendFuncSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glBufferData(int paramInt1, long paramLong, Buffer paramBuffer, int paramInt2)
  {
    printIndent();
    print("glBufferData(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong + ", " + "<java.nio.Buffer> " + paramBuffer + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glBufferData(paramInt1, paramLong, paramBuffer, paramInt2);
    println("");
  }
  
  public void glBufferSubData(int paramInt, long paramLong1, long paramLong2, Buffer paramBuffer)
  {
    printIndent();
    print("glBufferSubData(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glBufferSubData(paramInt, paramLong1, paramLong2, paramBuffer);
    println("");
  }
  
  public int glCheckFramebufferStatus(int paramInt)
  {
    printIndent();
    print("glCheckFramebufferStatus(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    int i = downstreamGLES1.glCheckFramebufferStatus(paramInt);
    println(" = " + i);
    return i;
  }
  
  public void glClear(int paramInt)
  {
    printIndent();
    print("glClear(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glClear(paramInt);
    println("");
  }
  
  public void glClearColor(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glClearColor(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES1.glClearColor(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glClearColorx(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glClearColorx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glClearColorx(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glClearDepth(double paramDouble)
  {
    printIndent();
    print("glClearDepth(<double> " + paramDouble + ")");
    downstreamGLES1.glClearDepth(paramDouble);
    println("");
  }
  
  public void glClearDepthf(float paramFloat)
  {
    printIndent();
    print("glClearDepthf(<float> " + paramFloat + ")");
    downstreamGLES1.glClearDepthf(paramFloat);
    println("");
  }
  
  public void glClearDepthx(int paramInt)
  {
    printIndent();
    print("glClearDepthx(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glClearDepthx(paramInt);
    println("");
  }
  
  public void glClearStencil(int paramInt)
  {
    printIndent();
    print("glClearStencil(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glClearStencil(paramInt);
    println("");
  }
  
  public void glClientActiveTexture(int paramInt)
  {
    printIndent();
    print("glClientActiveTexture(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glClientActiveTexture(paramInt);
    println("");
  }
  
  public void glClipPlanef(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glClipPlanef(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glClipPlanef(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glClipPlanef(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glClipPlanef(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glClipPlanef(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glClipPlanefIMG(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glClipPlanefIMG(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glClipPlanefIMG(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glClipPlanefIMG(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glClipPlanefIMG(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glClipPlanefIMG(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glClipPlanex(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glClipPlanex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glClipPlanex(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glClipPlanex(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glClipPlanex(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glClipPlanex(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glClipPlanexIMG(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glClipPlanexIMG(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glClipPlanexIMG(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glClipPlanexIMG(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glClipPlanexIMG(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glClipPlanexIMG(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glColor4f(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glColor4f(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES1.glColor4f(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glColor4ub(byte paramByte1, byte paramByte2, byte paramByte3, byte paramByte4)
  {
    printIndent();
    print("glColor4ub(<byte> " + paramByte1 + ", " + "<byte> " + paramByte2 + ", " + "<byte> " + paramByte3 + ", " + "<byte> " + paramByte4 + ")");
    downstreamGLES1.glColor4ub(paramByte1, paramByte2, paramByte3, paramByte4);
    println("");
  }
  
  public void glColor4x(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glColor4x(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glColor4x(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glColorMask(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    printIndent();
    print("glColorMask(<boolean> " + paramBoolean1 + ", " + "<boolean> " + paramBoolean2 + ", " + "<boolean> " + paramBoolean3 + ", " + "<boolean> " + paramBoolean4 + ")");
    downstreamGLES1.glColorMask(paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    println("");
  }
  
  public void glColorPointer(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glColorPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glColorPointer(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public void glColorPointer(GLArrayData paramGLArrayData)
  {
    printIndent();
    print("glColorPointer(<com.jogamp.opengl.GLArrayData> " + paramGLArrayData + ")");
    downstreamGLES1.glColorPointer(paramGLArrayData);
    println("");
  }
  
  public void glColorPointer(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    printIndent();
    print("glColorPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glColorPointer(paramInt1, paramInt2, paramInt3, paramLong);
    println("");
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    printIndent();
    print("glCompressedTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    println("");
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, long paramLong)
  {
    printIndent();
    print("glCompressedTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramLong);
    println("");
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glCompressedTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glCompressedTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glCopyTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    printIndent();
    print("glCopyTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    downstreamGLES1.glCopyTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    println("");
  }
  
  public void glCopyTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    printIndent();
    print("glCopyTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ")");
    downstreamGLES1.glCopyTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    println("");
  }
  
  public void glCopyTextureLevelsAPPLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glCopyTextureLevelsAPPLE(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glCopyTextureLevelsAPPLE(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glCullFace(int paramInt)
  {
    printIndent();
    print("glCullFace(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glCullFace(paramInt);
    println("");
  }
  
  public void glCurrentPaletteMatrixOES(int paramInt)
  {
    printIndent();
    print("glCurrentPaletteMatrixOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glCurrentPaletteMatrixOES(paramInt);
    println("");
  }
  
  public void glDeleteBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteBuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDeleteBuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteBuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glDeleteBuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteFramebuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glDeleteFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteFramebuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDeleteFramebuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteRenderbuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDeleteRenderbuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteRenderbuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glDeleteRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteTextures(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glDeleteTextures(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDeleteTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteTextures(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDeleteTextures(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDeleteVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDeleteVertexArraysOES(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glDeleteVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glDeleteVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glDeleteVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glDepthFunc(int paramInt)
  {
    printIndent();
    print("glDepthFunc(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDepthFunc(paramInt);
    println("");
  }
  
  public void glDepthMask(boolean paramBoolean)
  {
    printIndent();
    print("glDepthMask(<boolean> " + paramBoolean + ")");
    downstreamGLES1.glDepthMask(paramBoolean);
    println("");
  }
  
  public void glDepthRange(double paramDouble1, double paramDouble2)
  {
    printIndent();
    print("glDepthRange(<double> " + paramDouble1 + ", " + "<double> " + paramDouble2 + ")");
    downstreamGLES1.glDepthRange(paramDouble1, paramDouble2);
    println("");
  }
  
  public void glDepthRangef(float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glDepthRangef(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES1.glDepthRangef(paramFloat1, paramFloat2);
    println("");
  }
  
  public void glDepthRangex(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glDepthRangex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glDepthRangex(paramInt1, paramInt2);
    println("");
  }
  
  public void glDisable(int paramInt)
  {
    printIndent();
    print("glDisable(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDisable(paramInt);
    println("");
  }
  
  public void glDisableClientState(int paramInt)
  {
    printIndent();
    print("glDisableClientState(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDisableClientState(paramInt);
    println("");
  }
  
  public void glDisableDriverControlQCOM(int paramInt)
  {
    printIndent();
    print("glDisableDriverControlQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDisableDriverControlQCOM(paramInt);
    println("");
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glDiscardFramebufferEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glDiscardFramebufferEXT(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDiscardFramebufferEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDiscardFramebufferEXT(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glDrawArrays(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glDrawArrays(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glDrawArrays(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    printIndent();
    print("glDrawElements(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glDrawElements(paramInt1, paramInt2, paramInt3, paramLong);
    println("");
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glDrawElements(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glDrawElements(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public void glDrawTexfOES(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    printIndent();
    print("glDrawTexfOES(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ", " + "<float> " + paramFloat5 + ")");
    downstreamGLES1.glDrawTexfOES(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5);
    println("");
  }
  
  public void glDrawTexfvOES(FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glDrawTexfvOES(<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glDrawTexfvOES(paramFloatBuffer);
    println("");
  }
  
  public void glDrawTexfvOES(float[] paramArrayOfFloat, int paramInt)
  {
    printIndent();
    print("glDrawTexfvOES(<[F>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDrawTexfvOES(paramArrayOfFloat, paramInt);
    println("");
  }
  
  public void glDrawTexiOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawTexiOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glDrawTexiOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawTexivOES(IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDrawTexivOES(<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDrawTexivOES(paramIntBuffer);
    println("");
  }
  
  public void glDrawTexivOES(int[] paramArrayOfInt, int paramInt)
  {
    printIndent();
    print("glDrawTexivOES(<[I>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDrawTexivOES(paramArrayOfInt, paramInt);
    println("");
  }
  
  public void glDrawTexsOES(short paramShort1, short paramShort2, short paramShort3, short paramShort4, short paramShort5)
  {
    printIndent();
    print("glDrawTexsOES(<short> " + paramShort1 + ", " + "<short> " + paramShort2 + ", " + "<short> " + paramShort3 + ", " + "<short> " + paramShort4 + ", " + "<short> " + paramShort5 + ")");
    downstreamGLES1.glDrawTexsOES(paramShort1, paramShort2, paramShort3, paramShort4, paramShort5);
    println("");
  }
  
  public void glDrawTexsvOES(short[] paramArrayOfShort, int paramInt)
  {
    printIndent();
    print("glDrawTexsvOES(<[S>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDrawTexsvOES(paramArrayOfShort, paramInt);
    println("");
  }
  
  public void glDrawTexsvOES(ShortBuffer paramShortBuffer)
  {
    printIndent();
    print("glDrawTexsvOES(<java.nio.ShortBuffer> " + paramShortBuffer + ")");
    downstreamGLES1.glDrawTexsvOES(paramShortBuffer);
    println("");
  }
  
  public void glDrawTexxOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glDrawTexxOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glDrawTexxOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glDrawTexxvOES(int[] paramArrayOfInt, int paramInt)
  {
    printIndent();
    print("glDrawTexxvOES(<[I>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glDrawTexxvOES(paramArrayOfInt, paramInt);
    println("");
  }
  
  public void glDrawTexxvOES(IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glDrawTexxvOES(<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glDrawTexxvOES(paramIntBuffer);
    println("");
  }
  
  public void glEGLImageTargetRenderbufferStorageOES(int paramInt, long paramLong)
  {
    printIndent();
    print("glEGLImageTargetRenderbufferStorageOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glEGLImageTargetRenderbufferStorageOES(paramInt, paramLong);
    println("");
  }
  
  public void glEGLImageTargetTexture2DOES(int paramInt, long paramLong)
  {
    printIndent();
    print("glEGLImageTargetTexture2DOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glEGLImageTargetTexture2DOES(paramInt, paramLong);
    println("");
  }
  
  public void glEnable(int paramInt)
  {
    printIndent();
    print("glEnable(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glEnable(paramInt);
    println("");
  }
  
  public void glEnableClientState(int paramInt)
  {
    printIndent();
    print("glEnableClientState(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glEnableClientState(paramInt);
    println("");
  }
  
  public void glEnableDriverControlQCOM(int paramInt)
  {
    printIndent();
    print("glEnableDriverControlQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glEnableDriverControlQCOM(paramInt);
    println("");
  }
  
  public void glEndTilingQCOM(int paramInt)
  {
    printIndent();
    print("glEndTilingQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glEndTilingQCOM(paramInt);
    println("");
  }
  
  public void glExtGetBufferPointervQCOM(int paramInt, PointerBuffer paramPointerBuffer)
  {
    printIndent();
    print("glExtGetBufferPointervQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<com.jogamp.common.nio.PointerBuffer> " + paramPointerBuffer + ")");
    downstreamGLES1.glExtGetBufferPointervQCOM(paramInt, paramPointerBuffer);
    println("");
  }
  
  public void glExtGetBuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetBuffersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtGetBuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetBuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetBuffersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glExtGetBuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetFramebuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetFramebuffersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtGetFramebuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetFramebuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetFramebuffersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glExtGetFramebuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glExtGetProgramBinarySourceQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramArrayOfByte, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glExtGetProgramBinarySourceQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramByteBuffer, paramIntBuffer);
    println("");
  }
  
  public void glExtGetProgramsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetProgramsQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtGetProgramsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetProgramsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetProgramsQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glExtGetProgramsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetRenderbuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetRenderbuffersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtGetRenderbuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetRenderbuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetRenderbuffersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glExtGetRenderbuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetShadersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetShadersQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtGetShadersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetShadersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetShadersQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glExtGetShadersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5)
  {
    printIndent();
    print("glExtGetTexLevelParameterivQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5);
    println("");
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glExtGetTexLevelParameterivQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer);
    println("");
  }
  
  public void glExtGetTexSubImageQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    printIndent();
    print("glExtGetTexSubImageQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt9).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt10).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glExtGetTexSubImageQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    println("");
  }
  
  public void glExtGetTexturesQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glExtGetTexturesQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtGetTexturesQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glExtGetTexturesQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glExtGetTexturesQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glExtGetTexturesQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public boolean glExtIsProgramBinaryQCOM(int paramInt)
  {
    printIndent();
    print("glExtIsProgramBinaryQCOM(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glExtIsProgramBinaryQCOM(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public void glExtTexObjectStateOverrideiQCOM(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glExtTexObjectStateOverrideiQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glExtTexObjectStateOverrideiQCOM(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glFinish()
  {
    printIndent();
    print("glFinish()");
    downstreamGLES1.glFinish();
    println("");
  }
  
  public void glFlush()
  {
    printIndent();
    print("glFlush()");
    downstreamGLES1.glFlush();
    println("");
  }
  
  public void glFlushMappedBufferRange(int paramInt, long paramLong1, long paramLong2)
  {
    printIndent();
    print("glFlushMappedBufferRange(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ")");
    downstreamGLES1.glFlushMappedBufferRange(paramInt, paramLong1, paramLong2);
    println("");
  }
  
  public void glFogf(int paramInt, float paramFloat)
  {
    printIndent();
    print("glFogf(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glFogf(paramInt, paramFloat);
    println("");
  }
  
  public void glFogfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glFogfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glFogfv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glFogfv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glFogfv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glFogfv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glFogx(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glFogx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glFogx(paramInt1, paramInt2);
    println("");
  }
  
  public void glFogxv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glFogxv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glFogxv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glFogxv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glFogxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glFogxv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glFramebufferRenderbuffer(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glFramebufferRenderbuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glFramebufferRenderbuffer(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glFramebufferTexture2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glFramebufferTexture2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glFramebufferTexture2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glFramebufferTexture2DMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFramebufferTexture2DMultisampleEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES1.glFramebufferTexture2DMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glFramebufferTexture2DMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFramebufferTexture2DMultisampleIMG(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES1.glFramebufferTexture2DMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glFrontFace(int paramInt)
  {
    printIndent();
    print("glFrontFace(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glFrontFace(paramInt);
    println("");
  }
  
  public void glFrustum(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, double paramDouble6)
  {
    printIndent();
    print("glFrustum(<double> " + paramDouble1 + ", " + "<double> " + paramDouble2 + ", " + "<double> " + paramDouble3 + ", " + "<double> " + paramDouble4 + ", " + "<double> " + paramDouble5 + ", " + "<double> " + paramDouble6 + ")");
    downstreamGLES1.glFrustum(paramDouble1, paramDouble2, paramDouble3, paramDouble4, paramDouble5, paramDouble6);
    println("");
  }
  
  public void glFrustumf(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6)
  {
    printIndent();
    print("glFrustumf(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ", " + "<float> " + paramFloat5 + ", " + "<float> " + paramFloat6 + ")");
    downstreamGLES1.glFrustumf(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6);
    println("");
  }
  
  public void glFrustumx(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glFrustumx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES1.glFrustumx(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glGenBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenBuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGenBuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenBuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGenBuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenFramebuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGenFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenFramebuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGenFramebuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenRenderbuffers(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGenRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenRenderbuffers(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGenRenderbuffers(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenTextures(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGenTextures(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenTextures(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGenTextures(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGenVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGenVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGenVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGenVertexArraysOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGenVertexArraysOES(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGenerateMipmap(int paramInt)
  {
    printIndent();
    print("glGenerateMipmap(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glGenerateMipmap(paramInt);
    println("");
  }
  
  public void glGetBooleanv(int paramInt, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetBooleanv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES1.glGetBooleanv(paramInt, paramByteBuffer);
    println("");
  }
  
  public void glGetBooleanv(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    printIndent();
    print("glGetBooleanv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGetBooleanv(paramInt1, paramArrayOfByte, paramInt2);
    println("");
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetBufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetBufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetBufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetBufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetClipPlanef(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glGetClipPlanef(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGetClipPlanef(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glGetClipPlanef(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetClipPlanef(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetClipPlanef(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glGetClipPlanex(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetClipPlanex(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetClipPlanex(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGetClipPlanex(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGetClipPlanex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGetClipPlanex(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    printIndent();
    print("glGetDriverControlStringQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[B>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    println("");
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    printIndent();
    print("glGetDriverControlStringQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ", " + "<java.nio.ByteBuffer> " + paramByteBuffer + ")");
    downstreamGLES1.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    println("");
  }
  
  public void glGetDriverControlsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    printIndent();
    print("glGetDriverControlsQCOM(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetDriverControlsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    println("");
  }
  
  public void glGetDriverControlsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glGetDriverControlsQCOM(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    downstreamGLES1.glGetDriverControlsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    println("");
  }
  
  public int glGetError()
  {
    printIndent();
    print("glGetError()");
    int i = downstreamGLES1.glGetError();
    println(" = " + i);
    return i;
  }
  
  public void glGetFixedv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGetFixedv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGetFixedv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGetFixedv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetFixedv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetFixedv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGetFloatv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glGetFloatv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGetFloatv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glGetFloatv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetFloatv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetFloatv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetFramebufferAttachmentParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public int glGetGraphicsResetStatus()
  {
    printIndent();
    print("glGetGraphicsResetStatus()");
    int i = downstreamGLES1.glGetGraphicsResetStatus();
    println(" = " + i);
    return i;
  }
  
  public void glGetIntegerv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glGetIntegerv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glGetIntegerv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glGetIntegerv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetIntegerv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetIntegerv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glGetLightfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetLightfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetLightfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetLightfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetLightfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetLightfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetLightxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetLightxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetLightxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetLightxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetLightxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetLightxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetMaterialfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetMaterialfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetMaterialfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetMaterialfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetMaterialfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetMaterialfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetMaterialxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetMaterialxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetMaterialxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetMaterialxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetMaterialxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetMaterialxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetRenderbufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetRenderbufferParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public String glGetString(int paramInt)
  {
    printIndent();
    print("glGetString(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    String str = downstreamGLES1.glGetString(paramInt);
    println(" = " + str);
    return str;
  }
  
  public void glGetTexEnvfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetTexEnvfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexEnvfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetTexEnvfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetTexEnvfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetTexEnvfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetTexEnviv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexEnviv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexEnviv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexEnviv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexEnviv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetTexEnviv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexEnvxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexEnvxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetTexEnvxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexEnvxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexEnvxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexEnvxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexGenfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetTexGenfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexGenfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetTexGenfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetTexGenfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetTexGenfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetTexGeniv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexGeniv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexGeniv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexGeniv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexGeniv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetTexGeniv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexGenxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexGenxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetTexGenxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexGenxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexGenxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexGenxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glGetTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexParameterxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetTexParameterxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetTexParameterxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glGetTexParameterxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glGetTexParameterxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glGetTexParameterxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glGetnUniformfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    println("");
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    printIndent();
    print("glGetnUniformfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    println("");
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glGetnUniformiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    println("");
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    printIndent();
    print("glGetnUniformiv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    println("");
  }
  
  public void glHint(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glHint(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glHint(paramInt1, paramInt2);
    println("");
  }
  
  public boolean glIsBuffer(int paramInt)
  {
    printIndent();
    print("glIsBuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glIsBuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsEnabled(int paramInt)
  {
    printIndent();
    print("glIsEnabled(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glIsEnabled(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsFramebuffer(int paramInt)
  {
    printIndent();
    print("glIsFramebuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glIsFramebuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsRenderbuffer(int paramInt)
  {
    printIndent();
    print("glIsRenderbuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glIsRenderbuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsTexture(int paramInt)
  {
    printIndent();
    print("glIsTexture(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glIsTexture(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public boolean glIsVertexArrayOES(int paramInt)
  {
    printIndent();
    print("glIsVertexArrayOES(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glIsVertexArrayOES(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public void glLightModelf(int paramInt, float paramFloat)
  {
    printIndent();
    print("glLightModelf(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glLightModelf(paramInt, paramFloat);
    println("");
  }
  
  public void glLightModelfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glLightModelfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glLightModelfv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glLightModelfv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glLightModelfv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glLightModelfv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glLightModelx(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glLightModelx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glLightModelx(paramInt1, paramInt2);
    println("");
  }
  
  public void glLightModelxv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glLightModelxv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glLightModelxv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glLightModelxv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glLightModelxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glLightModelxv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glLightf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glLightf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glLightf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glLightfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glLightfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glLightfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glLightfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glLightfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glLightfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glLightx(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glLightx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glLightx(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glLightxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glLightxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glLightxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glLightxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glLightxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glLightxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glLineWidth(float paramFloat)
  {
    printIndent();
    print("glLineWidth(<float> " + paramFloat + ")");
    downstreamGLES1.glLineWidth(paramFloat);
    println("");
  }
  
  public void glLineWidthx(int paramInt)
  {
    printIndent();
    print("glLineWidthx(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glLineWidthx(paramInt);
    println("");
  }
  
  public void glLoadIdentity()
  {
    printIndent();
    print("glLoadIdentity()");
    downstreamGLES1.glLoadIdentity();
    println("");
  }
  
  public void glLoadMatrixf(float[] paramArrayOfFloat, int paramInt)
  {
    printIndent();
    print("glLoadMatrixf(<[F>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glLoadMatrixf(paramArrayOfFloat, paramInt);
    println("");
  }
  
  public void glLoadMatrixf(FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glLoadMatrixf(<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glLoadMatrixf(paramFloatBuffer);
    println("");
  }
  
  public void glLoadMatrixx(IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glLoadMatrixx(<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glLoadMatrixx(paramIntBuffer);
    println("");
  }
  
  public void glLoadMatrixx(int[] paramArrayOfInt, int paramInt)
  {
    printIndent();
    print("glLoadMatrixx(<[I>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glLoadMatrixx(paramArrayOfInt, paramInt);
    println("");
  }
  
  public void glLoadPaletteFromModelViewMatrixOES()
  {
    printIndent();
    print("glLoadPaletteFromModelViewMatrixOES()");
    downstreamGLES1.glLoadPaletteFromModelViewMatrixOES();
    println("");
  }
  
  public void glLogicOp(int paramInt)
  {
    printIndent();
    print("glLogicOp(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glLogicOp(paramInt);
    println("");
  }
  
  public ByteBuffer glMapBuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glMapBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    ByteBuffer localByteBuffer = downstreamGLES1.glMapBuffer(paramInt1, paramInt2);
    println(" = " + localByteBuffer);
    return localByteBuffer;
  }
  
  public ByteBuffer glMapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    printIndent();
    print("glMapBufferRange(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    ByteBuffer localByteBuffer = downstreamGLES1.glMapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    println(" = " + localByteBuffer);
    return localByteBuffer;
  }
  
  public void glMaterialf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glMaterialf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glMaterialf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glMaterialfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glMaterialfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glMaterialfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glMaterialfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glMaterialfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glMaterialfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glMaterialx(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glMaterialx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glMaterialx(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glMaterialxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glMaterialxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glMaterialxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glMaterialxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glMaterialxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glMaterialxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glMatrixIndexPointerOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glMatrixIndexPointerOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glMatrixIndexPointerOES(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public void glMatrixMode(int paramInt)
  {
    printIndent();
    print("glMatrixMode(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glMatrixMode(paramInt);
    println("");
  }
  
  public void glMultMatrixf(float[] paramArrayOfFloat, int paramInt)
  {
    printIndent();
    print("glMultMatrixf(<[F>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glMultMatrixf(paramArrayOfFloat, paramInt);
    println("");
  }
  
  public void glMultMatrixf(FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glMultMatrixf(<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glMultMatrixf(paramFloatBuffer);
    println("");
  }
  
  public void glMultMatrixx(IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glMultMatrixx(<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glMultMatrixx(paramIntBuffer);
    println("");
  }
  
  public void glMultMatrixx(int[] paramArrayOfInt, int paramInt)
  {
    printIndent();
    print("glMultMatrixx(<[I>, <int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glMultMatrixx(paramArrayOfInt, paramInt);
    println("");
  }
  
  public void glMultiTexCoord4f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glMultiTexCoord4f(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES1.glMultiTexCoord4f(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glMultiTexCoord4x(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glMultiTexCoord4x(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glMultiTexCoord4x(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glNormal3f(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    printIndent();
    print("glNormal3f(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ")");
    downstreamGLES1.glNormal3f(paramFloat1, paramFloat2, paramFloat3);
    println("");
  }
  
  public void glNormal3x(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glNormal3x(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glNormal3x(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glNormalPointer(int paramInt1, int paramInt2, Buffer paramBuffer)
  {
    printIndent();
    print("glNormalPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glNormalPointer(paramInt1, paramInt2, paramBuffer);
    println("");
  }
  
  public void glNormalPointer(int paramInt1, int paramInt2, long paramLong)
  {
    printIndent();
    print("glNormalPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glNormalPointer(paramInt1, paramInt2, paramLong);
    println("");
  }
  
  public void glNormalPointer(GLArrayData paramGLArrayData)
  {
    printIndent();
    print("glNormalPointer(<com.jogamp.opengl.GLArrayData> " + paramGLArrayData + ")");
    downstreamGLES1.glNormalPointer(paramGLArrayData);
    println("");
  }
  
  public void glOrtho(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, double paramDouble6)
  {
    printIndent();
    print("glOrtho(<double> " + paramDouble1 + ", " + "<double> " + paramDouble2 + ", " + "<double> " + paramDouble3 + ", " + "<double> " + paramDouble4 + ", " + "<double> " + paramDouble5 + ", " + "<double> " + paramDouble6 + ")");
    downstreamGLES1.glOrtho(paramDouble1, paramDouble2, paramDouble3, paramDouble4, paramDouble5, paramDouble6);
    println("");
  }
  
  public void glOrthof(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6)
  {
    printIndent();
    print("glOrthof(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ", " + "<float> " + paramFloat5 + ", " + "<float> " + paramFloat6 + ")");
    downstreamGLES1.glOrthof(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6);
    println("");
  }
  
  public void glOrthox(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glOrthox(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES1.glOrthox(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glPixelStorei(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPixelStorei(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glPixelStorei(paramInt1, paramInt2);
    println("");
  }
  
  public void glPointParameterf(int paramInt, float paramFloat)
  {
    printIndent();
    print("glPointParameterf(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glPointParameterf(paramInt, paramFloat);
    println("");
  }
  
  public void glPointParameterfv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glPointParameterfv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glPointParameterfv(paramInt, paramFloatBuffer);
    println("");
  }
  
  public void glPointParameterfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    printIndent();
    print("glPointParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glPointParameterfv(paramInt1, paramArrayOfFloat, paramInt2);
    println("");
  }
  
  public void glPointParameterx(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPointParameterx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glPointParameterx(paramInt1, paramInt2);
    println("");
  }
  
  public void glPointParameterxv(int paramInt, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glPointParameterxv(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glPointParameterxv(paramInt, paramIntBuffer);
    println("");
  }
  
  public void glPointParameterxv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    printIndent();
    print("glPointParameterxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glPointParameterxv(paramInt1, paramArrayOfInt, paramInt2);
    println("");
  }
  
  public void glPointSize(float paramFloat)
  {
    printIndent();
    print("glPointSize(<float> " + paramFloat + ")");
    downstreamGLES1.glPointSize(paramFloat);
    println("");
  }
  
  public void glPointSizePointerOES(int paramInt1, int paramInt2, Buffer paramBuffer)
  {
    printIndent();
    print("glPointSizePointerOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glPointSizePointerOES(paramInt1, paramInt2, paramBuffer);
    println("");
  }
  
  public void glPointSizex(int paramInt)
  {
    printIndent();
    print("glPointSizex(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glPointSizex(paramInt);
    println("");
  }
  
  public void glPolygonOffset(float paramFloat1, float paramFloat2)
  {
    printIndent();
    print("glPolygonOffset(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ")");
    downstreamGLES1.glPolygonOffset(paramFloat1, paramFloat2);
    println("");
  }
  
  public void glPolygonOffsetx(int paramInt1, int paramInt2)
  {
    printIndent();
    print("glPolygonOffsetx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    downstreamGLES1.glPolygonOffsetx(paramInt1, paramInt2);
    println("");
  }
  
  public void glPopMatrix()
  {
    printIndent();
    print("glPopMatrix()");
    downstreamGLES1.glPopMatrix();
    println("");
  }
  
  public void glPushMatrix()
  {
    printIndent();
    print("glPushMatrix()");
    downstreamGLES1.glPushMatrix();
    println("");
  }
  
  public int glQueryMatrixxOES(int[] paramArrayOfInt1, int paramInt1, int[] paramArrayOfInt2, int paramInt2)
  {
    printIndent();
    print("glQueryMatrixxOES(<[I>, <int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    int i = downstreamGLES1.glQueryMatrixxOES(paramArrayOfInt1, paramInt1, paramArrayOfInt2, paramInt2);
    println(" = " + i);
    return i;
  }
  
  public int glQueryMatrixxOES(IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    printIndent();
    print("glQueryMatrixxOES(<java.nio.IntBuffer> " + paramIntBuffer1 + ", " + "<java.nio.IntBuffer> " + paramIntBuffer2 + ")");
    int i = downstreamGLES1.glQueryMatrixxOES(paramIntBuffer1, paramIntBuffer2);
    println(" = " + i);
    return i;
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, Buffer paramBuffer)
  {
    printIndent();
    print("glReadPixels(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBuffer);
    println("");
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, long paramLong)
  {
    printIndent();
    print("glReadPixels(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramLong);
    println("");
  }
  
  public void glReadnPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    printIndent();
    print("glReadnPixels(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glReadnPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    println("");
  }
  
  public void glRenderbufferStorage(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glRenderbufferStorage(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glRenderbufferStorage(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glRenderbufferStorageMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisample(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glRenderbufferStorageMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glRenderbufferStorageMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisampleEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glRenderbufferStorageMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glRenderbufferStorageMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glRenderbufferStorageMultisampleIMG(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glRenderbufferStorageMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glResolveMultisampleFramebuffer()
  {
    printIndent();
    print("glResolveMultisampleFramebuffer()");
    downstreamGLES1.glResolveMultisampleFramebuffer();
    println("");
  }
  
  public void glRotatef(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    printIndent();
    print("glRotatef(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ", " + "<float> " + paramFloat4 + ")");
    downstreamGLES1.glRotatef(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    println("");
  }
  
  public void glRotatex(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glRotatex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glRotatex(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glSampleCoverage(float paramFloat, boolean paramBoolean)
  {
    printIndent();
    print("glSampleCoverage(<float> " + paramFloat + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES1.glSampleCoverage(paramFloat, paramBoolean);
    println("");
  }
  
  public void glSampleCoveragex(int paramInt, boolean paramBoolean)
  {
    printIndent();
    print("glSampleCoveragex(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ", " + "<boolean> " + paramBoolean + ")");
    downstreamGLES1.glSampleCoveragex(paramInt, paramBoolean);
    println("");
  }
  
  public void glScalef(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    printIndent();
    print("glScalef(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ")");
    downstreamGLES1.glScalef(paramFloat1, paramFloat2, paramFloat3);
    println("");
  }
  
  public void glScalex(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glScalex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glScalex(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glScissor(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glScissor(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glScissor(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glShadeModel(int paramInt)
  {
    printIndent();
    print("glShadeModel(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glShadeModel(paramInt);
    println("");
  }
  
  public void glStartTilingQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glStartTilingQCOM(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glStartTilingQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glStencilFunc(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glStencilFunc(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glStencilFunc(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glStencilMask(int paramInt)
  {
    printIndent();
    print("glStencilMask(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    downstreamGLES1.glStencilMask(paramInt);
    println("");
  }
  
  public void glStencilOp(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glStencilOp(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glStencilOp(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexCoordPointer(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glTexCoordPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glTexCoordPointer(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public void glTexCoordPointer(GLArrayData paramGLArrayData)
  {
    printIndent();
    print("glTexCoordPointer(<com.jogamp.opengl.GLArrayData> " + paramGLArrayData + ")");
    downstreamGLES1.glTexCoordPointer(paramGLArrayData);
    println("");
  }
  
  public void glTexCoordPointer(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    printIndent();
    print("glTexCoordPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glTexCoordPointer(paramInt1, paramInt2, paramInt3, paramLong);
    println("");
  }
  
  public void glTexEnvf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glTexEnvf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glTexEnvf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glTexEnvfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glTexEnvfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexEnvfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glTexEnvfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glTexEnvfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glTexEnvfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glTexEnvi(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexEnvi(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexEnvi(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexEnviv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexEnviv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexEnviv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexEnviv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexEnviv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glTexEnviv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexEnvx(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexEnvx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexEnvx(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexEnvxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexEnvxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glTexEnvxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexEnvxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexEnvxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexEnvxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexGenf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glTexGenf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glTexGenf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glTexGenfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glTexGenfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexGenfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glTexGenfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glTexGenfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glTexGenfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glTexGeni(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexGeni(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexGeni(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexGeniv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexGeniv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexGeniv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexGeniv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexGeniv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glTexGeniv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexGenx(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexGenx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexGenx(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexGenxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexGenxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glTexGenxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexGenxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexGenxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexGenxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glTexImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glTexParameterf(int paramInt1, int paramInt2, float paramFloat)
  {
    printIndent();
    print("glTexParameterf(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<float> " + paramFloat + ")");
    downstreamGLES1.glTexParameterf(paramInt1, paramInt2, paramFloat);
    println("");
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    printIndent();
    print("glTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.FloatBuffer> " + paramFloatBuffer + ")");
    downstreamGLES1.glTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    println("");
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    printIndent();
    print("glTexParameterfv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[F>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    println("");
  }
  
  public void glTexParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexParameteri(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexParameteri(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexParameteriv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexParameterx(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTexParameterx(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexParameterx(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public void glTexParameterxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    printIndent();
    print("glTexParameterxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<[I>" + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTexParameterxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    println("");
  }
  
  public void glTexParameterxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    printIndent();
    print("glTexParameterxv(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<java.nio.IntBuffer> " + paramIntBuffer + ")");
    downstreamGLES1.glTexParameterxv(paramInt1, paramInt2, paramIntBuffer);
    println("");
  }
  
  public void glTexStorage1D(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glTexStorage1D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glTexStorage1D(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glTexStorage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glTexStorage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glTexStorage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glTexStorage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glTexStorage3D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES1.glTexStorage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    printIndent();
    print("glTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    println("");
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    printIndent();
    print("glTexSubImage2D(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt8).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    println("");
  }
  
  public void glTextureStorage1DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    printIndent();
    print("glTextureStorage1DEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ")");
    downstreamGLES1.glTextureStorage1DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    println("");
  }
  
  public void glTextureStorage2DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    printIndent();
    print("glTextureStorage2DEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ")");
    downstreamGLES1.glTextureStorage2DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    println("");
  }
  
  public void glTextureStorage3DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    printIndent();
    print("glTextureStorage3DEXT(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt5).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt6).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt7).toUpperCase() + ")");
    downstreamGLES1.glTextureStorage3DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7);
    println("");
  }
  
  public void glTranslatef(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    printIndent();
    print("glTranslatef(<float> " + paramFloat1 + ", " + "<float> " + paramFloat2 + ", " + "<float> " + paramFloat3 + ")");
    downstreamGLES1.glTranslatef(paramFloat1, paramFloat2, paramFloat3);
    println("");
  }
  
  public void glTranslatex(int paramInt1, int paramInt2, int paramInt3)
  {
    printIndent();
    print("glTranslatex(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ")");
    downstreamGLES1.glTranslatex(paramInt1, paramInt2, paramInt3);
    println("");
  }
  
  public boolean glUnmapBuffer(int paramInt)
  {
    printIndent();
    print("glUnmapBuffer(<int> 0x" + Integer.toHexString(paramInt).toUpperCase() + ")");
    boolean bool = downstreamGLES1.glUnmapBuffer(paramInt);
    println(" = " + bool);
    return bool;
  }
  
  public void glVertexPointer(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glVertexPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glVertexPointer(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public void glVertexPointer(GLArrayData paramGLArrayData)
  {
    printIndent();
    print("glVertexPointer(<com.jogamp.opengl.GLArrayData> " + paramGLArrayData + ")");
    downstreamGLES1.glVertexPointer(paramGLArrayData);
    println("");
  }
  
  public void glVertexPointer(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    printIndent();
    print("glVertexPointer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<long> " + paramLong + ")");
    downstreamGLES1.glVertexPointer(paramInt1, paramInt2, paramInt3, paramLong);
    println("");
  }
  
  public void glViewport(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    printIndent();
    print("glViewport(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt4).toUpperCase() + ")");
    downstreamGLES1.glViewport(paramInt1, paramInt2, paramInt3, paramInt4);
    println("");
  }
  
  public void glWeightPointerOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    printIndent();
    print("glWeightPointerOES(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt3).toUpperCase() + ", " + "<java.nio.Buffer> " + paramBuffer + ")");
    downstreamGLES1.glWeightPointerOES(paramInt1, paramInt2, paramInt3, paramBuffer);
    println("");
  }
  
  public boolean hasBasicFBOSupport()
  {
    return downstreamGLES1.hasBasicFBOSupport();
  }
  
  public boolean hasFullFBOSupport()
  {
    return downstreamGLES1.hasFullFBOSupport();
  }
  
  public boolean hasGLSL()
  {
    return downstreamGLES1.hasGLSL();
  }
  
  public boolean isExtensionAvailable(String paramString)
  {
    return downstreamGLES1.isExtensionAvailable(paramString);
  }
  
  public boolean isFunctionAvailable(String paramString)
  {
    return downstreamGLES1.isFunctionAvailable(paramString);
  }
  
  public boolean isGL()
  {
    return true;
  }
  
  public boolean isGL2()
  {
    return downstreamGLES1.isGL2();
  }
  
  public boolean isGL2ES1()
  {
    return downstreamGLES1.isGL2ES1();
  }
  
  public boolean isGL2ES2()
  {
    return downstreamGLES1.isGL2ES2();
  }
  
  public boolean isGL2ES3()
  {
    return downstreamGLES1.isGL2ES3();
  }
  
  public boolean isGL2GL3()
  {
    return downstreamGLES1.isGL2GL3();
  }
  
  public boolean isGL3()
  {
    return downstreamGLES1.isGL3();
  }
  
  public boolean isGL3ES3()
  {
    return downstreamGLES1.isGL3ES3();
  }
  
  public boolean isGL3bc()
  {
    return downstreamGLES1.isGL3bc();
  }
  
  public boolean isGL3core()
  {
    return downstreamGLES1.isGL3core();
  }
  
  public boolean isGL4()
  {
    return downstreamGLES1.isGL4();
  }
  
  public boolean isGL4ES3()
  {
    return downstreamGLES1.isGL4ES3();
  }
  
  public boolean isGL4bc()
  {
    return downstreamGLES1.isGL4bc();
  }
  
  public boolean isGL4core()
  {
    return downstreamGLES1.isGL4core();
  }
  
  public boolean isGLES()
  {
    return downstreamGLES1.isGLES();
  }
  
  public boolean isGLES1()
  {
    return downstreamGLES1.isGLES1();
  }
  
  public boolean isGLES2()
  {
    return downstreamGLES1.isGLES2();
  }
  
  public boolean isGLES2Compatible()
  {
    return downstreamGLES1.isGLES2Compatible();
  }
  
  public boolean isGLES3()
  {
    return downstreamGLES1.isGLES3();
  }
  
  public boolean isGLES31Compatible()
  {
    return downstreamGLES1.isGLES31Compatible();
  }
  
  public boolean isGLES32Compatible()
  {
    return downstreamGLES1.isGLES32Compatible();
  }
  
  public boolean isGLES3Compatible()
  {
    return downstreamGLES1.isGLES3Compatible();
  }
  
  public boolean isGLcore()
  {
    return downstreamGLES1.isGLcore();
  }
  
  public boolean isNPOTTextureAvailable()
  {
    return downstreamGLES1.isNPOTTextureAvailable();
  }
  
  public boolean isTextureFormatBGRA8888Available()
  {
    return downstreamGLES1.isTextureFormatBGRA8888Available();
  }
  
  public boolean isVBOArrayBound()
  {
    return downstreamGLES1.isVBOArrayBound();
  }
  
  public boolean isVBOElementArrayBound()
  {
    return downstreamGLES1.isVBOElementArrayBound();
  }
  
  public GLBufferStorage mapBuffer(int paramInt1, int paramInt2)
  {
    printIndent();
    print("mapBuffer(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    GLBufferStorage localGLBufferStorage = downstreamGLES1.mapBuffer(paramInt1, paramInt2);
    println(" = " + localGLBufferStorage);
    return localGLBufferStorage;
  }
  
  public GLBufferStorage mapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    printIndent();
    print("mapBufferRange(<int> 0x" + Integer.toHexString(paramInt1).toUpperCase() + ", " + "<long> " + paramLong1 + ", " + "<long> " + paramLong2 + ", " + "<int> 0x" + Integer.toHexString(paramInt2).toUpperCase() + ")");
    GLBufferStorage localGLBufferStorage = downstreamGLES1.mapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    println(" = " + localGLBufferStorage);
    return localGLBufferStorage;
  }
  
  public void setSwapInterval(int paramInt)
  {
    downstreamGLES1.setSwapInterval(paramInt);
  }
  
  public String toString() {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("TraceGLES1 [this 0x" + Integer.toHexString(hashCode()) + " implementing com.jogamp.opengl.GLES1,\n\t");
    localStringBuilder.append(" downstream: " + downstreamGLES1.toString() + "\n\t]");
    return localStringBuilder.toString();
  }
  
  private int indent = 0;
  private GLES1 downstreamGLES1;
  
  protected String dumpArray(Object paramObject) { if (paramObject == null) return "[null]";
    StringBuilder localStringBuilder = new StringBuilder("[");
    int i = Array.getLength(paramObject);
    int j = Math.min(i, 16);
    for (int k = 0; k < j; k++) {
      localStringBuilder.append(Array.get(paramObject, k));
      if (k < j - 1)
        localStringBuilder.append(',');
    }
    if (i > 16)
      localStringBuilder.append("...").append(i);
    localStringBuilder.append(']');
    return localStringBuilder.toString();
  }
  
  protected void print(String paramString) {
    stream.print(paramString);
  }
  
  protected void println(String paramString) {
    stream.println(paramString);
  }
  
  protected void printIndent() {
    for (int i = 0; i < indent; i++) stream.print(' ');
  }
}
