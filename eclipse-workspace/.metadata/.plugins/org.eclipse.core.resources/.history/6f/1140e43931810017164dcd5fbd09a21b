package com.jogamp.nativewindow.util;










public class Point
  implements Cloneable, PointImmutable
{
  int x;
  








  int y;
  








  public Point(int paramInt1, int paramInt2)
  {
    x = paramInt1;
    y = paramInt2;
  }
  
  public Point() {
    this(0, 0);
  }
  
  public Object cloneMutable()
  {
    return clone();
  }
  
  public Object clone()
  {
    try {
      return super.clone();
    } catch (CloneNotSupportedException localCloneNotSupportedException) {
      throw new InternalError();
    }
  }
  
  public int compareTo(PointImmutable paramPointImmutable)
  {
    int i = x * y;
    int j = paramPointImmutable.getX() * paramPointImmutable.getY();
    
    if (i > j)
      return 1;
    if (i < j) {
      return -1;
    }
    return 0;
  }
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) return true;
    if ((paramObject instanceof Point)) {
      Point localPoint = (Point)paramObject;
      return (y == y) && (x == x);
    }
    return false;
  }
  
  public final int getX()
  {
    return x;
  }
  
  public final int getY()
  {
    return y;
  }
  

  public int hashCode()
  {
    int i = 31 + x;
    i = (i << 5) - i + y;
    return i;
  }
  


  public String toString() { return x + " / " + y; }
  
  public final void set(int paramInt1, int paramInt2) {
    x = paramInt1;y = paramInt2; }
  public final void setX(int paramInt) { x = paramInt; }
  public final void setY(int paramInt) { y = paramInt; }
  





  public final Point translate(Point paramPoint)
  {
    x += x;
    y += y;
    return this;
  }
  






  public final Point translate(int paramInt1, int paramInt2)
  {
    x += paramInt1;
    y += paramInt2;
    return this;
  }
  






  public final Point scale(int paramInt1, int paramInt2)
  {
    x *= paramInt1;
    y *= paramInt2;
    return this;
  }
  









  public final Point scale(float paramFloat1, float paramFloat2)
  {
    x = ((int)(x * paramFloat1 + 0.5F));
    y = ((int)(y * paramFloat2 + 0.5F));
    return this;
  }
  






  public final Point scaleInv(int paramInt1, int paramInt2)
  {
    x /= paramInt1;
    y /= paramInt2;
    return this;
  }
  








  public final Point scaleInv(float paramFloat1, float paramFloat2)
  {
    x = ((int)(x / paramFloat1 + 0.5F));
    y = ((int)(y / paramFloat2 + 0.5F));
    return this;
  }
}
