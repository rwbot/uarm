package com.jogamp.opengl;

import com.jogamp.common.nio.PointerBuffer;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.ShortBuffer;
import jogamp.opengl.Debug;












public class DebugGLES1
  implements GL2ES1, GLES1
{
  public static final boolean DEBUG = Debug.debug("DebugGLES1");
  private GLContext _context;
  
  public DebugGLES1(GLES1 paramGLES1) { if (paramGLES1 == null) {
      throw new IllegalArgumentException("null downstreamGLES1");
    }
    downstreamGLES1 = paramGLES1;
    
    _context = paramGLES1.getContext();
  }
  
  public final GL getDownstreamGL() throws GLException
  {
    return downstreamGLES1;
  }
  
  public int getBoundBuffer(int paramInt)
  {
    return downstreamGLES1.getBoundBuffer(paramInt);
  }
  
  public int getBoundFramebuffer(int paramInt)
  {
    return downstreamGLES1.getBoundFramebuffer(paramInt);
  }
  
  public GLBufferStorage getBufferStorage(int paramInt)
  {
    return downstreamGLES1.getBufferStorage(paramInt);
  }
  
  public GLContext getContext()
  {
    return downstreamGLES1.getContext();
  }
  
  public int getDefaultDrawFramebuffer()
  {
    return downstreamGLES1.getDefaultDrawFramebuffer();
  }
  
  public int getDefaultReadBuffer()
  {
    return downstreamGLES1.getDefaultReadBuffer();
  }
  
  public int getDefaultReadFramebuffer()
  {
    return downstreamGLES1.getDefaultReadFramebuffer();
  }
  
  public Object getExtension(String paramString)
  {
    return downstreamGLES1.getExtension(paramString);
  }
  
  public GL getGL()
  {
    return this;
  }
  
  public GL2 getGL2()
  {
    throw new GLException("Not a GL2 implementation");
  }
  
  public GL2ES1 getGL2ES1()
  {
    if (isGL2ES1()) return this;
    throw new GLException("Not a GL2ES1 implementation");
  }
  
  public GL2ES2 getGL2ES2()
  {
    throw new GLException("Not a GL2ES2 implementation");
  }
  
  public GL2ES3 getGL2ES3()
  {
    throw new GLException("Not a GL2ES3 implementation");
  }
  
  public GL2GL3 getGL2GL3()
  {
    throw new GLException("Not a GL2GL3 implementation");
  }
  
  public GL3 getGL3()
  {
    throw new GLException("Not a GL3 implementation");
  }
  
  public GL3ES3 getGL3ES3()
  {
    throw new GLException("Not a GL3ES3 implementation");
  }
  
  public GL3bc getGL3bc()
  {
    throw new GLException("Not a GL3bc implementation");
  }
  
  public GL4 getGL4()
  {
    throw new GLException("Not a GL4 implementation");
  }
  
  public GL4ES3 getGL4ES3()
  {
    throw new GLException("Not a GL4ES3 implementation");
  }
  
  public GL4bc getGL4bc()
  {
    throw new GLException("Not a GL4bc implementation");
  }
  
  public GLES1 getGLES1()
  {
    if (isGLES1()) return this;
    throw new GLException("Not a GLES1 implementation");
  }
  
  public GLES2 getGLES2()
  {
    throw new GLException("Not a GLES2 implementation");
  }
  
  public GLES3 getGLES3()
  {
    throw new GLException("Not a GLES3 implementation");
  }
  
  public GLProfile getGLProfile()
  {
    return downstreamGLES1.getGLProfile();
  }
  
  public int getMaxRenderbufferSamples()
  {
    return downstreamGLES1.getMaxRenderbufferSamples();
  }
  
  public Object getPlatformGLExtensions()
  {
    return downstreamGLES1.getPlatformGLExtensions();
  }
  
  public GL getRootGL()
  {
    return downstreamGLES1.getRootGL();
  }
  
  public int getSwapInterval()
  {
    return downstreamGLES1.getSwapInterval();
  }
  
  public void glActiveTexture(int paramInt)
  {
    checkContext();
    downstreamGLES1.glActiveTexture(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glActiveTexture", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glAlphaFunc(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glAlphaFunc(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glAlphaFunc", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glAlphaFuncx(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glAlphaFuncx(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glAlphaFuncx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindBuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBindBuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindFramebuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBindFramebuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindRenderbuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBindRenderbuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindRenderbuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindTexture(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBindTexture(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindTexture", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindVertexArrayOES(int paramInt)
  {
    checkContext();
    downstreamGLES1.glBindVertexArrayOES(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBindVertexArrayOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBlendEquation(int paramInt)
  {
    checkContext();
    downstreamGLES1.glBlendEquation(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBlendEquation", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBlendEquationSeparate(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBlendEquationSeparate(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendFunc(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBlendFunc(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFunc", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendFuncSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glBlendFuncSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFuncSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glBufferData(int paramInt1, long paramLong, Buffer paramBuffer, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glBufferData(paramInt1, paramLong, paramBuffer, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glBufferData", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong), paramBuffer, Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBufferSubData(int paramInt, long paramLong1, long paramLong2, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glBufferSubData(paramInt, paramLong1, paramLong2, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s, <java.nio.Buffer> %s)", new Object[] { "glBufferSubData", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong1), Long.valueOf(paramLong2), paramBuffer });
    }
  }
  
  public int glCheckFramebufferStatus(int paramInt)
  {
    checkContext();
    int i = downstreamGLES1.glCheckFramebufferStatus(paramInt);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X)", new Object[] { "glCheckFramebufferStatus", 
        Integer.valueOf(paramInt) });
    }
    return i;
  }
  
  public void glClear(int paramInt)
  {
    checkContext();
    downstreamGLES1.glClear(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glClear", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glClearColor(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES1.glClearColor(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glClearColor", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glClearColorx(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glClearColorx(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glClearColorx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glClearDepth(double paramDouble)
  {
    checkContext();
    downstreamGLES1.glClearDepth(paramDouble);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<double> %s)", new Object[] { "glClearDepth", 
        Double.valueOf(paramDouble) });
    }
  }
  
  public void glClearDepthf(float paramFloat)
  {
    checkContext();
    downstreamGLES1.glClearDepthf(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glClearDepthf", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glClearDepthx(int paramInt)
  {
    checkContext();
    downstreamGLES1.glClearDepthx(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glClearDepthx", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glClearStencil(int paramInt)
  {
    checkContext();
    downstreamGLES1.glClearStencil(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glClearStencil", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glClientActiveTexture(int paramInt)
  {
    checkContext();
    downstreamGLES1.glClientActiveTexture(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glClientActiveTexture", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glClipPlanef(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glClipPlanef(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glClipPlanef", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glClipPlanef(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glClipPlanef(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glClipPlanef", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glClipPlanefIMG(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glClipPlanefIMG(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glClipPlanefIMG", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glClipPlanefIMG(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glClipPlanefIMG(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glClipPlanefIMG", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glClipPlanex(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glClipPlanex(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glClipPlanex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glClipPlanex(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glClipPlanex(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glClipPlanex", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glClipPlanexIMG(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glClipPlanexIMG(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glClipPlanexIMG", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glClipPlanexIMG(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glClipPlanexIMG(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glClipPlanexIMG", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glColor4f(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES1.glColor4f(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glColor4f", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glColor4ub(byte paramByte1, byte paramByte2, byte paramByte3, byte paramByte4)
  {
    checkContext();
    downstreamGLES1.glColor4ub(paramByte1, paramByte2, paramByte3, paramByte4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<byte> %s, <byte> %s, <byte> %s, <byte> %s)", new Object[] { "glColor4ub", 
        Byte.valueOf(paramByte1), Byte.valueOf(paramByte2), Byte.valueOf(paramByte3), Byte.valueOf(paramByte4) });
    }
  }
  
  public void glColor4x(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glColor4x(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glColor4x", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glColorMask(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    checkContext();
    downstreamGLES1.glColorMask(paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<boolean> %s, <boolean> %s, <boolean> %s, <boolean> %s)", new Object[] { "glColorMask", 
        Boolean.valueOf(paramBoolean1), Boolean.valueOf(paramBoolean2), Boolean.valueOf(paramBoolean3), Boolean.valueOf(paramBoolean4) });
    }
  }
  
  public void glColorPointer(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glColorPointer(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glColorPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public void glColorPointer(GLArrayData paramGLArrayData)
  {
    checkContext();
    downstreamGLES1.glColorPointer(paramGLArrayData);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<com.jogamp.opengl.GLArrayData> %s)", new Object[] { "glColorPointer", paramGLArrayData });
    }
  }
  
  private GLES1 downstreamGLES1;
  public void glColorPointer(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    checkContext();
    downstreamGLES1.glColorPointer(paramInt1, paramInt2, paramInt3, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glColorPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glCompressedTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), paramBuffer });
    }
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, long paramLong)
  {
    checkContext();
    downstreamGLES1.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glCompressedTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES1.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glCompressedTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glCompressedTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glCopyTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    checkContext();
    downstreamGLES1.glCopyTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
  }
  
  public void glCopyTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    checkContext();
    downstreamGLES1.glCopyTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
  }
  
  public void glCopyTextureLevelsAPPLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glCopyTextureLevelsAPPLE(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTextureLevelsAPPLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glCullFace(int paramInt)
  {
    checkContext();
    downstreamGLES1.glCullFace(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glCullFace", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glCurrentPaletteMatrixOES(int paramInt)
  {
    checkContext();
    downstreamGLES1.glCurrentPaletteMatrixOES(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glCurrentPaletteMatrixOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDeleteBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDeleteBuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteBuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glDeleteBuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteBuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glDeleteFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteFramebuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDeleteFramebuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteFramebuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDeleteRenderbuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteRenderbuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glDeleteRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteRenderbuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glDeleteTextures(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteTextures", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDeleteTextures(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteTextures", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDeleteVertexArraysOES(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteVertexArraysOES", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glDeleteVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteVertexArraysOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDepthFunc(int paramInt)
  {
    checkContext();
    downstreamGLES1.glDepthFunc(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDepthFunc", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDepthMask(boolean paramBoolean)
  {
    checkContext();
    downstreamGLES1.glDepthMask(paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<boolean> %s)", new Object[] { "glDepthMask", 
        Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glDepthRange(double paramDouble1, double paramDouble2)
  {
    checkContext();
    downstreamGLES1.glDepthRange(paramDouble1, paramDouble2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<double> %s, <double> %s)", new Object[] { "glDepthRange", 
        Double.valueOf(paramDouble1), Double.valueOf(paramDouble2) });
    }
  }
  
  public void glDepthRangef(float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES1.glDepthRangef(paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s)", new Object[] { "glDepthRangef", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glDepthRangex(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glDepthRangex(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glDepthRangex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDisable(int paramInt)
  {
    checkContext();
    downstreamGLES1.glDisable(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDisable", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDisableClientState(int paramInt)
  {
    checkContext();
    downstreamGLES1.glDisableClientState(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDisableClientState", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDisableDriverControlQCOM(int paramInt)
  {
    checkContext();
    downstreamGLES1.glDisableDriverControlQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDisableDriverControlQCOM", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glDiscardFramebufferEXT(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDiscardFramebufferEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDiscardFramebufferEXT(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDiscardFramebufferEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glDrawArrays(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glDrawArrays(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawArrays", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    checkContext();
    downstreamGLES1.glDrawElements(paramInt1, paramInt2, paramInt3, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glDrawElements", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong) });
    }
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glDrawElements(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glDrawElements", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public void glDrawTexfOES(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    checkContext();
    downstreamGLES1.glDrawTexfOES(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glDrawTexfOES", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4), Float.valueOf(paramFloat5) });
    }
  }
  
  public void glDrawTexfvOES(FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glDrawTexfvOES(paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.FloatBuffer> %s)", new Object[] { "glDrawTexfvOES", paramFloatBuffer });
    }
  }
  

  public void glDrawTexfvOES(float[] paramArrayOfFloat, int paramInt)
  {
    checkContext();
    downstreamGLES1.glDrawTexfvOES(paramArrayOfFloat, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[F>, <int> 0x%X)", new Object[] { "glDrawTexfvOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDrawTexiOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glDrawTexiOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawTexiOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawTexivOES(IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDrawTexivOES(paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s)", new Object[] { "glDrawTexivOES", paramIntBuffer });
    }
  }
  

  public void glDrawTexivOES(int[] paramArrayOfInt, int paramInt)
  {
    checkContext();
    downstreamGLES1.glDrawTexivOES(paramArrayOfInt, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X)", new Object[] { "glDrawTexivOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDrawTexsOES(short paramShort1, short paramShort2, short paramShort3, short paramShort4, short paramShort5)
  {
    checkContext();
    downstreamGLES1.glDrawTexsOES(paramShort1, paramShort2, paramShort3, paramShort4, paramShort5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<short> %s, <short> %s, <short> %s, <short> %s, <short> %s)", new Object[] { "glDrawTexsOES", 
        Short.valueOf(paramShort1), Short.valueOf(paramShort2), Short.valueOf(paramShort3), Short.valueOf(paramShort4), Short.valueOf(paramShort5) });
    }
  }
  
  public void glDrawTexsvOES(short[] paramArrayOfShort, int paramInt)
  {
    checkContext();
    downstreamGLES1.glDrawTexsvOES(paramArrayOfShort, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[S>, <int> 0x%X)", new Object[] { "glDrawTexsvOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDrawTexsvOES(ShortBuffer paramShortBuffer)
  {
    checkContext();
    downstreamGLES1.glDrawTexsvOES(paramShortBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.ShortBuffer> %s)", new Object[] { "glDrawTexsvOES", paramShortBuffer });
    }
  }
  

  public void glDrawTexxOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glDrawTexxOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawTexxOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawTexxvOES(int[] paramArrayOfInt, int paramInt)
  {
    checkContext();
    downstreamGLES1.glDrawTexxvOES(paramArrayOfInt, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X)", new Object[] { "glDrawTexxvOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDrawTexxvOES(IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glDrawTexxvOES(paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s)", new Object[] { "glDrawTexxvOES", paramIntBuffer });
    }
  }
  

  public void glEGLImageTargetRenderbufferStorageOES(int paramInt, long paramLong)
  {
    checkContext();
    downstreamGLES1.glEGLImageTargetRenderbufferStorageOES(paramInt, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s)", new Object[] { "glEGLImageTargetRenderbufferStorageOES", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong) });
    }
  }
  
  public void glEGLImageTargetTexture2DOES(int paramInt, long paramLong)
  {
    checkContext();
    downstreamGLES1.glEGLImageTargetTexture2DOES(paramInt, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s)", new Object[] { "glEGLImageTargetTexture2DOES", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong) });
    }
  }
  
  public void glEnable(int paramInt)
  {
    checkContext();
    downstreamGLES1.glEnable(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEnable", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEnableClientState(int paramInt)
  {
    checkContext();
    downstreamGLES1.glEnableClientState(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEnableClientState", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEnableDriverControlQCOM(int paramInt)
  {
    checkContext();
    downstreamGLES1.glEnableDriverControlQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEnableDriverControlQCOM", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEndTilingQCOM(int paramInt)
  {
    checkContext();
    downstreamGLES1.glEndTilingQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEndTilingQCOM", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glExtGetBufferPointervQCOM(int paramInt, PointerBuffer paramPointerBuffer)
  {
    checkContext();
    downstreamGLES1.glExtGetBufferPointervQCOM(paramInt, paramPointerBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <com.jogamp.common.nio.PointerBuffer> %s)", new Object[] { "glExtGetBufferPointervQCOM", 
        Integer.valueOf(paramInt), paramPointerBuffer });
    }
  }
  
  public void glExtGetBuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtGetBuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetBuffersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetBuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glExtGetBuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetBuffersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetFramebuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtGetFramebuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetFramebuffersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetFramebuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glExtGetFramebuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetFramebuffersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramArrayOfByte, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetProgramBinarySourceQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramByteBuffer, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetProgramBinarySourceQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer, paramIntBuffer });
    }
  }
  
  public void glExtGetProgramsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtGetProgramsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetProgramsQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetProgramsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glExtGetProgramsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetProgramsQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetRenderbuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtGetRenderbuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetRenderbuffersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetRenderbuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glExtGetRenderbuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetRenderbuffersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetShadersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtGetShadersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetShadersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetShadersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glExtGetShadersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetShadersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetTexLevelParameterivQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetTexLevelParameterivQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramIntBuffer });
    }
  }
  
  public void glExtGetTexSubImageQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glExtGetTexSubImageQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glExtGetTexSubImageQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), paramBuffer });
    }
  }
  
  public void glExtGetTexturesQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtGetTexturesQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetTexturesQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetTexturesQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glExtGetTexturesQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetTexturesQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public boolean glExtIsProgramBinaryQCOM(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glExtIsProgramBinaryQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glExtIsProgramBinaryQCOM", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public void glExtTexObjectStateOverrideiQCOM(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glExtTexObjectStateOverrideiQCOM(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glExtTexObjectStateOverrideiQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glFinish()
  {
    checkContext();
    downstreamGLES1.glFinish();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glFinish" });
    }
  }
  

  public void glFlush()
  {
    checkContext();
    downstreamGLES1.glFlush();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glFlush" });
    }
  }
  

  public void glFlushMappedBufferRange(int paramInt, long paramLong1, long paramLong2)
  {
    checkContext();
    downstreamGLES1.glFlushMappedBufferRange(paramInt, paramLong1, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s)", new Object[] { "glFlushMappedBufferRange", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
  }
  
  public void glFogf(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glFogf(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glFogf", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glFogfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glFogfv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glFogfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glFogfv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glFogfv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glFogfv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glFogx(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glFogx(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glFogx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glFogxv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glFogxv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glFogxv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glFogxv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glFogxv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glFogxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glFramebufferRenderbuffer(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glFramebufferRenderbuffer(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferRenderbuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glFramebufferTexture2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glFramebufferTexture2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glFramebufferTexture2DMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES1.glFramebufferTexture2DMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture2DMultisampleEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glFramebufferTexture2DMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES1.glFramebufferTexture2DMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture2DMultisampleIMG", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glFrontFace(int paramInt)
  {
    checkContext();
    downstreamGLES1.glFrontFace(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glFrontFace", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glFrustum(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, double paramDouble6)
  {
    checkContext();
    downstreamGLES1.glFrustum(paramDouble1, paramDouble2, paramDouble3, paramDouble4, paramDouble5, paramDouble6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<double> %s, <double> %s, <double> %s, <double> %s, <double> %s, <double> %s)", new Object[] { "glFrustum", 
        Double.valueOf(paramDouble1), Double.valueOf(paramDouble2), Double.valueOf(paramDouble3), Double.valueOf(paramDouble4), Double.valueOf(paramDouble5), Double.valueOf(paramDouble6) });
    }
  }
  
  public void glFrustumf(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6)
  {
    checkContext();
    downstreamGLES1.glFrustumf(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glFrustumf", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4), Float.valueOf(paramFloat5), Float.valueOf(paramFloat6) });
    }
  }
  
  public void glFrustumx(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES1.glFrustumx(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFrustumx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glGenBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGenBuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenBuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGenBuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenBuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGenFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenFramebuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGenFramebuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenFramebuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGenRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenRenderbuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGenRenderbuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenRenderbuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGenTextures(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenTextures", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGenTextures(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenTextures", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGenVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenVertexArraysOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGenVertexArraysOES(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenVertexArraysOES", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenerateMipmap(int paramInt)
  {
    checkContext();
    downstreamGLES1.glGenerateMipmap(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glGenerateMipmap", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glGetBooleanv(int paramInt, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES1.glGetBooleanv(paramInt, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetBooleanv", 
        Integer.valueOf(paramInt), paramByteBuffer });
    }
  }
  
  public void glGetBooleanv(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGetBooleanv(paramInt1, paramArrayOfByte, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetBooleanv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetBufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetBufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetBufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetBufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetClipPlanef(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGetClipPlanef(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetClipPlanef", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetClipPlanef(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetClipPlanef(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetClipPlanef", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glGetClipPlanex(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetClipPlanex(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetClipPlanex", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGetClipPlanex(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGetClipPlanex(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetClipPlanex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetDriverControlStringQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES1.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetDriverControlStringQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetDriverControlsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetDriverControlsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetDriverControlsQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetDriverControlsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES1.glGetDriverControlsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetDriverControlsQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public int glGetError()
  {
    checkContext();
    int i = downstreamGLES1.glGetError();
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s()", new Object[] { "glGetError" });
    }
    
    return i;
  }
  
  public void glGetFixedv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGetFixedv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetFixedv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetFixedv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetFixedv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetFixedv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGetFloatv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGetFloatv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetFloatv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetFloatv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetFloatv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetFloatv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetFramebufferAttachmentParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetFramebufferAttachmentParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public int glGetGraphicsResetStatus()
  {
    checkContext();
    int i = downstreamGLES1.glGetGraphicsResetStatus();
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s()", new Object[] { "glGetGraphicsResetStatus" });
    }
    
    return i;
  }
  
  public void glGetIntegerv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glGetIntegerv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetIntegerv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetIntegerv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetIntegerv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetIntegerv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGetLightfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetLightfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetLightfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetLightfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetLightfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetLightfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetLightxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetLightxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetLightxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetLightxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetLightxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetLightxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetMaterialfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetMaterialfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetMaterialfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetMaterialfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetMaterialfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetMaterialfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetMaterialxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetMaterialxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetMaterialxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetMaterialxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetMaterialxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetMaterialxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetRenderbufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetRenderbufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public String glGetString(int paramInt)
  {
    checkContext();
    String str = downstreamGLES1.glGetString(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glGetString", 
        Integer.valueOf(paramInt) });
    }
    return str;
  }
  
  public void glGetTexEnvfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexEnvfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetTexEnvfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexEnvfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexEnvfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetTexEnvfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetTexEnviv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexEnviv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexEnviv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexEnviv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexEnviv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexEnviv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexEnvxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexEnvxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexEnvxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexEnvxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexEnvxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexEnvxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexGenfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexGenfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetTexGenfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexGenfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexGenfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetTexGenfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetTexGeniv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexGeniv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexGeniv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexGeniv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexGeniv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexGeniv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexGenxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexGenxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexGenxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexGenxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexGenxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexGenxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexParameterxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetTexParameterxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexParameterxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexParameterxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glGetTexParameterxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexParameterxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetnUniformfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetnUniformfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetnUniformiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetnUniformiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glHint(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glHint(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glHint", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public boolean glIsBuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glIsBuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsBuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsEnabled(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glIsEnabled(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsEnabled", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsFramebuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glIsFramebuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsFramebuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsRenderbuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glIsRenderbuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsRenderbuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsTexture(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glIsTexture(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsTexture", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsVertexArrayOES(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glIsVertexArrayOES(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsVertexArrayOES", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public void glLightModelf(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glLightModelf(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glLightModelf", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glLightModelfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glLightModelfv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glLightModelfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glLightModelfv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glLightModelfv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glLightModelfv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glLightModelx(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glLightModelx(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glLightModelx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glLightModelxv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glLightModelxv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glLightModelxv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glLightModelxv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glLightModelxv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glLightModelxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glLightf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glLightf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glLightf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glLightfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glLightfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glLightfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glLightfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glLightfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glLightfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glLightx(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glLightx(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glLightx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glLightxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glLightxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glLightxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glLightxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glLightxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glLightxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glLineWidth(float paramFloat)
  {
    checkContext();
    downstreamGLES1.glLineWidth(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glLineWidth", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glLineWidthx(int paramInt)
  {
    checkContext();
    downstreamGLES1.glLineWidthx(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glLineWidthx", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glLoadIdentity()
  {
    checkContext();
    downstreamGLES1.glLoadIdentity();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glLoadIdentity" });
    }
  }
  

  public void glLoadMatrixf(float[] paramArrayOfFloat, int paramInt)
  {
    checkContext();
    downstreamGLES1.glLoadMatrixf(paramArrayOfFloat, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[F>, <int> 0x%X)", new Object[] { "glLoadMatrixf", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glLoadMatrixf(FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glLoadMatrixf(paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.FloatBuffer> %s)", new Object[] { "glLoadMatrixf", paramFloatBuffer });
    }
  }
  

  public void glLoadMatrixx(IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glLoadMatrixx(paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s)", new Object[] { "glLoadMatrixx", paramIntBuffer });
    }
  }
  

  public void glLoadMatrixx(int[] paramArrayOfInt, int paramInt)
  {
    checkContext();
    downstreamGLES1.glLoadMatrixx(paramArrayOfInt, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X)", new Object[] { "glLoadMatrixx", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glLoadPaletteFromModelViewMatrixOES()
  {
    checkContext();
    downstreamGLES1.glLoadPaletteFromModelViewMatrixOES();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glLoadPaletteFromModelViewMatrixOES" });
    }
  }
  

  public void glLogicOp(int paramInt)
  {
    checkContext();
    downstreamGLES1.glLogicOp(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glLogicOp", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public ByteBuffer glMapBuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    ByteBuffer localByteBuffer = downstreamGLES1.glMapBuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glMapBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return localByteBuffer;
  }
  
  public ByteBuffer glMapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    checkContext();
    ByteBuffer localByteBuffer = downstreamGLES1.glMapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s, <int> 0x%X)", new Object[] { "glMapBufferRange", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong1), Long.valueOf(paramLong2), Integer.valueOf(paramInt2) });
    }
    return localByteBuffer;
  }
  
  public void glMaterialf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glMaterialf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glMaterialf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glMaterialfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glMaterialfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glMaterialfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glMaterialfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glMaterialfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glMaterialfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glMaterialx(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glMaterialx(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glMaterialx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glMaterialxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glMaterialxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glMaterialxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glMaterialxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glMaterialxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glMaterialxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glMatrixIndexPointerOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glMatrixIndexPointerOES(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glMatrixIndexPointerOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public void glMatrixMode(int paramInt)
  {
    checkContext();
    downstreamGLES1.glMatrixMode(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glMatrixMode", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glMultMatrixf(float[] paramArrayOfFloat, int paramInt)
  {
    checkContext();
    downstreamGLES1.glMultMatrixf(paramArrayOfFloat, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[F>, <int> 0x%X)", new Object[] { "glMultMatrixf", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glMultMatrixf(FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glMultMatrixf(paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.FloatBuffer> %s)", new Object[] { "glMultMatrixf", paramFloatBuffer });
    }
  }
  

  public void glMultMatrixx(IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glMultMatrixx(paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s)", new Object[] { "glMultMatrixx", paramIntBuffer });
    }
  }
  

  public void glMultMatrixx(int[] paramArrayOfInt, int paramInt)
  {
    checkContext();
    downstreamGLES1.glMultMatrixx(paramArrayOfInt, paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X)", new Object[] { "glMultMatrixx", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glMultiTexCoord4f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES1.glMultiTexCoord4f(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glMultiTexCoord4f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glMultiTexCoord4x(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glMultiTexCoord4x(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glMultiTexCoord4x", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glNormal3f(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    checkContext();
    downstreamGLES1.glNormal3f(paramFloat1, paramFloat2, paramFloat3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s)", new Object[] { "glNormal3f", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3) });
    }
  }
  
  public void glNormal3x(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glNormal3x(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glNormal3x", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glNormalPointer(int paramInt1, int paramInt2, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glNormalPointer(paramInt1, paramInt2, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glNormalPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramBuffer });
    }
  }
  
  public void glNormalPointer(int paramInt1, int paramInt2, long paramLong)
  {
    checkContext();
    downstreamGLES1.glNormalPointer(paramInt1, paramInt2, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glNormalPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Long.valueOf(paramLong) });
    }
  }
  
  public void glNormalPointer(GLArrayData paramGLArrayData)
  {
    checkContext();
    downstreamGLES1.glNormalPointer(paramGLArrayData);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<com.jogamp.opengl.GLArrayData> %s)", new Object[] { "glNormalPointer", paramGLArrayData });
    }
  }
  

  public void glOrtho(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, double paramDouble6)
  {
    checkContext();
    downstreamGLES1.glOrtho(paramDouble1, paramDouble2, paramDouble3, paramDouble4, paramDouble5, paramDouble6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<double> %s, <double> %s, <double> %s, <double> %s, <double> %s, <double> %s)", new Object[] { "glOrtho", 
        Double.valueOf(paramDouble1), Double.valueOf(paramDouble2), Double.valueOf(paramDouble3), Double.valueOf(paramDouble4), Double.valueOf(paramDouble5), Double.valueOf(paramDouble6) });
    }
  }
  
  public void glOrthof(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6)
  {
    checkContext();
    downstreamGLES1.glOrthof(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glOrthof", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4), Float.valueOf(paramFloat5), Float.valueOf(paramFloat6) });
    }
  }
  
  public void glOrthox(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES1.glOrthox(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glOrthox", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glPixelStorei(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glPixelStorei(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPixelStorei", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPointParameterf(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glPointParameterf(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glPointParameterf", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glPointParameterfv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glPointParameterfv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glPointParameterfv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glPointParameterfv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glPointParameterfv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glPointParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPointParameterx(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glPointParameterx(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPointParameterx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPointParameterxv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glPointParameterxv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glPointParameterxv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glPointParameterxv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glPointParameterxv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glPointParameterxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPointSize(float paramFloat)
  {
    checkContext();
    downstreamGLES1.glPointSize(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glPointSize", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glPointSizePointerOES(int paramInt1, int paramInt2, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glPointSizePointerOES(paramInt1, paramInt2, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glPointSizePointerOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramBuffer });
    }
  }
  
  public void glPointSizex(int paramInt)
  {
    checkContext();
    downstreamGLES1.glPointSizex(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glPointSizex", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glPolygonOffset(float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES1.glPolygonOffset(paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s)", new Object[] { "glPolygonOffset", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glPolygonOffsetx(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES1.glPolygonOffsetx(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPolygonOffsetx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPopMatrix()
  {
    checkContext();
    downstreamGLES1.glPopMatrix();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glPopMatrix" });
    }
  }
  

  public void glPushMatrix()
  {
    checkContext();
    downstreamGLES1.glPushMatrix();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glPushMatrix" });
    }
  }
  

  public int glQueryMatrixxOES(int[] paramArrayOfInt1, int paramInt1, int[] paramArrayOfInt2, int paramInt2)
  {
    checkContext();
    int i = downstreamGLES1.glQueryMatrixxOES(paramArrayOfInt1, paramInt1, paramArrayOfInt2, paramInt2);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<[I>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glQueryMatrixxOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return i;
  }
  
  public int glQueryMatrixxOES(IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    checkContext();
    int i = downstreamGLES1.glQueryMatrixxOES(paramIntBuffer1, paramIntBuffer2);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glQueryMatrixxOES", paramIntBuffer1, paramIntBuffer2 });
    }
    
    return i;
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glReadPixels", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), paramBuffer });
    }
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, long paramLong)
  {
    checkContext();
    downstreamGLES1.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glReadPixels", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Long.valueOf(paramLong) });
    }
  }
  
  public void glReadnPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glReadnPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glReadnPixels", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), paramBuffer });
    }
  }
  
  public void glRenderbufferStorage(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glRenderbufferStorage(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorage", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glRenderbufferStorageMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glRenderbufferStorageMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisample", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glRenderbufferStorageMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glRenderbufferStorageMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisampleEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glRenderbufferStorageMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glRenderbufferStorageMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisampleIMG", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glResolveMultisampleFramebuffer()
  {
    checkContext();
    downstreamGLES1.glResolveMultisampleFramebuffer();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glResolveMultisampleFramebuffer" });
    }
  }
  

  public void glRotatef(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES1.glRotatef(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glRotatef", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glRotatex(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glRotatex(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRotatex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glSampleCoverage(float paramFloat, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES1.glSampleCoverage(paramFloat, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <boolean> %s)", new Object[] { "glSampleCoverage", 
        Float.valueOf(paramFloat), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glSampleCoveragex(int paramInt, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES1.glSampleCoveragex(paramInt, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <boolean> %s)", new Object[] { "glSampleCoveragex", 
        Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glScalef(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    checkContext();
    downstreamGLES1.glScalef(paramFloat1, paramFloat2, paramFloat3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s)", new Object[] { "glScalef", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3) });
    }
  }
  
  public void glScalex(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glScalex(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glScalex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glScissor(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glScissor(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glScissor", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glShadeModel(int paramInt)
  {
    checkContext();
    downstreamGLES1.glShadeModel(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glShadeModel", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glStartTilingQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glStartTilingQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStartTilingQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glStencilFunc(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glStencilFunc(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStencilFunc", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glStencilMask(int paramInt)
  {
    checkContext();
    downstreamGLES1.glStencilMask(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glStencilMask", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glStencilOp(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glStencilOp(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStencilOp", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexCoordPointer(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glTexCoordPointer(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexCoordPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public void glTexCoordPointer(GLArrayData paramGLArrayData)
  {
    checkContext();
    downstreamGLES1.glTexCoordPointer(paramGLArrayData);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<com.jogamp.opengl.GLArrayData> %s)", new Object[] { "glTexCoordPointer", paramGLArrayData });
    }
  }
  

  public void glTexCoordPointer(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    checkContext();
    downstreamGLES1.glTexCoordPointer(paramInt1, paramInt2, paramInt3, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexCoordPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexEnvf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glTexEnvf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glTexEnvf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glTexEnvfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexEnvfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glTexEnvfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexEnvfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glTexEnvfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glTexEnvfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glTexEnvi(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexEnvi(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexEnvi", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexEnviv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexEnviv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexEnviv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexEnviv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glTexEnviv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexEnviv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexEnvx(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexEnvx(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexEnvx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexEnvxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glTexEnvxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexEnvxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexEnvxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexEnvxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexEnvxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexGenf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glTexGenf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glTexGenf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glTexGenfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexGenfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glTexGenfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexGenfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glTexGenfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glTexGenfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glTexGeni(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexGeni(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexGeni", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexGeniv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexGeniv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexGeniv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexGeniv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glTexGeniv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexGeniv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexGenx(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexGenx(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexGenx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexGenxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glTexGenxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexGenxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexGenxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexGenxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexGenxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES1.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexParameterf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES1.glTexParameterf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glTexParameterf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES1.glTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexParameteri(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexParameteri", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameterx(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexParameterx(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexParameterx", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameterxv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTexParameterxv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexParameterxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameterxv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES1.glTexParameterxv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexParameterxv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexStorage1D(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glTexStorage1D(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexStorage1D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glTexStorage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glTexStorage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexStorage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glTexStorage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES1.glTexStorage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexStorage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES1.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glTextureStorage1DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES1.glTextureStorage1DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureStorage1DEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glTextureStorage2DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES1.glTextureStorage2DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureStorage2DEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glTextureStorage3DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    checkContext();
    downstreamGLES1.glTextureStorage3DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureStorage3DEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7) });
    }
  }
  
  public void glTranslatef(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    checkContext();
    downstreamGLES1.glTranslatef(paramFloat1, paramFloat2, paramFloat3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s)", new Object[] { "glTranslatef", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3) });
    }
  }
  
  public void glTranslatex(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES1.glTranslatex(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTranslatex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public boolean glUnmapBuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES1.glUnmapBuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glUnmapBuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public void glVertexPointer(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glVertexPointer(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glVertexPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public void glVertexPointer(GLArrayData paramGLArrayData)
  {
    checkContext();
    downstreamGLES1.glVertexPointer(paramGLArrayData);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<com.jogamp.opengl.GLArrayData> %s)", new Object[] { "glVertexPointer", paramGLArrayData });
    }
  }
  

  public void glVertexPointer(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    checkContext();
    downstreamGLES1.glVertexPointer(paramInt1, paramInt2, paramInt3, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glVertexPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong) });
    }
  }
  
  public void glViewport(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES1.glViewport(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glViewport", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glWeightPointerOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES1.glWeightPointerOES(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glWeightPointerOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public boolean hasBasicFBOSupport()
  {
    return downstreamGLES1.hasBasicFBOSupport();
  }
  
  public boolean hasFullFBOSupport()
  {
    return downstreamGLES1.hasFullFBOSupport();
  }
  
  public boolean hasGLSL()
  {
    return downstreamGLES1.hasGLSL();
  }
  
  public boolean isExtensionAvailable(String paramString)
  {
    return downstreamGLES1.isExtensionAvailable(paramString);
  }
  
  public boolean isFunctionAvailable(String paramString)
  {
    return downstreamGLES1.isFunctionAvailable(paramString);
  }
  
  public boolean isGL()
  {
    return true;
  }
  
  public boolean isGL2()
  {
    return downstreamGLES1.isGL2();
  }
  
  public boolean isGL2ES1()
  {
    return downstreamGLES1.isGL2ES1();
  }
  
  public boolean isGL2ES2()
  {
    return downstreamGLES1.isGL2ES2();
  }
  
  public boolean isGL2ES3()
  {
    return downstreamGLES1.isGL2ES3();
  }
  
  public boolean isGL2GL3()
  {
    return downstreamGLES1.isGL2GL3();
  }
  
  public boolean isGL3()
  {
    return downstreamGLES1.isGL3();
  }
  
  public boolean isGL3ES3()
  {
    return downstreamGLES1.isGL3ES3();
  }
  
  public boolean isGL3bc()
  {
    return downstreamGLES1.isGL3bc();
  }
  
  public boolean isGL3core()
  {
    return downstreamGLES1.isGL3core();
  }
  
  public boolean isGL4()
  {
    return downstreamGLES1.isGL4();
  }
  
  public boolean isGL4ES3()
  {
    return downstreamGLES1.isGL4ES3();
  }
  
  public boolean isGL4bc()
  {
    return downstreamGLES1.isGL4bc();
  }
  
  public boolean isGL4core()
  {
    return downstreamGLES1.isGL4core();
  }
  
  public boolean isGLES()
  {
    return downstreamGLES1.isGLES();
  }
  
  public boolean isGLES1()
  {
    return downstreamGLES1.isGLES1();
  }
  
  public boolean isGLES2()
  {
    return downstreamGLES1.isGLES2();
  }
  
  public boolean isGLES2Compatible()
  {
    return downstreamGLES1.isGLES2Compatible();
  }
  
  public boolean isGLES3()
  {
    return downstreamGLES1.isGLES3();
  }
  
  public boolean isGLES31Compatible()
  {
    return downstreamGLES1.isGLES31Compatible();
  }
  
  public boolean isGLES32Compatible()
  {
    return downstreamGLES1.isGLES32Compatible();
  }
  
  public boolean isGLES3Compatible()
  {
    return downstreamGLES1.isGLES3Compatible();
  }
  
  public boolean isGLcore()
  {
    return downstreamGLES1.isGLcore();
  }
  
  public boolean isNPOTTextureAvailable()
  {
    return downstreamGLES1.isNPOTTextureAvailable();
  }
  
  public boolean isTextureFormatBGRA8888Available()
  {
    return downstreamGLES1.isTextureFormatBGRA8888Available();
  }
  
  public boolean isVBOArrayBound()
  {
    return downstreamGLES1.isVBOArrayBound();
  }
  
  public boolean isVBOElementArrayBound()
  {
    return downstreamGLES1.isVBOElementArrayBound();
  }
  
  public GLBufferStorage mapBuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    GLBufferStorage localGLBufferStorage = downstreamGLES1.mapBuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "mapBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return localGLBufferStorage;
  }
  
  public GLBufferStorage mapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    checkContext();
    GLBufferStorage localGLBufferStorage = downstreamGLES1.mapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s, <int> 0x%X)", new Object[] { "mapBufferRange", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong1), Long.valueOf(paramLong2), Integer.valueOf(paramInt2) });
    }
    return localGLBufferStorage;
  }
  
  public void setSwapInterval(int paramInt)
  {
    downstreamGLES1.setSwapInterval(paramInt);
  }
  
  public String toString() {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("DebugGLES1 [this 0x" + Integer.toHexString(hashCode()) + " implementing com.jogamp.opengl.GLES1,\n\t");
    localStringBuilder.append(" downstream: " + downstreamGLES1.toString() + "\n\t]");
    return localStringBuilder.toString();
  }
  
  private int checkGLError() { return downstreamGLES1.glGetError(); }
  
  private void writeGLError(int paramInt, String paramString, Object... paramVarArgs)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(Thread.currentThread().toString());
    localStringBuilder.append(" glGetError() returned the following error codes after a call to ");
    localStringBuilder.append(String.format(paramString, paramVarArgs));
    localStringBuilder.append(": ");
    


    int i = 10;
    do {
      switch (paramInt) {
      case 1280:  localStringBuilder.append("GL_INVALID_ENUM "); break;
      case 1281:  localStringBuilder.append("GL_INVALID_VALUE "); break;
      case 1282:  localStringBuilder.append("GL_INVALID_OPERATION "); break;
      case 1285:  localStringBuilder.append("GL_OUT_OF_MEMORY "); break;
      case 0:  throw new InternalError("Should not be treating GL_NO_ERROR as error");
      default:  localStringBuilder.append("Unknown glGetError() return value: ");
      }
      localStringBuilder.append("( " + paramInt + " 0x" + Integer.toHexString(paramInt).toUpperCase() + "), ");
      i--; } while ((i >= 0) && ((paramInt = downstreamGLES1.glGetError()) != 0));
    throw new GLException(localStringBuilder.toString());
  }
  
  private void checkContext() { GLContext localGLContext = GLContext.getCurrent();
    if (localGLContext == null) {
      throw new GLException("No OpenGL context is current on this thread");
    }
    if ((_context != null) && (_context != localGLContext)) {
      throw new GLException("This GL object is being incorrectly used with a different GLContext than that which created it");
    }
  }
}
