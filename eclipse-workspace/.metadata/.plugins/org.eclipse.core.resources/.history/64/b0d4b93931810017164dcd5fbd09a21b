package com.leapmotion.leap;




public class Frame
  extends Interface
{
  private long swigCPtr;
  


  public Frame(long paramLong, boolean paramBoolean)
  {
    super(LeapJNI.Frame_SWIGUpcast(paramLong), paramBoolean);
    swigCPtr = paramLong;
  }
  
  public static long getCPtr(Frame paramFrame) {
    return paramFrame == null ? 0L : swigCPtr;
  }
  
  protected void finalize() {
    delete();
  }
  
  public synchronized void delete() {
    if (swigCPtr != 0L) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        LeapJNI.delete_Frame(swigCPtr);
      }
      swigCPtr = 0L;
    }
    super.delete();
  }
  







  public byte[] serialize()
  {
    byte[] arrayOfByte = new byte[serializeLength()];
    LeapJNI.Frame_serialize(swigCPtr, this, arrayOfByte);
    return arrayOfByte;
  }
  
























  public void deserialize(byte[] paramArrayOfByte)
  {
    LeapJNI.Frame_deserialize(swigCPtr, this, paramArrayOfByte, paramArrayOfByte.length);
  }
  
  public Frame() {
    this(LeapJNI.new_Frame(), true);
  }
  
  public long id() {
    return LeapJNI.Frame_id(swigCPtr, this);
  }
  
  public long timestamp() {
    return LeapJNI.Frame_timestamp(swigCPtr, this);
  }
  
  public HandList hands() {
    return new HandList(LeapJNI.Frame_hands(swigCPtr, this), true);
  }
  
  public Hand hand(int paramInt) {
    return new Hand(LeapJNI.Frame_hand(swigCPtr, this, paramInt), true);
  }
  
  public PointableList pointables() {
    return new PointableList(LeapJNI.Frame_pointables(swigCPtr, this), true);
  }
  
  public Pointable pointable(int paramInt) {
    return new Pointable(LeapJNI.Frame_pointable(swigCPtr, this, paramInt), true);
  }
  
  public FingerList fingers() {
    return new FingerList(LeapJNI.Frame_fingers(swigCPtr, this), true);
  }
  
  public Finger finger(int paramInt) {
    return new Finger(LeapJNI.Frame_finger(swigCPtr, this, paramInt), true);
  }
  
  public ToolList tools() {
    return new ToolList(LeapJNI.Frame_tools(swigCPtr, this), true);
  }
  
  public Tool tool(int paramInt) {
    return new Tool(LeapJNI.Frame_tool(swigCPtr, this, paramInt), true);
  }
  
  public Gesture gesture(int paramInt) {
    return new Gesture(LeapJNI.Frame_gesture(swigCPtr, this, paramInt), true);
  }
  
  public GestureList gestures() {
    return new GestureList(LeapJNI.Frame_gestures__SWIG_0(swigCPtr, this), true);
  }
  
  public GestureList gestures(Frame paramFrame) {
    return new GestureList(LeapJNI.Frame_gestures__SWIG_1(swigCPtr, this, getCPtr(paramFrame), paramFrame), true);
  }
  
  public ImageList images() {
    return new ImageList(LeapJNI.Frame_images(swigCPtr, this), true);
  }
  
  public Vector translation(Frame paramFrame) {
    return new Vector(LeapJNI.Frame_translation(swigCPtr, this, getCPtr(paramFrame), paramFrame), true);
  }
  
  public float translationProbability(Frame paramFrame) {
    return LeapJNI.Frame_translationProbability(swigCPtr, this, getCPtr(paramFrame), paramFrame);
  }
  
  public Vector rotationAxis(Frame paramFrame) {
    return new Vector(LeapJNI.Frame_rotationAxis(swigCPtr, this, getCPtr(paramFrame), paramFrame), true);
  }
  
  public float rotationAngle(Frame paramFrame) {
    return LeapJNI.Frame_rotationAngle__SWIG_0(swigCPtr, this, getCPtr(paramFrame), paramFrame);
  }
  
  public float rotationAngle(Frame paramFrame, Vector paramVector) {
    return LeapJNI.Frame_rotationAngle__SWIG_1(swigCPtr, this, getCPtr(paramFrame), paramFrame, Vector.getCPtr(paramVector), paramVector);
  }
  
  public Matrix rotationMatrix(Frame paramFrame) {
    return new Matrix(LeapJNI.Frame_rotationMatrix(swigCPtr, this, getCPtr(paramFrame), paramFrame), true);
  }
  
  public float rotationProbability(Frame paramFrame) {
    return LeapJNI.Frame_rotationProbability(swigCPtr, this, getCPtr(paramFrame), paramFrame);
  }
  
  public float scaleFactor(Frame paramFrame) {
    return LeapJNI.Frame_scaleFactor(swigCPtr, this, getCPtr(paramFrame), paramFrame);
  }
  
  public float scaleProbability(Frame paramFrame) {
    return LeapJNI.Frame_scaleProbability(swigCPtr, this, getCPtr(paramFrame), paramFrame);
  }
  
  public InteractionBox interactionBox() {
    return new InteractionBox(LeapJNI.Frame_interactionBox(swigCPtr, this), true);
  }
  
  public float currentFramesPerSecond() {
    return LeapJNI.Frame_currentFramesPerSecond(swigCPtr, this);
  }
  
  public boolean isValid() {
    return LeapJNI.Frame_isValid(swigCPtr, this);
  }
  
  public static Frame invalid() {
    return new Frame(LeapJNI.Frame_invalid(), false);
  }
  
  public boolean equals(Frame paramFrame) {
    return LeapJNI.Frame_equals(swigCPtr, this, getCPtr(paramFrame), paramFrame);
  }
  
  public TrackedQuad trackedQuad() {
    return new TrackedQuad(LeapJNI.Frame_trackedQuad(swigCPtr, this), true);
  }
  
  public void serialize(byte[] paramArrayOfByte) {
    LeapJNI.Frame_serialize(swigCPtr, this, paramArrayOfByte);
  }
  
  public int serializeLength() {
    return LeapJNI.Frame_serializeLength(swigCPtr, this);
  }
  
  public void deserialize(byte[] paramArrayOfByte, int paramInt) {
    LeapJNI.Frame_deserialize(swigCPtr, this, paramArrayOfByte, paramInt);
  }
  
  public String toString() {
    return LeapJNI.Frame_toString(swigCPtr, this);
  }
}
