package jogamp.opengl.egl;

import com.jogamp.common.ExceptionUtils;
import com.jogamp.nativewindow.AbstractGraphicsConfiguration;
import com.jogamp.nativewindow.AbstractGraphicsScreen;
import com.jogamp.nativewindow.ProxySurface;
import com.jogamp.nativewindow.UpstreamSurfaceHookMutableSize;
import com.jogamp.nativewindow.egl.EGLGraphicsDevice;
import com.jogamp.opengl.egl.EGL;
import java.io.PrintStream;
import jogamp.nativewindow.ProxySurfaceImpl;








public class EGLDummyUpstreamSurfaceHook
  extends UpstreamSurfaceHookMutableSize
{
  public EGLDummyUpstreamSurfaceHook(int paramInt1, int paramInt2)
  {
    super(paramInt1, paramInt2);
  }
  
  public final void create(ProxySurface paramProxySurface)
  {
    EGLGraphicsDevice localEGLGraphicsDevice = (EGLGraphicsDevice)paramProxySurface.getGraphicsConfiguration().getScreen().getDevice();
    localEGLGraphicsDevice.lock();
    try {
      if (0L == localEGLGraphicsDevice.getHandle()) {
        localEGLGraphicsDevice.open();
        paramProxySurface.addUpstreamOptionBits(128);
      }
      if (0L == paramProxySurface.getSurfaceHandle()) {
        paramProxySurface.setSurfaceHandle(EGLDrawableFactory.createPBufferSurfaceImpl((EGLGraphicsConfiguration)paramProxySurface.getGraphicsConfiguration(), 64, 64, false));
        paramProxySurface.addUpstreamOptionBits(64);
      }
      paramProxySurface.addUpstreamOptionBits(256);
      
      localEGLGraphicsDevice.unlock(); } finally { localEGLGraphicsDevice.unlock();
    }
  }
  
  public final void destroy(ProxySurface paramProxySurface)
  {
    if (paramProxySurface.containsUpstreamOptionBits(64)) {
      EGLGraphicsDevice localEGLGraphicsDevice = (EGLGraphicsDevice)paramProxySurface.getGraphicsConfiguration().getScreen().getDevice();
      if (0L == paramProxySurface.getSurfaceHandle()) {
        throw new InternalError("Owns upstream surface, but no EGL surface: " + paramProxySurface);
      }
      localEGLGraphicsDevice.lock();
      try {
        if (EGLDrawable.DEBUG) {
          System.err.println(EGLSurface.getThreadName() + ": EGLDummyUpstreamSurfaceHook: EGL.eglDestroySurface: 0x" + Long.toHexString(paramProxySurface.getSurfaceHandle()));
          ProxySurfaceImpl.dumpHierarchy(System.err, paramProxySurface);
          ExceptionUtils.dumpStack(System.err);
        }
        EGL.eglDestroySurface(localEGLGraphicsDevice.getHandle(), paramProxySurface.getSurfaceHandle());
        paramProxySurface.setSurfaceHandle(0L);
        paramProxySurface.clearUpstreamOptionBits(64);
        
        localEGLGraphicsDevice.unlock(); } finally { localEGLGraphicsDevice.unlock();
      }
    }
  }
}
