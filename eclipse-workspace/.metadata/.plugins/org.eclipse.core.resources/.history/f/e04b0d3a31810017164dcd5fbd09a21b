package jogamp.nativewindow.windows;

import com.jogamp.nativewindow.NativeWindowException;
import com.jogamp.nativewindow.ProxySurface;
import com.jogamp.nativewindow.UpstreamSurfaceHookMutableSize;









public class GDIDummyUpstreamSurfaceHook
  extends UpstreamSurfaceHookMutableSize
{
  public GDIDummyUpstreamSurfaceHook(int paramInt1, int paramInt2)
  {
    super(paramInt1, paramInt2);
  }
  
  public final void create(ProxySurface paramProxySurface)
  {
    GDISurface localGDISurface = (GDISurface)paramProxySurface;
    if (0L == localGDISurface.getWindowHandle()) {
      long l = GDIUtil.CreateDummyWindow(0, 0, 64, 64);
      if (0L == l) {
        throw new NativeWindowException("Error windowHandle 0, werr: " + GDI.GetLastError());
      }
      localGDISurface.setWindowHandle(l);
      localGDISurface.addUpstreamOptionBits(64);
    }
    paramProxySurface.addUpstreamOptionBits(256);
  }
  
  public final void destroy(ProxySurface paramProxySurface)
  {
    GDISurface localGDISurface = (GDISurface)paramProxySurface;
    if (localGDISurface.containsUpstreamOptionBits(64)) {
      if (0L == localGDISurface.getWindowHandle()) {
        throw new InternalError("Owns upstream surface, but no GDI window: " + localGDISurface);
      }
      GDI.ShowWindow(localGDISurface.getWindowHandle(), 0);
      GDIUtil.DestroyDummyWindow(localGDISurface.getWindowHandle());
      localGDISurface.setWindowHandle(0L);
      localGDISurface.clearUpstreamOptionBits(64);
    }
  }
}
