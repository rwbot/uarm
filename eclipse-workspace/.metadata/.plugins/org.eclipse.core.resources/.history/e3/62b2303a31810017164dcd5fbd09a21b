package jogamp.opengl.util.pngj.chunks;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import jogamp.opengl.util.pngj.ImageInfo;
import jogamp.opengl.util.pngj.PngHelperInternal;
import jogamp.opengl.util.pngj.PngjException;





public class PngChunkZTXT
  extends PngChunkTextVar
{
  public static final String ID = "zTXt";
  
  public PngChunkZTXT(ImageInfo paramImageInfo)
  {
    super("zTXt", paramImageInfo);
  }
  
  public ChunkRaw createRawChunk()
  {
    if (key.isEmpty())
      throw new PngjException("Text chunk key must be non empty");
    try {
      ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
      localByteArrayOutputStream.write(key.getBytes(PngHelperInternal.charsetLatin1));
      localByteArrayOutputStream.write(0);
      localByteArrayOutputStream.write(0);
      byte[] arrayOfByte1 = ChunkHelper.compressBytes(val.getBytes(PngHelperInternal.charsetLatin1), true);
      localByteArrayOutputStream.write(arrayOfByte1);
      byte[] arrayOfByte2 = localByteArrayOutputStream.toByteArray();
      ChunkRaw localChunkRaw = createEmptyChunk(arrayOfByte2.length, false);
      data = arrayOfByte2;
      return localChunkRaw;
    } catch (IOException localIOException) {
      throw new PngjException(localIOException);
    }
  }
  
  public void parseFromRaw(ChunkRaw paramChunkRaw)
  {
    int i = -1;
    for (int j = 0; j < data.length; j++)
      if (data[j] == 0)
      {
        i = j;
        break;
      }
    if ((i < 0) || (i > data.length - 2))
      throw new PngjException("bad zTXt chunk: no separator found");
    key = new String(data, 0, i, PngHelperInternal.charsetLatin1);
    j = data[(i + 1)];
    if (j != 0)
      throw new PngjException("bad zTXt chunk: unknown compression method");
    byte[] arrayOfByte = ChunkHelper.compressBytes(data, i + 2, data.length - i - 2, false);
    val = new String(arrayOfByte, PngHelperInternal.charsetLatin1);
  }
  
  public void cloneDataFromRead(PngChunk paramPngChunk)
  {
    PngChunkZTXT localPngChunkZTXT = (PngChunkZTXT)paramPngChunk;
    key = key;
    val = val;
  }
}
