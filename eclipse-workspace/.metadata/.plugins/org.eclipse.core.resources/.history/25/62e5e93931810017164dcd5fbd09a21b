package com.jogamp.opengl;

import com.jogamp.common.nio.PointerBuffer;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import jogamp.opengl.Debug;













public class DebugGLES3
  implements GLES2, GL4ES3, GLES3
{
  public static final boolean DEBUG = Debug.debug("DebugGLES3");
  private GLContext _context;
  
  public DebugGLES3(GLES3 paramGLES3) { if (paramGLES3 == null) {
      throw new IllegalArgumentException("null downstreamGLES3");
    }
    downstreamGLES3 = paramGLES3;
    
    _context = paramGLES3.getContext();
  }
  
  public final GL getDownstreamGL() throws GLException
  {
    return downstreamGLES3;
  }
  
  public int getBoundBuffer(int paramInt)
  {
    return downstreamGLES3.getBoundBuffer(paramInt);
  }
  
  public int getBoundFramebuffer(int paramInt)
  {
    return downstreamGLES3.getBoundFramebuffer(paramInt);
  }
  
  public GLBufferStorage getBufferStorage(int paramInt)
  {
    return downstreamGLES3.getBufferStorage(paramInt);
  }
  
  public GLContext getContext()
  {
    return downstreamGLES3.getContext();
  }
  
  public int getDefaultDrawFramebuffer()
  {
    return downstreamGLES3.getDefaultDrawFramebuffer();
  }
  
  public int getDefaultReadBuffer()
  {
    return downstreamGLES3.getDefaultReadBuffer();
  }
  
  public int getDefaultReadFramebuffer()
  {
    return downstreamGLES3.getDefaultReadFramebuffer();
  }
  
  public Object getExtension(String paramString)
  {
    return downstreamGLES3.getExtension(paramString);
  }
  
  public GL getGL()
  {
    return this;
  }
  
  public GL2 getGL2()
  {
    throw new GLException("Not a GL2 implementation");
  }
  
  public GL2ES1 getGL2ES1()
  {
    throw new GLException("Not a GL2ES1 implementation");
  }
  
  public GL2ES2 getGL2ES2()
  {
    if (isGL2ES2()) return this;
    throw new GLException("Not a GL2ES2 implementation");
  }
  
  public GL2ES3 getGL2ES3()
  {
    if (isGL2ES3()) return this;
    throw new GLException("Not a GL2ES3 implementation");
  }
  
  public GL2GL3 getGL2GL3()
  {
    throw new GLException("Not a GL2GL3 implementation");
  }
  
  public GL3 getGL3()
  {
    throw new GLException("Not a GL3 implementation");
  }
  
  public GL3ES3 getGL3ES3()
  {
    if (isGL3ES3()) return this;
    throw new GLException("Not a GL3ES3 implementation");
  }
  
  public GL3bc getGL3bc()
  {
    throw new GLException("Not a GL3bc implementation");
  }
  
  public GL4 getGL4()
  {
    throw new GLException("Not a GL4 implementation");
  }
  
  public GL4ES3 getGL4ES3()
  {
    if (isGL4ES3()) return this;
    throw new GLException("Not a GL4ES3 implementation");
  }
  
  public GL4bc getGL4bc()
  {
    throw new GLException("Not a GL4bc implementation");
  }
  
  public GLES1 getGLES1()
  {
    throw new GLException("Not a GLES1 implementation");
  }
  
  public GLES2 getGLES2()
  {
    if (isGLES2()) return this;
    throw new GLException("Not a GLES2 implementation");
  }
  
  public GLES3 getGLES3()
  {
    if (isGLES3()) return this;
    throw new GLException("Not a GLES3 implementation");
  }
  
  public GLProfile getGLProfile()
  {
    return downstreamGLES3.getGLProfile();
  }
  
  public int getMaxRenderbufferSamples()
  {
    return downstreamGLES3.getMaxRenderbufferSamples();
  }
  
  public Object getPlatformGLExtensions()
  {
    return downstreamGLES3.getPlatformGLExtensions();
  }
  
  public GL getRootGL()
  {
    return downstreamGLES3.getRootGL();
  }
  
  public int getSwapInterval()
  {
    return downstreamGLES3.getSwapInterval();
  }
  
  public void glActiveShaderProgram(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glActiveShaderProgram(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glActiveShaderProgram", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glActiveTexture(int paramInt)
  {
    checkContext();
    downstreamGLES3.glActiveTexture(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glActiveTexture", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glAlphaFuncQCOM(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES3.glAlphaFuncQCOM(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glAlphaFuncQCOM", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glApplyFramebufferAttachmentCMAAINTEL()
  {
    checkContext();
    downstreamGLES3.glApplyFramebufferAttachmentCMAAINTEL();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glApplyFramebufferAttachmentCMAAINTEL" });
    }
  }
  
  private GLES3 downstreamGLES3;
  public void glAttachShader(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glAttachShader(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glAttachShader", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBeginConditionalRender(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBeginConditionalRender(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBeginConditionalRender", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBeginQuery(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBeginQuery(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBeginQuery", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBeginTransformFeedback(int paramInt)
  {
    checkContext();
    downstreamGLES3.glBeginTransformFeedback(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBeginTransformFeedback", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBindAttribLocation(int paramInt1, int paramInt2, String paramString)
  {
    checkContext();
    downstreamGLES3.glBindAttribLocation(paramInt1, paramInt2, paramString);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.lang.String> %s)", new Object[] { "glBindAttribLocation", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramString });
    }
  }
  
  public void glBindBuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBindBuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindBufferBase(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBindBufferBase(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBindBufferBase", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBindBufferRange(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    checkContext();
    downstreamGLES3.glBindBufferRange(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <long> %s)", new Object[] { "glBindBufferRange", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
  }
  
  public void glBindFragDataLocationEXT(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBindFragDataLocationEXT(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glBindFragDataLocationEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBindFragDataLocationEXT(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glBindFragDataLocationEXT(paramInt1, paramInt2, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glBindFragDataLocationEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer });
    }
  }
  
  public void glBindFragDataLocationIndexedEXT(int paramInt1, int paramInt2, int paramInt3, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glBindFragDataLocationIndexedEXT(paramInt1, paramInt2, paramInt3, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glBindFragDataLocationIndexedEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramByteBuffer });
    }
  }
  
  public void glBindFragDataLocationIndexedEXT(int paramInt1, int paramInt2, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glBindFragDataLocationIndexedEXT(paramInt1, paramInt2, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glBindFragDataLocationIndexedEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glBindFramebuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBindFramebuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindImageTexture(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glBindImageTexture(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBindImageTexture", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glBindProgramPipeline(int paramInt)
  {
    checkContext();
    downstreamGLES3.glBindProgramPipeline(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBindProgramPipeline", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBindRenderbuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBindRenderbuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindRenderbuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindSampler(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBindSampler(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindSampler", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindTexture(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBindTexture(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindTexture", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindTransformFeedback(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBindTransformFeedback(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBindTransformFeedback", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBindVertexArray(int paramInt)
  {
    checkContext();
    downstreamGLES3.glBindVertexArray(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBindVertexArray", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBindVertexArrayOES(int paramInt)
  {
    checkContext();
    downstreamGLES3.glBindVertexArrayOES(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBindVertexArrayOES", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBindVertexBuffer(int paramInt1, int paramInt2, long paramLong, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBindVertexBuffer(paramInt1, paramInt2, paramLong, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X)", new Object[] { "glBindVertexBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Long.valueOf(paramLong), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlendBarrier()
  {
    checkContext();
    downstreamGLES3.glBlendBarrier();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glBlendBarrier" });
    }
  }
  

  public void glBlendColor(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES3.glBlendColor(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glBlendColor", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glBlendEquation(int paramInt)
  {
    checkContext();
    downstreamGLES3.glBlendEquation(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glBlendEquation", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glBlendEquationSeparate(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBlendEquationSeparate(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendEquationSeparatei(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBlendEquationSeparatei(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationSeparatei", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlendEquationSeparateiEXT(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBlendEquationSeparateiEXT(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationSeparateiEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlendEquationSeparateiOES(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBlendEquationSeparateiOES(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationSeparateiOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlendEquationi(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBlendEquationi(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationi", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendEquationiEXT(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBlendEquationiEXT(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationiEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendEquationiOES(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBlendEquationiOES(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendEquationiOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendFunc(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBlendFunc(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFunc", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBlendFuncSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glBlendFuncSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFuncSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glBlendFuncSeparatei(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glBlendFuncSeparatei(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFuncSeparatei", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glBlendFuncSeparateiEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glBlendFuncSeparateiEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFuncSeparateiEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glBlendFuncSeparateiOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glBlendFuncSeparateiOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFuncSeparateiOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glBlendFunci(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBlendFunci(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFunci", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlendFunciEXT(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBlendFunciEXT(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFunciEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlendFunciOES(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glBlendFunciOES(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlendFunciOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glBlitFramebuffer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10)
  {
    checkContext();
    downstreamGLES3.glBlitFramebuffer(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlitFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10) });
    }
  }
  
  public void glBlitFramebufferANGLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10)
  {
    checkContext();
    downstreamGLES3.glBlitFramebufferANGLE(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlitFramebufferANGLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10) });
    }
  }
  
  public void glBlitFramebufferNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10)
  {
    checkContext();
    downstreamGLES3.glBlitFramebufferNV(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glBlitFramebufferNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10) });
    }
  }
  
  public void glBufferData(int paramInt1, long paramLong, Buffer paramBuffer, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBufferData(paramInt1, paramLong, paramBuffer, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glBufferData", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong), paramBuffer, Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBufferStorageEXT(int paramInt1, long paramLong, Buffer paramBuffer, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glBufferStorageEXT(paramInt1, paramLong, paramBuffer, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glBufferStorageEXT", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong), paramBuffer, Integer.valueOf(paramInt2) });
    }
  }
  
  public void glBufferSubData(int paramInt, long paramLong1, long paramLong2, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glBufferSubData(paramInt, paramLong1, paramLong2, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s, <java.nio.Buffer> %s)", new Object[] { "glBufferSubData", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong1), Long.valueOf(paramLong2), paramBuffer });
    }
  }
  
  public int glCheckFramebufferStatus(int paramInt)
  {
    checkContext();
    int i = downstreamGLES3.glCheckFramebufferStatus(paramInt);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X)", new Object[] { "glCheckFramebufferStatus", 
        Integer.valueOf(paramInt) });
    }
    return i;
  }
  
  public void glClear(int paramInt)
  {
    checkContext();
    downstreamGLES3.glClear(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glClear", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glClearBufferfi(int paramInt1, int paramInt2, float paramFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glClearBufferfi(paramInt1, paramInt2, paramFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s, <int> 0x%X)", new Object[] { "glClearBufferfi", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glClearBufferfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glClearBufferfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glClearBufferfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glClearBufferfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glClearBufferfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glClearBufferfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glClearBufferiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glClearBufferiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glClearBufferiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glClearBufferiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glClearBufferiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glClearBufferiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glClearBufferuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glClearBufferuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glClearBufferuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glClearBufferuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glClearBufferuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glClearBufferuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glClearColor(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES3.glClearColor(paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glClearColor", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glClearDepth(double paramDouble)
  {
    checkContext();
    downstreamGLES3.glClearDepth(paramDouble);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<double> %s)", new Object[] { "glClearDepth", 
        Double.valueOf(paramDouble) });
    }
  }
  
  public void glClearDepthf(float paramFloat)
  {
    checkContext();
    downstreamGLES3.glClearDepthf(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glClearDepthf", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glClearStencil(int paramInt)
  {
    checkContext();
    downstreamGLES3.glClearStencil(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glClearStencil", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public int glClientWaitSync(long paramLong1, int paramInt, long paramLong2)
  {
    checkContext();
    int i = downstreamGLES3.glClientWaitSync(paramLong1, paramInt, paramLong2);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<long> %s, <int> 0x%X, <long> %s)", new Object[] { "glClientWaitSync", 
        Long.valueOf(paramLong1), Integer.valueOf(paramInt), Long.valueOf(paramLong2) });
    }
    return i;
  }
  
  public void glColorMask(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    checkContext();
    downstreamGLES3.glColorMask(paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<boolean> %s, <boolean> %s, <boolean> %s, <boolean> %s)", new Object[] { "glColorMask", 
        Boolean.valueOf(paramBoolean1), Boolean.valueOf(paramBoolean2), Boolean.valueOf(paramBoolean3), Boolean.valueOf(paramBoolean4) });
    }
  }
  
  public void glColorMaski(int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    checkContext();
    downstreamGLES3.glColorMaski(paramInt, paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <boolean> %s, <boolean> %s, <boolean> %s, <boolean> %s)", new Object[] { "glColorMaski", 
        Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean1), Boolean.valueOf(paramBoolean2), Boolean.valueOf(paramBoolean3), Boolean.valueOf(paramBoolean4) });
    }
  }
  
  public void glColorMaskiEXT(int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    checkContext();
    downstreamGLES3.glColorMaskiEXT(paramInt, paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <boolean> %s, <boolean> %s, <boolean> %s, <boolean> %s)", new Object[] { "glColorMaskiEXT", 
        Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean1), Boolean.valueOf(paramBoolean2), Boolean.valueOf(paramBoolean3), Boolean.valueOf(paramBoolean4) });
    }
  }
  
  public void glColorMaskiOES(int paramInt, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3, boolean paramBoolean4)
  {
    checkContext();
    downstreamGLES3.glColorMaskiOES(paramInt, paramBoolean1, paramBoolean2, paramBoolean3, paramBoolean4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <boolean> %s, <boolean> %s, <boolean> %s, <boolean> %s)", new Object[] { "glColorMaskiOES", 
        Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean1), Boolean.valueOf(paramBoolean2), Boolean.valueOf(paramBoolean3), Boolean.valueOf(paramBoolean4) });
    }
  }
  
  public void glCompileShader(int paramInt)
  {
    checkContext();
    downstreamGLES3.glCompileShader(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glCompileShader", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, long paramLong)
  {
    checkContext();
    downstreamGLES3.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glCompressedTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glCompressedTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glCompressedTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), paramBuffer });
    }
  }
  
  public void glCompressedTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES3.glCompressedTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glCompressedTexImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glCompressedTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glCompressedTexImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES3.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glCompressedTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glCompressedTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glCompressedTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glCompressedTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, long paramLong)
  {
    checkContext();
    downstreamGLES3.glCompressedTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glCompressedTexSubImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), Long.valueOf(paramLong) });
    }
  }
  
  public void glCompressedTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glCompressedTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glCompressedTexSubImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), paramBuffer });
    }
  }
  
  public void glCopyBufferSubData(int paramInt1, int paramInt2, long paramLong1, long paramLong2, long paramLong3)
  {
    checkContext();
    downstreamGLES3.glCopyBufferSubData(paramInt1, paramInt2, paramLong1, paramLong2, paramLong3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <long> %s, <long> %s, <long> %s)", new Object[] { "glCopyBufferSubData", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Long.valueOf(paramLong1), Long.valueOf(paramLong2), Long.valueOf(paramLong3) });
    }
  }
  
  public void glCopyBufferSubDataNV(int paramInt1, int paramInt2, long paramLong1, long paramLong2, long paramLong3)
  {
    checkContext();
    downstreamGLES3.glCopyBufferSubDataNV(paramInt1, paramInt2, paramLong1, paramLong2, paramLong3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <long> %s, <long> %s, <long> %s)", new Object[] { "glCopyBufferSubDataNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Long.valueOf(paramLong1), Long.valueOf(paramLong2), Long.valueOf(paramLong3) });
    }
  }
  
  public void glCopyImageSubData(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, int paramInt11, int paramInt12, int paramInt13, int paramInt14, int paramInt15)
  {
    checkContext();
    downstreamGLES3.glCopyImageSubData(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramInt11, paramInt12, paramInt13, paramInt14, paramInt15);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyImageSubData", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), Integer.valueOf(paramInt11), Integer.valueOf(paramInt12), Integer.valueOf(paramInt13), Integer.valueOf(paramInt14), Integer.valueOf(paramInt15) });
    }
  }
  
  public void glCopyTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    checkContext();
    downstreamGLES3.glCopyTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
  }
  
  public void glCopyTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    checkContext();
    downstreamGLES3.glCopyTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
  }
  
  public void glCopyTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9)
  {
    checkContext();
    downstreamGLES3.glCopyTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTexSubImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9) });
    }
  }
  
  public void glCopyTextureLevelsAPPLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glCopyTextureLevelsAPPLE(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glCopyTextureLevelsAPPLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glCoverageMaskNV(boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glCoverageMaskNV(paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<boolean> %s)", new Object[] { "glCoverageMaskNV", 
        Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glCoverageModulationNV(int paramInt)
  {
    checkContext();
    downstreamGLES3.glCoverageModulationNV(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glCoverageModulationNV", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glCoverageModulationTableNV(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glCoverageModulationTableNV(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glCoverageModulationTableNV", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glCoverageModulationTableNV(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glCoverageModulationTableNV(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glCoverageModulationTableNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glCoverageOperationNV(int paramInt)
  {
    checkContext();
    downstreamGLES3.glCoverageOperationNV(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glCoverageOperationNV", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public int glCreateProgram()
  {
    checkContext();
    int i = downstreamGLES3.glCreateProgram();
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s()", new Object[] { "glCreateProgram" });
    }
    
    return i;
  }
  
  public int glCreateShader(int paramInt)
  {
    checkContext();
    int i = downstreamGLES3.glCreateShader(paramInt);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X)", new Object[] { "glCreateShader", 
        Integer.valueOf(paramInt) });
    }
    return i;
  }
  
  public int glCreateShaderProgramv(int paramInt1, int paramInt2, String[] paramArrayOfString)
  {
    checkContext();
    int i = downstreamGLES3.glCreateShaderProgramv(paramInt1, paramInt2, paramArrayOfString);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <[Ljava.lang.String;>)", new Object[] { "glCreateShaderProgramv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return i;
  }
  
  public void glCullFace(int paramInt)
  {
    checkContext();
    downstreamGLES3.glCullFace(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glCullFace", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDebugMessageControl(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glDebugMessageControl(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <boolean> %s)", new Object[] { "glDebugMessageControl", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glDebugMessageControl(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glDebugMessageControl(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <boolean> %s)", new Object[] { "glDebugMessageControl", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramIntBuffer, Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glDebugMessageInsert(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, String paramString)
  {
    checkContext();
    downstreamGLES3.glDebugMessageInsert(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramString);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.lang.String> %s)", new Object[] { "glDebugMessageInsert", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), paramString });
    }
  }
  
  public void glDeleteBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteBuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteBuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteBuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteBuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteFramebuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteFramebuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteFramebuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteProgram(int paramInt)
  {
    checkContext();
    downstreamGLES3.glDeleteProgram(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDeleteProgram", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDeleteProgramPipelines(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteProgramPipelines(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteProgramPipelines", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteProgramPipelines(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteProgramPipelines(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteProgramPipelines", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteQueries(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteQueries(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteQueries", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteQueries(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteQueries(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteQueries", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteRenderbuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteRenderbuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteRenderbuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteSamplers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteSamplers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteSamplers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteSamplers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteSamplers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteSamplers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteShader(int paramInt)
  {
    checkContext();
    downstreamGLES3.glDeleteShader(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDeleteShader", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDeleteSync(long paramLong)
  {
    checkContext();
    downstreamGLES3.glDeleteSync(paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<long> %s)", new Object[] { "glDeleteSync", 
        Long.valueOf(paramLong) });
    }
  }
  
  public void glDeleteTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteTextures(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteTextures", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteTextures(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteTextures", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteTransformFeedbacks(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteTransformFeedbacks(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteTransformFeedbacks", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteTransformFeedbacks(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteTransformFeedbacks(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteTransformFeedbacks", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteVertexArrays(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteVertexArrays(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteVertexArrays", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDeleteVertexArrays(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteVertexArrays(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteVertexArrays", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDeleteVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDeleteVertexArraysOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDeleteVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDeleteVertexArraysOES(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDeleteVertexArraysOES", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDepthFunc(int paramInt)
  {
    checkContext();
    downstreamGLES3.glDepthFunc(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDepthFunc", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDepthMask(boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glDepthMask(paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<boolean> %s)", new Object[] { "glDepthMask", 
        Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glDepthRange(double paramDouble1, double paramDouble2)
  {
    checkContext();
    downstreamGLES3.glDepthRange(paramDouble1, paramDouble2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<double> %s, <double> %s)", new Object[] { "glDepthRange", 
        Double.valueOf(paramDouble1), Double.valueOf(paramDouble2) });
    }
  }
  
  public void glDepthRangeArrayfvNV(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glDepthRangeArrayfvNV(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glDepthRangeArrayfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glDepthRangeArrayfvNV(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glDepthRangeArrayfvNV(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glDepthRangeArrayfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDepthRangeIndexedfNV(int paramInt, float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES3.glDepthRangeIndexedfNV(paramInt, paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s)", new Object[] { "glDepthRangeIndexedfNV", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glDepthRangef(float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES3.glDepthRangef(paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s)", new Object[] { "glDepthRangef", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glDetachShader(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDetachShader(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glDetachShader", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDisable(int paramInt)
  {
    checkContext();
    downstreamGLES3.glDisable(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDisable", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDisableDriverControlQCOM(int paramInt)
  {
    checkContext();
    downstreamGLES3.glDisableDriverControlQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDisableDriverControlQCOM", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDisableVertexAttribArray(int paramInt)
  {
    checkContext();
    downstreamGLES3.glDisableVertexAttribArray(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glDisableVertexAttribArray", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glDisablei(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDisablei(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glDisablei", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDisableiEXT(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDisableiEXT(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glDisableiEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDisableiNV(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDisableiNV(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glDisableiNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDisableiOES(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDisableiOES(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glDisableiOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glDiscardFramebufferEXT(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDiscardFramebufferEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDiscardFramebufferEXT(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDiscardFramebufferEXT(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDiscardFramebufferEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glDispatchCompute(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glDispatchCompute(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDispatchCompute", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDispatchComputeIndirect(long paramLong)
  {
    checkContext();
    downstreamGLES3.glDispatchComputeIndirect(paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<long> %s)", new Object[] { "glDispatchComputeIndirect", 
        Long.valueOf(paramLong) });
    }
  }
  
  public void glDrawArrays(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glDrawArrays(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawArrays", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDrawArraysIndirect(int paramInt, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glDrawArraysIndirect(paramInt, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glDrawArraysIndirect", 
        Integer.valueOf(paramInt), paramBuffer });
    }
  }
  
  public void glDrawArraysIndirect(int paramInt, long paramLong)
  {
    checkContext();
    downstreamGLES3.glDrawArraysIndirect(paramInt, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s)", new Object[] { "glDrawArraysIndirect", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong) });
    }
  }
  
  public void glDrawArraysInstanced(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawArraysInstanced(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawArraysInstanced", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawArraysInstancedANGLE(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawArraysInstancedANGLE(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawArraysInstancedANGLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawArraysInstancedBaseInstance(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glDrawArraysInstancedBaseInstance(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawArraysInstancedBaseInstance", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawArraysInstancedNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawArraysInstancedNV(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawArraysInstancedNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glDrawBuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDrawBuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glDrawBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glDrawBuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glDrawBuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glDrawBuffersIndexedEXT(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glDrawBuffersIndexedEXT(paramInt1, paramArrayOfInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glDrawBuffersIndexedEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glDrawBuffersIndexedEXT(int paramInt, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glDrawBuffersIndexedEXT(paramInt, paramIntBuffer1, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glDrawBuffersIndexedEXT", 
        Integer.valueOf(paramInt), paramIntBuffer1, paramIntBuffer2 });
    }
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glDrawElements(paramInt1, paramInt2, paramInt3, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glDrawElements", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer });
    }
  }
  
  public void glDrawElements(int paramInt1, int paramInt2, int paramInt3, long paramLong)
  {
    checkContext();
    downstreamGLES3.glDrawElements(paramInt1, paramInt2, paramInt3, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glDrawElements", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong) });
    }
  }
  
  public void glDrawElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawElementsBaseVertex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramLong, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X)", new Object[] { "glDrawElementsBaseVertex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsBaseVertexEXT(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsBaseVertexEXT(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawElementsBaseVertexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsBaseVertexOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsBaseVertexOES(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawElementsBaseVertexOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsIndirect(int paramInt1, int paramInt2, long paramLong)
  {
    checkContext();
    downstreamGLES3.glDrawElementsIndirect(paramInt1, paramInt2, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glDrawElementsIndirect", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Long.valueOf(paramLong) });
    }
  }
  
  public void glDrawElementsIndirect(int paramInt1, int paramInt2, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glDrawElementsIndirect(paramInt1, paramInt2, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glDrawElementsIndirect", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramBuffer });
    }
  }
  
  public void glDrawElementsInstanced(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstanced(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawElementsInstanced", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsInstanced(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstanced(paramInt1, paramInt2, paramInt3, paramLong, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X)", new Object[] { "glDrawElementsInstanced", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsInstancedANGLE(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedANGLE(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawElementsInstancedANGLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawElementsInstancedBaseInstance(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedBaseInstance(paramInt1, paramInt2, paramInt3, paramLong, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawElementsInstancedBaseInstance", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawElementsInstancedBaseVertex(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedBaseVertex(paramInt1, paramInt2, paramInt3, paramLong, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawElementsInstancedBaseVertex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawElementsInstancedBaseVertex(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedBaseVertex(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawElementsInstancedBaseVertex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawElementsInstancedBaseVertexBaseInstance(int paramInt1, int paramInt2, int paramInt3, long paramLong, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedBaseVertexBaseInstance(paramInt1, paramInt2, paramInt3, paramLong, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawElementsInstancedBaseVertexBaseInstance", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glDrawElementsInstancedBaseVertexEXT(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedBaseVertexEXT(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawElementsInstancedBaseVertexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawElementsInstancedBaseVertexOES(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedBaseVertexOES(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glDrawElementsInstancedBaseVertexOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glDrawElementsInstancedNV(int paramInt1, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glDrawElementsInstancedNV(paramInt1, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawElementsInstancedNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glDrawRangeElements(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glDrawRangeElements(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glDrawRangeElements", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), paramBuffer });
    }
  }
  
  public void glDrawRangeElements(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, long paramLong)
  {
    checkContext();
    downstreamGLES3.glDrawRangeElements(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glDrawRangeElements", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Long.valueOf(paramLong) });
    }
  }
  
  public void glDrawRangeElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glDrawRangeElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawRangeElementsBaseVertex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), paramBuffer, Integer.valueOf(paramInt6) });
    }
  }
  
  public void glDrawRangeElementsBaseVertex(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, long paramLong, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glDrawRangeElementsBaseVertex(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramLong, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <int> 0x%X)", new Object[] { "glDrawRangeElementsBaseVertex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Long.valueOf(paramLong), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glDrawRangeElementsBaseVertexEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glDrawRangeElementsBaseVertexEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawRangeElementsBaseVertexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), paramBuffer, Integer.valueOf(paramInt6) });
    }
  }
  
  public void glDrawRangeElementsBaseVertexOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, Buffer paramBuffer, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glDrawRangeElementsBaseVertexOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBuffer, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glDrawRangeElementsBaseVertexOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), paramBuffer, Integer.valueOf(paramInt6) });
    }
  }
  
  public void glEGLImageTargetRenderbufferStorageOES(int paramInt, long paramLong)
  {
    checkContext();
    downstreamGLES3.glEGLImageTargetRenderbufferStorageOES(paramInt, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s)", new Object[] { "glEGLImageTargetRenderbufferStorageOES", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong) });
    }
  }
  
  public void glEGLImageTargetTexture2DOES(int paramInt, long paramLong)
  {
    checkContext();
    downstreamGLES3.glEGLImageTargetTexture2DOES(paramInt, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s)", new Object[] { "glEGLImageTargetTexture2DOES", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong) });
    }
  }
  
  public void glEnable(int paramInt)
  {
    checkContext();
    downstreamGLES3.glEnable(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEnable", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEnableDriverControlQCOM(int paramInt)
  {
    checkContext();
    downstreamGLES3.glEnableDriverControlQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEnableDriverControlQCOM", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEnableVertexAttribArray(int paramInt)
  {
    checkContext();
    downstreamGLES3.glEnableVertexAttribArray(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEnableVertexAttribArray", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEnablei(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glEnablei(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glEnablei", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glEnableiEXT(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glEnableiEXT(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glEnableiEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glEnableiNV(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glEnableiNV(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glEnableiNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glEnableiOES(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glEnableiOES(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glEnableiOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glEndConditionalRender()
  {
    checkContext();
    downstreamGLES3.glEndConditionalRender();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glEndConditionalRender" });
    }
  }
  

  public void glEndQuery(int paramInt)
  {
    checkContext();
    downstreamGLES3.glEndQuery(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEndQuery", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEndTilingQCOM(int paramInt)
  {
    checkContext();
    downstreamGLES3.glEndTilingQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glEndTilingQCOM", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glEndTransformFeedback()
  {
    checkContext();
    downstreamGLES3.glEndTransformFeedback();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glEndTransformFeedback" });
    }
  }
  

  public void glExtGetBufferPointervQCOM(int paramInt, PointerBuffer paramPointerBuffer)
  {
    checkContext();
    downstreamGLES3.glExtGetBufferPointervQCOM(paramInt, paramPointerBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <com.jogamp.common.nio.PointerBuffer> %s)", new Object[] { "glExtGetBufferPointervQCOM", 
        Integer.valueOf(paramInt), paramPointerBuffer });
    }
  }
  
  public void glExtGetBuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtGetBuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetBuffersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetBuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glExtGetBuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetBuffersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetFramebuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glExtGetFramebuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetFramebuffersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetFramebuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtGetFramebuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetFramebuffersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramArrayOfByte, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetProgramBinarySourceQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glExtGetProgramBinarySourceQCOM(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glExtGetProgramBinarySourceQCOM(paramInt1, paramInt2, paramByteBuffer, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetProgramBinarySourceQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer, paramIntBuffer });
    }
  }
  
  public void glExtGetProgramsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glExtGetProgramsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetProgramsQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetProgramsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtGetProgramsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetProgramsQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetRenderbuffersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glExtGetRenderbuffersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetRenderbuffersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetRenderbuffersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtGetRenderbuffersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetRenderbuffersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetShadersQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glExtGetShadersQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetShadersQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public void glExtGetShadersQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtGetShadersQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetShadersQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetTexLevelParameterivQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glExtGetTexLevelParameterivQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glExtGetTexLevelParameterivQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetTexLevelParameterivQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramIntBuffer });
    }
  }
  
  public void glExtGetTexSubImageQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glExtGetTexSubImageQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glExtGetTexSubImageQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), paramBuffer });
    }
  }
  
  public void glExtGetTexturesQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtGetTexturesQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glExtGetTexturesQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glExtGetTexturesQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glExtGetTexturesQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glExtGetTexturesQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public boolean glExtIsProgramBinaryQCOM(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glExtIsProgramBinaryQCOM(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glExtIsProgramBinaryQCOM", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public void glExtTexObjectStateOverrideiQCOM(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glExtTexObjectStateOverrideiQCOM(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glExtTexObjectStateOverrideiQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public long glFenceSync(int paramInt1, int paramInt2)
  {
    checkContext();
    long l = downstreamGLES3.glFenceSync(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glFenceSync", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return l;
  }
  
  public void glFinish()
  {
    checkContext();
    downstreamGLES3.glFinish();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glFinish" });
    }
  }
  

  public void glFlush()
  {
    checkContext();
    downstreamGLES3.glFlush();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glFlush" });
    }
  }
  

  public void glFlushMappedBufferRange(int paramInt, long paramLong1, long paramLong2)
  {
    checkContext();
    downstreamGLES3.glFlushMappedBufferRange(paramInt, paramLong1, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s)", new Object[] { "glFlushMappedBufferRange", 
        Integer.valueOf(paramInt), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
  }
  
  public void glFragmentCoverageColorNV(int paramInt)
  {
    checkContext();
    downstreamGLES3.glFragmentCoverageColorNV(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glFragmentCoverageColorNV", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glFramebufferParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glFramebufferParameteri(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferParameteri", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glFramebufferRenderbuffer(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glFramebufferRenderbuffer(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferRenderbuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glFramebufferSampleLocationsfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glFramebufferSampleLocationsfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glFramebufferTexture(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glFramebufferTexture(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glFramebufferTexture2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glFramebufferTexture2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glFramebufferTexture2DMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glFramebufferTexture2DMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture2DMultisampleEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glFramebufferTexture2DMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glFramebufferTexture2DMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture2DMultisampleIMG", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glFramebufferTexture3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glFramebufferTexture3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTexture3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glFramebufferTextureEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glFramebufferTextureEXT(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTextureEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glFramebufferTextureLayer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glFramebufferTextureLayer(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTextureLayer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glFramebufferTextureMultiviewOVR(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glFramebufferTextureMultiviewOVR(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTextureMultiviewOVR", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glFramebufferTextureOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glFramebufferTextureOES(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glFramebufferTextureOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glFrontFace(int paramInt)
  {
    checkContext();
    downstreamGLES3.glFrontFace(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glFrontFace", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glGenBuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenBuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenBuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenBuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenBuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenBuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenFramebuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenFramebuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenFramebuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenFramebuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenFramebuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenFramebuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenProgramPipelines(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenProgramPipelines(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenProgramPipelines", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenProgramPipelines(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenProgramPipelines(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenProgramPipelines", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenQueries(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenQueries(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenQueries", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenQueries(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenQueries(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenQueries", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenRenderbuffers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenRenderbuffers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenRenderbuffers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenRenderbuffers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenRenderbuffers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenRenderbuffers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenSamplers(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenSamplers(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenSamplers", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenSamplers(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenSamplers(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenSamplers", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenTextures(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenTextures(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenTextures", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenTextures(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenTextures(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenTextures", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenTransformFeedbacks(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenTransformFeedbacks(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenTransformFeedbacks", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenTransformFeedbacks(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenTransformFeedbacks(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenTransformFeedbacks", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenVertexArrays(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenVertexArrays(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenVertexArrays", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenVertexArrays(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenVertexArrays(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenVertexArrays", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenVertexArraysOES(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGenVertexArraysOES(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGenVertexArraysOES", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGenVertexArraysOES(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGenVertexArraysOES(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGenVertexArraysOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGenerateMipmap(int paramInt)
  {
    checkContext();
    downstreamGLES3.glGenerateMipmap(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glGenerateMipmap", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glGetActiveAttrib(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetActiveAttrib(paramInt1, paramInt2, paramInt3, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetActiveAttrib", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer });
    }
  }
  
  public void glGetActiveAttrib(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt1, int paramInt4, int[] paramArrayOfInt2, int paramInt5, int[] paramArrayOfInt3, int paramInt6, byte[] paramArrayOfByte, int paramInt7)
  {
    checkContext();
    downstreamGLES3.glGetActiveAttrib(paramInt1, paramInt2, paramInt3, paramArrayOfInt1, paramInt4, paramArrayOfInt2, paramInt5, paramArrayOfInt3, paramInt6, paramArrayOfByte, paramInt7);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetActiveAttrib", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7) });
    }
  }
  
  public void glGetActiveUniform(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt1, int paramInt4, int[] paramArrayOfInt2, int paramInt5, int[] paramArrayOfInt3, int paramInt6, byte[] paramArrayOfByte, int paramInt7)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniform(paramInt1, paramInt2, paramInt3, paramArrayOfInt1, paramInt4, paramArrayOfInt2, paramInt5, paramArrayOfInt3, paramInt6, paramArrayOfByte, paramInt7);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetActiveUniform", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7) });
    }
  }
  
  public void glGetActiveUniform(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniform(paramInt1, paramInt2, paramInt3, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetActiveUniform", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer });
    }
  }
  
  public void glGetActiveUniformBlockName(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4, byte[] paramArrayOfByte, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniformBlockName(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4, paramArrayOfByte, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetActiveUniformBlockName", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glGetActiveUniformBlockName(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniformBlockName(paramInt1, paramInt2, paramInt3, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetActiveUniformBlockName", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetActiveUniformBlockiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniformBlockiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetActiveUniformBlockiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetActiveUniformBlockiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniformBlockiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetActiveUniformBlockiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glGetActiveUniformsiv(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int paramInt4, int[] paramArrayOfInt2, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniformsiv(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramInt4, paramArrayOfInt2, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetActiveUniformsiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glGetActiveUniformsiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, int paramInt3, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glGetActiveUniformsiv(paramInt1, paramInt2, paramIntBuffer1, paramInt3, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetActiveUniformsiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer1, Integer.valueOf(paramInt3), paramIntBuffer2 });
    }
  }
  
  public void glGetAttachedShaders(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetAttachedShaders(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetAttachedShaders", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetAttachedShaders(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glGetAttachedShaders(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glGetAttachedShaders", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer1, paramIntBuffer2 });
    }
  }
  
  public int glGetAttribLocation(int paramInt, String paramString)
  {
    checkContext();
    int i = downstreamGLES3.glGetAttribLocation(paramInt, paramString);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <java.lang.String> %s)", new Object[] { "glGetAttribLocation", 
        Integer.valueOf(paramInt), paramString });
    }
    return i;
  }
  
  public void glGetBooleani_v(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetBooleani_v(paramInt1, paramInt2, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetBooleani_v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer });
    }
  }
  
  public void glGetBooleani_v(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetBooleani_v(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetBooleani_v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetBooleanv(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGetBooleanv(paramInt1, paramArrayOfByte, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetBooleanv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetBooleanv(int paramInt, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetBooleanv(paramInt, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetBooleanv", 
        Integer.valueOf(paramInt), paramByteBuffer });
    }
  }
  
  public void glGetBufferParameteri64v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    checkContext();
    downstreamGLES3.glGetBufferParameteri64v(paramInt1, paramInt2, paramLongBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.LongBuffer> %s)", new Object[] { "glGetBufferParameteri64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramLongBuffer });
    }
  }
  
  public void glGetBufferParameteri64v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetBufferParameteri64v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[J>, <int> 0x%X)", new Object[] { "glGetBufferParameteri64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetBufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetBufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetBufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetBufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetBufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetCoverageModulationTableNV(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGetCoverageModulationTableNV(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetCoverageModulationTableNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetCoverageModulationTableNV(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetCoverageModulationTableNV(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetCoverageModulationTableNV", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public int glGetDebugMessageLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, IntBuffer paramIntBuffer4, IntBuffer paramIntBuffer5, ByteBuffer paramByteBuffer)
  {
    checkContext();
    int i = downstreamGLES3.glGetDebugMessageLog(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramIntBuffer4, paramIntBuffer5, paramByteBuffer);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetDebugMessageLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramIntBuffer4, paramIntBuffer5, paramByteBuffer });
    }
    return i;
  }
  
  public int glGetDebugMessageLog(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4, int[] paramArrayOfInt3, int paramInt5, int[] paramArrayOfInt4, int paramInt6, int[] paramArrayOfInt5, int paramInt7, byte[] paramArrayOfByte, int paramInt8)
  {
    checkContext();
    int i = downstreamGLES3.glGetDebugMessageLog(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4, paramArrayOfInt3, paramInt5, paramArrayOfInt4, paramInt6, paramArrayOfInt5, paramInt7, paramArrayOfByte, paramInt8);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetDebugMessageLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
    return i;
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetDriverControlStringQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetDriverControlStringQCOM(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetDriverControlStringQCOM(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetDriverControlStringQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetDriverControlsQCOM(int[] paramArrayOfInt1, int paramInt1, int paramInt2, int[] paramArrayOfInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetDriverControlsQCOM(paramArrayOfInt1, paramInt1, paramInt2, paramArrayOfInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetDriverControlsQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetDriverControlsQCOM(IntBuffer paramIntBuffer1, int paramInt, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glGetDriverControlsQCOM(paramIntBuffer1, paramInt, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetDriverControlsQCOM", paramIntBuffer1, 
        Integer.valueOf(paramInt), paramIntBuffer2 });
    }
  }
  
  public int glGetError()
  {
    checkContext();
    int i = downstreamGLES3.glGetError();
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s()", new Object[] { "glGetError" });
    }
    
    return i;
  }
  
  public void glGetFloati_vNV(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetFloati_vNV(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetFloati_vNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetFloati_vNV(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetFloati_vNV(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetFloati_vNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetFloatv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGetFloatv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetFloatv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetFloatv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetFloatv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetFloatv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public int glGetFragDataIndexEXT(int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    checkContext();
    int i = downstreamGLES3.glGetFragDataIndexEXT(paramInt1, paramArrayOfByte, paramInt2);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetFragDataIndexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return i;
  }
  
  public int glGetFragDataIndexEXT(int paramInt, ByteBuffer paramByteBuffer)
  {
    checkContext();
    int i = downstreamGLES3.glGetFragDataIndexEXT(paramInt, paramByteBuffer);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetFragDataIndexEXT", 
        Integer.valueOf(paramInt), paramByteBuffer });
    }
    return i;
  }
  
  public int glGetFragDataLocation(int paramInt, String paramString)
  {
    checkContext();
    int i = downstreamGLES3.glGetFragDataLocation(paramInt, paramString);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <java.lang.String> %s)", new Object[] { "glGetFragDataLocation", 
        Integer.valueOf(paramInt), paramString });
    }
    return i;
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetFramebufferAttachmentParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glGetFramebufferAttachmentParameteriv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetFramebufferAttachmentParameteriv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetFramebufferAttachmentParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetFramebufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetFramebufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetFramebufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetFramebufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetFramebufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetFramebufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public int glGetGraphicsResetStatus()
  {
    checkContext();
    int i = downstreamGLES3.glGetGraphicsResetStatus();
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s()", new Object[] { "glGetGraphicsResetStatus" });
    }
    
    return i;
  }
  
  public void glGetInteger64i_v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetInteger64i_v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[J>, <int> 0x%X)", new Object[] { "glGetInteger64i_v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetInteger64i_v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    checkContext();
    downstreamGLES3.glGetInteger64i_v(paramInt1, paramInt2, paramLongBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.LongBuffer> %s)", new Object[] { "glGetInteger64i_v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramLongBuffer });
    }
  }
  
  public void glGetInteger64v(int paramInt, LongBuffer paramLongBuffer)
  {
    checkContext();
    downstreamGLES3.glGetInteger64v(paramInt, paramLongBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.LongBuffer> %s)", new Object[] { "glGetInteger64v", 
        Integer.valueOf(paramInt), paramLongBuffer });
    }
  }
  
  public void glGetInteger64v(int paramInt1, long[] paramArrayOfLong, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGetInteger64v(paramInt1, paramArrayOfLong, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[J>, <int> 0x%X)", new Object[] { "glGetInteger64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetIntegeri_v(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetIntegeri_v(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetIntegeri_v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetIntegeri_v(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetIntegeri_v(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetIntegeri_v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetIntegeri_vEXT(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetIntegeri_vEXT(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetIntegeri_vEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetIntegeri_vEXT(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetIntegeri_vEXT(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetIntegeri_vEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetIntegerv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetIntegerv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetIntegerv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glGetIntegerv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glGetIntegerv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetIntegerv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glGetInternalformativ(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glGetInternalformativ(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetInternalformativ", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glGetInternalformativ(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetInternalformativ(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetInternalformativ", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramIntBuffer });
    }
  }
  
  public void glGetMultisamplefv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetMultisamplefv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetMultisamplefv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetMultisamplefv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetMultisamplefv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetMultisamplefv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetObjectLabel(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetObjectLabel(paramInt1, paramInt2, paramInt3, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetObjectLabel", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetObjectLabel(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4, byte[] paramArrayOfByte, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glGetObjectLabel(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4, paramArrayOfByte, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetObjectLabel", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glGetObjectPtrLabel(Buffer paramBuffer, int paramInt1, int[] paramArrayOfInt, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetObjectPtrLabel(paramBuffer, paramInt1, paramArrayOfInt, paramInt2, paramArrayOfByte, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.Buffer> %s, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetObjectPtrLabel", paramBuffer, 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetObjectPtrLabel(Buffer paramBuffer, int paramInt, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetObjectPtrLabel(paramBuffer, paramInt, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.Buffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetObjectPtrLabel", paramBuffer, 
        Integer.valueOf(paramInt), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetProgramBinary(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramBinary(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.Buffer> %s)", new Object[] { "glGetProgramBinary", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer1, paramIntBuffer2, paramBuffer });
    }
  }
  
  public void glGetProgramBinary(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramBinary(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glGetProgramBinary", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramBuffer });
    }
  }
  
  public void glGetProgramInfoLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramInfoLog(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetProgramInfoLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetProgramInfoLog(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetProgramInfoLog(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetProgramInfoLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetProgramInterfaceiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramInterfaceiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetProgramInterfaceiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glGetProgramInterfaceiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetProgramInterfaceiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetProgramInterfaceiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetProgramPipelineInfoLog(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetProgramPipelineInfoLog(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetProgramPipelineInfoLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetProgramPipelineInfoLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramPipelineInfoLog(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetProgramPipelineInfoLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetProgramPipelineiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramPipelineiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetProgramPipelineiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetProgramPipelineiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetProgramPipelineiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetProgramPipelineiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public int glGetProgramResourceIndex(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    checkContext();
    int i = downstreamGLES3.glGetProgramResourceIndex(paramInt1, paramInt2, paramByteBuffer);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetProgramResourceIndex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer });
    }
    return i;
  }
  
  public int glGetProgramResourceIndex(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    checkContext();
    int i = downstreamGLES3.glGetProgramResourceIndex(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetProgramResourceIndex", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
    return i;
  }
  
  public int glGetProgramResourceLocation(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    checkContext();
    int i = downstreamGLES3.glGetProgramResourceLocation(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetProgramResourceLocation", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
    return i;
  }
  
  public int glGetProgramResourceLocation(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    checkContext();
    int i = downstreamGLES3.glGetProgramResourceLocation(paramInt1, paramInt2, paramByteBuffer);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetProgramResourceLocation", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer });
    }
    return i;
  }
  
  public int glGetProgramResourceLocationIndexEXT(int paramInt1, int paramInt2, byte[] paramArrayOfByte, int paramInt3)
  {
    checkContext();
    int i = downstreamGLES3.glGetProgramResourceLocationIndexEXT(paramInt1, paramInt2, paramArrayOfByte, paramInt3);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetProgramResourceLocationIndexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
    return i;
  }
  
  public int glGetProgramResourceLocationIndexEXT(int paramInt1, int paramInt2, ByteBuffer paramByteBuffer)
  {
    checkContext();
    int i = downstreamGLES3.glGetProgramResourceLocationIndexEXT(paramInt1, paramInt2, paramByteBuffer);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glGetProgramResourceLocationIndexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramByteBuffer });
    }
    return i;
  }
  
  public void glGetProgramResourceName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramResourceName(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetProgramResourceName", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetProgramResourceName(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5, byte[] paramArrayOfByte, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glGetProgramResourceName(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5, paramArrayOfByte, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetProgramResourceName", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glGetProgramResourceiv(int paramInt1, int paramInt2, int paramInt3, int paramInt4, IntBuffer paramIntBuffer1, int paramInt5, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3)
  {
    checkContext();
    downstreamGLES3.glGetProgramResourceiv(paramInt1, paramInt2, paramInt3, paramInt4, paramIntBuffer1, paramInt5, paramIntBuffer2, paramIntBuffer3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glGetProgramResourceiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramIntBuffer1, Integer.valueOf(paramInt5), paramIntBuffer2, paramIntBuffer3 });
    }
  }
  
  public void glGetProgramResourceiv(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt1, int paramInt5, int paramInt6, int[] paramArrayOfInt2, int paramInt7, int[] paramArrayOfInt3, int paramInt8)
  {
    checkContext();
    downstreamGLES3.glGetProgramResourceiv(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt1, paramInt5, paramInt6, paramArrayOfInt2, paramInt7, paramArrayOfInt3, paramInt8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetProgramResourceiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
  }
  
  public void glGetProgramiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetProgramiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetProgramiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetProgramiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetProgramiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetProgramiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetQueryObjecti64v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjecti64v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[J>, <int> 0x%X)", new Object[] { "glGetQueryObjecti64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetQueryObjecti64v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjecti64v(paramInt1, paramInt2, paramLongBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.LongBuffer> %s)", new Object[] { "glGetQueryObjecti64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramLongBuffer });
    }
  }
  
  public void glGetQueryObjectiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjectiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetQueryObjectiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetQueryObjectiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjectiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetQueryObjectiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetQueryObjectui64v(int paramInt1, int paramInt2, LongBuffer paramLongBuffer)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjectui64v(paramInt1, paramInt2, paramLongBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.LongBuffer> %s)", new Object[] { "glGetQueryObjectui64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramLongBuffer });
    }
  }
  
  public void glGetQueryObjectui64v(int paramInt1, int paramInt2, long[] paramArrayOfLong, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjectui64v(paramInt1, paramInt2, paramArrayOfLong, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[J>, <int> 0x%X)", new Object[] { "glGetQueryObjectui64v", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetQueryObjectuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjectuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetQueryObjectuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetQueryObjectuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetQueryObjectuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetQueryObjectuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetQueryiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetQueryiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetQueryiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetQueryiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetQueryiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetQueryiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetRenderbufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetRenderbufferParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetRenderbufferParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetRenderbufferParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetSamplerParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetSamplerParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetSamplerParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetSamplerParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetSamplerParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetSamplerParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetSamplerParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetSamplerParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetSamplerParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetSamplerParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetSamplerParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetSamplerParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetSamplerParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetSamplerParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetSamplerParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetSamplerParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetSamplerParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetShaderInfoLog(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetShaderInfoLog(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetShaderInfoLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetShaderInfoLog(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetShaderInfoLog(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetShaderInfoLog", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetShaderPrecisionFormat(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetShaderPrecisionFormat(paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetShaderPrecisionFormat", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetShaderPrecisionFormat(int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glGetShaderPrecisionFormat(paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glGetShaderPrecisionFormat", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer1, paramIntBuffer2 });
    }
  }
  
  public void glGetShaderSource(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetShaderSource(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetShaderSource", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public void glGetShaderSource(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetShaderSource(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetShaderSource", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetShaderiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetShaderiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetShaderiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetShaderiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetShaderiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetShaderiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public String glGetString(int paramInt)
  {
    checkContext();
    String str = downstreamGLES3.glGetString(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glGetString", 
        Integer.valueOf(paramInt) });
    }
    return str;
  }
  
  public String glGetStringi(int paramInt1, int paramInt2)
  {
    checkContext();
    String str = downstreamGLES3.glGetStringi(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glGetStringi", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return str;
  }
  
  public void glGetSynciv(long paramLong, int paramInt1, int paramInt2, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glGetSynciv(paramLong, paramInt1, paramInt2, paramIntBuffer1, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<long> %s, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s)", new Object[] { "glGetSynciv", 
        Long.valueOf(paramLong), Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer1, paramIntBuffer2 });
    }
  }
  
  public void glGetSynciv(long paramLong, int paramInt1, int paramInt2, int[] paramArrayOfInt1, int paramInt3, int[] paramArrayOfInt2, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetSynciv(paramLong, paramInt1, paramInt2, paramArrayOfInt1, paramInt3, paramArrayOfInt2, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<long> %s, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetSynciv", 
        Long.valueOf(paramLong), Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetTexLevelParameterfv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetTexLevelParameterfv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetTexLevelParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetTexLevelParameterfv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTexLevelParameterfv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetTexLevelParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glGetTexLevelParameteriv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTexLevelParameteriv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexLevelParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glGetTexLevelParameteriv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetTexLevelParameteriv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexLevelParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetTexParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTexParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetTexParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTexParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTexParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetTexParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetTransformFeedbackVarying(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt1, int paramInt4, int[] paramArrayOfInt2, int paramInt5, int[] paramArrayOfInt3, int paramInt6, byte[] paramArrayOfByte, int paramInt7)
  {
    checkContext();
    downstreamGLES3.glGetTransformFeedbackVarying(paramInt1, paramInt2, paramInt3, paramArrayOfInt1, paramInt4, paramArrayOfInt2, paramInt5, paramArrayOfInt3, paramInt6, paramArrayOfByte, paramInt7);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetTransformFeedbackVarying", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7) });
    }
  }
  
  public void glGetTransformFeedbackVarying(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer1, IntBuffer paramIntBuffer2, IntBuffer paramIntBuffer3, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTransformFeedbackVarying(paramInt1, paramInt2, paramInt3, paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetTransformFeedbackVarying", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer1, paramIntBuffer2, paramIntBuffer3, paramByteBuffer });
    }
  }
  
  public void glGetTranslatedShaderSourceANGLE(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetTranslatedShaderSourceANGLE(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glGetTranslatedShaderSourceANGLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetTranslatedShaderSourceANGLE(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glGetTranslatedShaderSourceANGLE(paramInt1, paramInt2, paramIntBuffer, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <java.nio.ByteBuffer> %s)", new Object[] { "glGetTranslatedShaderSourceANGLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, paramByteBuffer });
    }
  }
  
  public int glGetUniformBlockIndex(int paramInt, String paramString)
  {
    checkContext();
    int i = downstreamGLES3.glGetUniformBlockIndex(paramInt, paramString);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <java.lang.String> %s)", new Object[] { "glGetUniformBlockIndex", 
        Integer.valueOf(paramInt), paramString });
    }
    return i;
  }
  
  public void glGetUniformIndices(int paramInt1, int paramInt2, String[] paramArrayOfString, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetUniformIndices(paramInt1, paramInt2, paramArrayOfString, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[Ljava.lang.String;>, <[I>, <int> 0x%X)", new Object[] { "glGetUniformIndices", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetUniformIndices(int paramInt1, int paramInt2, String[] paramArrayOfString, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetUniformIndices(paramInt1, paramInt2, paramArrayOfString, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[Ljava.lang.String;>, <java.nio.IntBuffer> %s)", new Object[] { "glGetUniformIndices", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public int glGetUniformLocation(int paramInt, String paramString)
  {
    checkContext();
    int i = downstreamGLES3.glGetUniformLocation(paramInt, paramString);
    int j = checkGLError();
    if (j != 0) {
      writeGLError(j, "%s(<int> 0x%X, <java.lang.String> %s)", new Object[] { "glGetUniformLocation", 
        Integer.valueOf(paramInt), paramString });
    }
    return i;
  }
  
  public void glGetUniformfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetUniformfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetUniformfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetUniformfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetUniformfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetUniformfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetUniformiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetUniformiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetUniformiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetUniformiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetUniformiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetUniformiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetUniformuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetUniformuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetUniformuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetUniformuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetUniformuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetUniformuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetVertexAttribIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetVertexAttribIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetVertexAttribIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribIiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetVertexAttribIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetVertexAttribIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetVertexAttribIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetVertexAttribIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribIuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetVertexAttribIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetVertexAttribfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetVertexAttribfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glGetVertexAttribfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetVertexAttribfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetVertexAttribiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetVertexAttribiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glGetVertexAttribiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glGetVertexAttribiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetVertexAttribiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glGetnUniformfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetnUniformfv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glGetnUniformfv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glGetnUniformfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetnUniformiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetnUniformiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetnUniformiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetnUniformiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glGetnUniformuiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glGetnUniformuiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glGetnUniformuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glGetnUniformuiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glGetnUniformuiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glGetnUniformuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glHint(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glHint(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glHint", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glInvalidateFramebuffer(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glInvalidateFramebuffer(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glInvalidateFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glInvalidateFramebuffer(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glInvalidateFramebuffer(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glInvalidateFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glInvalidateSubFramebuffer(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    checkContext();
    downstreamGLES3.glInvalidateSubFramebuffer(paramInt1, paramInt2, paramArrayOfInt, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glInvalidateSubFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7) });
    }
  }
  
  public void glInvalidateSubFramebuffer(int paramInt1, int paramInt2, IntBuffer paramIntBuffer, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glInvalidateSubFramebuffer(paramInt1, paramInt2, paramIntBuffer, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glInvalidateSubFramebuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer, Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public boolean glIsBuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsBuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsBuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsEnabled(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsEnabled(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsEnabled", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsEnabledi(int paramInt1, int paramInt2)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsEnabledi(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glIsEnabledi", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return bool;
  }
  
  public boolean glIsEnablediEXT(int paramInt1, int paramInt2)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsEnablediEXT(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glIsEnablediEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return bool;
  }
  
  public boolean glIsEnablediNV(int paramInt1, int paramInt2)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsEnablediNV(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glIsEnablediNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return bool;
  }
  
  public boolean glIsEnablediOES(int paramInt1, int paramInt2)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsEnablediOES(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glIsEnablediOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return bool;
  }
  
  public boolean glIsFramebuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsFramebuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsFramebuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsProgram(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsProgram(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsProgram", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsProgramPipeline(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsProgramPipeline(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsProgramPipeline", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsQuery(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsQuery(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsQuery", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsRenderbuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsRenderbuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsRenderbuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsSampler(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsSampler(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsSampler", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsShader(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsShader(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsShader", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsSync(long paramLong)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsSync(paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<long> %s)", new Object[] { "glIsSync", 
        Long.valueOf(paramLong) });
    }
    return bool;
  }
  
  public boolean glIsTexture(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsTexture(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsTexture", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsTransformFeedback(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsTransformFeedback(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsTransformFeedback", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsVertexArray(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsVertexArray(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsVertexArray", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public boolean glIsVertexArrayOES(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glIsVertexArrayOES(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glIsVertexArrayOES", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public void glLineWidth(float paramFloat)
  {
    checkContext();
    downstreamGLES3.glLineWidth(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glLineWidth", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glLinkProgram(int paramInt)
  {
    checkContext();
    downstreamGLES3.glLinkProgram(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glLinkProgram", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public ByteBuffer glMapBuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    ByteBuffer localByteBuffer = downstreamGLES3.glMapBuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glMapBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return localByteBuffer;
  }
  
  public ByteBuffer glMapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    checkContext();
    ByteBuffer localByteBuffer = downstreamGLES3.glMapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s, <int> 0x%X)", new Object[] { "glMapBufferRange", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong1), Long.valueOf(paramLong2), Integer.valueOf(paramInt2) });
    }
    return localByteBuffer;
  }
  
  public void glMemoryBarrier(int paramInt)
  {
    checkContext();
    downstreamGLES3.glMemoryBarrier(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glMemoryBarrier", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glMemoryBarrierByRegion(int paramInt)
  {
    checkContext();
    downstreamGLES3.glMemoryBarrierByRegion(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glMemoryBarrierByRegion", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glMinSampleShading(float paramFloat)
  {
    checkContext();
    downstreamGLES3.glMinSampleShading(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glMinSampleShading", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glMinSampleShadingOES(float paramFloat)
  {
    checkContext();
    downstreamGLES3.glMinSampleShadingOES(paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s)", new Object[] { "glMinSampleShadingOES", 
        Float.valueOf(paramFloat) });
    }
  }
  
  public void glMultiDrawArraysIndirectEXT(int paramInt1, Buffer paramBuffer, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glMultiDrawArraysIndirectEXT(paramInt1, paramBuffer, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glMultiDrawArraysIndirectEXT", 
        Integer.valueOf(paramInt1), paramBuffer, Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glMultiDrawElementsBaseVertexEXT(int paramInt1, IntBuffer paramIntBuffer1, int paramInt2, PointerBuffer paramPointerBuffer, int paramInt3, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glMultiDrawElementsBaseVertexEXT(paramInt1, paramIntBuffer1, paramInt2, paramPointerBuffer, paramInt3, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s, <int> 0x%X, <com.jogamp.common.nio.PointerBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glMultiDrawElementsBaseVertexEXT", 
        Integer.valueOf(paramInt1), paramIntBuffer1, Integer.valueOf(paramInt2), paramPointerBuffer, Integer.valueOf(paramInt3), paramIntBuffer2 });
    }
  }
  
  public void glMultiDrawElementsBaseVertexEXT(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int paramInt3, PointerBuffer paramPointerBuffer, int paramInt4, int[] paramArrayOfInt2, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glMultiDrawElementsBaseVertexEXT(paramInt1, paramArrayOfInt1, paramInt2, paramInt3, paramPointerBuffer, paramInt4, paramArrayOfInt2, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X, <int> 0x%X, <com.jogamp.common.nio.PointerBuffer> %s, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glMultiDrawElementsBaseVertexEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramPointerBuffer, Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glMultiDrawElementsBaseVertexOES(int paramInt1, int[] paramArrayOfInt1, int paramInt2, int paramInt3, PointerBuffer paramPointerBuffer, int paramInt4, int[] paramArrayOfInt2, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glMultiDrawElementsBaseVertexOES(paramInt1, paramArrayOfInt1, paramInt2, paramInt3, paramPointerBuffer, paramInt4, paramArrayOfInt2, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X, <int> 0x%X, <com.jogamp.common.nio.PointerBuffer> %s, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glMultiDrawElementsBaseVertexOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramPointerBuffer, Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glMultiDrawElementsBaseVertexOES(int paramInt1, IntBuffer paramIntBuffer1, int paramInt2, PointerBuffer paramPointerBuffer, int paramInt3, IntBuffer paramIntBuffer2)
  {
    checkContext();
    downstreamGLES3.glMultiDrawElementsBaseVertexOES(paramInt1, paramIntBuffer1, paramInt2, paramPointerBuffer, paramInt3, paramIntBuffer2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s, <int> 0x%X, <com.jogamp.common.nio.PointerBuffer> %s, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glMultiDrawElementsBaseVertexOES", 
        Integer.valueOf(paramInt1), paramIntBuffer1, Integer.valueOf(paramInt2), paramPointerBuffer, Integer.valueOf(paramInt3), paramIntBuffer2 });
    }
  }
  
  public void glMultiDrawElementsIndirectEXT(int paramInt1, int paramInt2, Buffer paramBuffer, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glMultiDrawElementsIndirectEXT(paramInt1, paramInt2, paramBuffer, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X, <int> 0x%X)", new Object[] { "glMultiDrawElementsIndirectEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramBuffer, Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glNamedFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glNamedFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glNamedFramebufferSampleLocationsfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glNamedFramebufferSampleLocationsfvNV(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glNamedFramebufferSampleLocationsfvNV(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glNamedFramebufferSampleLocationsfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glObjectLabel(int paramInt1, int paramInt2, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glObjectLabel(paramInt1, paramInt2, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glObjectLabel", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glObjectLabel(int paramInt1, int paramInt2, int paramInt3, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glObjectLabel(paramInt1, paramInt2, paramInt3, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glObjectLabel", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramByteBuffer });
    }
  }
  
  public void glObjectPtrLabel(Buffer paramBuffer, int paramInt, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glObjectPtrLabel(paramBuffer, paramInt, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.Buffer> %s, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glObjectPtrLabel", paramBuffer, 
        Integer.valueOf(paramInt), paramByteBuffer });
    }
  }
  
  public void glObjectPtrLabel(Buffer paramBuffer, int paramInt1, byte[] paramArrayOfByte, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glObjectPtrLabel(paramBuffer, paramInt1, paramArrayOfByte, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<java.nio.Buffer> %s, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glObjectPtrLabel", paramBuffer, 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPatchParameteri(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glPatchParameteri(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPatchParameteri", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPatchParameteriEXT(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glPatchParameteriEXT(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPatchParameteriEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPatchParameteriOES(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glPatchParameteriOES(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPatchParameteriOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPauseTransformFeedback()
  {
    checkContext();
    downstreamGLES3.glPauseTransformFeedback();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glPauseTransformFeedback" });
    }
  }
  

  public void glPixelStorei(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glPixelStorei(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPixelStorei", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPolygonModeNV(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glPolygonModeNV(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glPolygonModeNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glPolygonOffset(float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES3.glPolygonOffset(paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s)", new Object[] { "glPolygonOffset", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glPopDebugGroup()
  {
    checkContext();
    downstreamGLES3.glPopDebugGroup();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glPopDebugGroup" });
    }
  }
  

  public void glPrimitiveBoundingBox(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6, float paramFloat7, float paramFloat8)
  {
    checkContext();
    downstreamGLES3.glPrimitiveBoundingBox(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6, paramFloat7, paramFloat8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glPrimitiveBoundingBox", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4), Float.valueOf(paramFloat5), Float.valueOf(paramFloat6), Float.valueOf(paramFloat7), Float.valueOf(paramFloat8) });
    }
  }
  
  public void glPrimitiveBoundingBoxEXT(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6, float paramFloat7, float paramFloat8)
  {
    checkContext();
    downstreamGLES3.glPrimitiveBoundingBoxEXT(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6, paramFloat7, paramFloat8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glPrimitiveBoundingBoxEXT", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4), Float.valueOf(paramFloat5), Float.valueOf(paramFloat6), Float.valueOf(paramFloat7), Float.valueOf(paramFloat8) });
    }
  }
  
  public void glPrimitiveBoundingBoxOES(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6, float paramFloat7, float paramFloat8)
  {
    checkContext();
    downstreamGLES3.glPrimitiveBoundingBoxOES(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5, paramFloat6, paramFloat7, paramFloat8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glPrimitiveBoundingBoxOES", 
        Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4), Float.valueOf(paramFloat5), Float.valueOf(paramFloat6), Float.valueOf(paramFloat7), Float.valueOf(paramFloat8) });
    }
  }
  
  public void glProgramBinary(int paramInt1, int paramInt2, Buffer paramBuffer, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glProgramBinary(paramInt1, paramInt2, paramBuffer, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glProgramBinary", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramBuffer, Integer.valueOf(paramInt3) });
    }
  }
  
  public void glProgramParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glProgramParameteri(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramParameteri", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glProgramUniform1f(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1f(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glProgramUniform1f", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glProgramUniform1fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniform1fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glProgramUniform1fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glProgramUniform1fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform1i(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1i(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform1i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glProgramUniform1iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform1iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform1iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform1iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform1ui(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1ui(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform1ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glProgramUniform1uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform1uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform1uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform1uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform1uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform2f(int paramInt1, int paramInt2, float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2f(paramInt1, paramInt2, paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s, <float> %s)", new Object[] { "glProgramUniform2f", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glProgramUniform2fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniform2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glProgramUniform2fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glProgramUniform2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform2i(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2i(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform2i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform2iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform2iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform2iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform2iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform2ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2ui(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform2ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform2uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform2uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform2uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform2uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform2uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform3f(int paramInt1, int paramInt2, float paramFloat1, float paramFloat2, float paramFloat3)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3f(paramInt1, paramInt2, paramFloat1, paramFloat2, paramFloat3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s, <float> %s, <float> %s)", new Object[] { "glProgramUniform3f", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3) });
    }
  }
  
  public void glProgramUniform3fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniform3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glProgramUniform3fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glProgramUniform3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform3i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform3i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glProgramUniform3iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform3iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform3iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform3iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform3ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform3ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glProgramUniform3uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform3uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform3uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform3uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform3uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform4f(int paramInt1, int paramInt2, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4f(paramInt1, paramInt2, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glProgramUniform4f", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glProgramUniform4fv(int paramInt1, int paramInt2, int paramInt3, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4fv(paramInt1, paramInt2, paramInt3, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniform4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramFloatBuffer });
    }
  }
  
  public void glProgramUniform4fv(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4fv(paramInt1, paramInt2, paramInt3, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glProgramUniform4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform4i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform4i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glProgramUniform4iv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4iv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform4iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform4iv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4iv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform4iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniform4ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glProgramUniform4ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glProgramUniform4uiv(int paramInt1, int paramInt2, int paramInt3, int[] paramArrayOfInt, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4uiv(paramInt1, paramInt2, paramInt3, paramArrayOfInt, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glProgramUniform4uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniform4uiv(int paramInt1, int paramInt2, int paramInt3, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniform4uiv(paramInt1, paramInt2, paramInt3, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glProgramUniform4uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramIntBuffer });
    }
  }
  
  public void glProgramUniformMatrix2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix2x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix2x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix2x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix2x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix2x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix2x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix2x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix2x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix2x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix2x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix2x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix2x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix3x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix3x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix3x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix3x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix3x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix3x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix3x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix3x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix3x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix3x4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix3x4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix3x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix4fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix4fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix4x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix4x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix4x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glProgramUniformMatrix4x2fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix4x2fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix4x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix4x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix4x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramArrayOfFloat, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glProgramUniformMatrix4x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glProgramUniformMatrix4x3fv(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glProgramUniformMatrix4x3fv(paramInt1, paramInt2, paramInt3, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glProgramUniformMatrix4x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glPushDebugGroup(int paramInt1, int paramInt2, int paramInt3, ByteBuffer paramByteBuffer)
  {
    checkContext();
    downstreamGLES3.glPushDebugGroup(paramInt1, paramInt2, paramInt3, paramByteBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.ByteBuffer> %s)", new Object[] { "glPushDebugGroup", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramByteBuffer });
    }
  }
  
  public void glPushDebugGroup(int paramInt1, int paramInt2, int paramInt3, byte[] paramArrayOfByte, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glPushDebugGroup(paramInt1, paramInt2, paramInt3, paramArrayOfByte, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <[B>, <int> 0x%X)", new Object[] { "glPushDebugGroup", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glQueryCounter(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glQueryCounter(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glQueryCounter", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glRasterSamplesEXT(int paramInt, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glRasterSamplesEXT(paramInt, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <boolean> %s)", new Object[] { "glRasterSamplesEXT", 
        Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glReadBuffer(int paramInt)
  {
    checkContext();
    downstreamGLES3.glReadBuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glReadBuffer", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glReadBufferIndexedEXT(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glReadBufferIndexedEXT(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glReadBufferIndexedEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glReadBufferNV(int paramInt)
  {
    checkContext();
    downstreamGLES3.glReadBufferNV(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glReadBufferNV", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, long paramLong)
  {
    checkContext();
    downstreamGLES3.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glReadPixels", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Long.valueOf(paramLong) });
    }
  }
  
  public void glReadPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glReadPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glReadPixels", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), paramBuffer });
    }
  }
  
  public void glReadnPixels(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glReadnPixels(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glReadnPixels", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), paramBuffer });
    }
  }
  
  public void glReleaseShaderCompiler()
  {
    checkContext();
    downstreamGLES3.glReleaseShaderCompiler();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glReleaseShaderCompiler" });
    }
  }
  

  public void glRenderbufferStorage(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glRenderbufferStorage(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorage", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glRenderbufferStorageMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glRenderbufferStorageMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisample", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glRenderbufferStorageMultisampleEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glRenderbufferStorageMultisampleEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisampleEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glRenderbufferStorageMultisampleIMG(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glRenderbufferStorageMultisampleIMG(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisampleIMG", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glRenderbufferStorageMultisampleNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glRenderbufferStorageMultisampleNV(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glRenderbufferStorageMultisampleNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glResolveDepthValuesNV()
  {
    checkContext();
    downstreamGLES3.glResolveDepthValuesNV();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glResolveDepthValuesNV" });
    }
  }
  

  public void glResolveMultisampleFramebuffer()
  {
    checkContext();
    downstreamGLES3.glResolveMultisampleFramebuffer();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glResolveMultisampleFramebuffer" });
    }
  }
  

  public void glResumeTransformFeedback()
  {
    checkContext();
    downstreamGLES3.glResumeTransformFeedback();
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s()", new Object[] { "glResumeTransformFeedback" });
    }
  }
  

  public void glSampleCoverage(float paramFloat, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glSampleCoverage(paramFloat, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<float> %s, <boolean> %s)", new Object[] { "glSampleCoverage", 
        Float.valueOf(paramFloat), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glSampleMaski(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glSampleMaski(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glSampleMaski", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glSamplerParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glSamplerParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glSamplerParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glSamplerParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glSamplerParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glSamplerParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glSamplerParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glSamplerParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glSamplerParameterf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glSamplerParameterf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glSamplerParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glSamplerParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glSamplerParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glSamplerParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glSamplerParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glSamplerParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glSamplerParameteri(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glSamplerParameteri", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glSamplerParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glSamplerParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glSamplerParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glSamplerParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glSamplerParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glSamplerParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glScissor(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glScissor(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glScissor", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glScissorArrayvNV(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glScissorArrayvNV(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glScissorArrayvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glScissorArrayvNV(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glScissorArrayvNV(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glScissorArrayvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glScissorIndexedNV(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glScissorIndexedNV(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glScissorIndexedNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glScissorIndexedvNV(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glScissorIndexedvNV(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glScissorIndexedvNV", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glScissorIndexedvNV(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glScissorIndexedvNV(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glScissorIndexedvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glShaderBinary(int paramInt1, int[] paramArrayOfInt, int paramInt2, int paramInt3, Buffer paramBuffer, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glShaderBinary(paramInt1, paramArrayOfInt, paramInt2, paramInt3, paramBuffer, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glShaderBinary", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), paramBuffer, Integer.valueOf(paramInt4) });
    }
  }
  
  public void glShaderBinary(int paramInt1, IntBuffer paramIntBuffer, int paramInt2, Buffer paramBuffer, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glShaderBinary(paramInt1, paramIntBuffer, paramInt2, paramBuffer, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s, <int> 0x%X, <java.nio.Buffer> %s, <int> 0x%X)", new Object[] { "glShaderBinary", 
        Integer.valueOf(paramInt1), paramIntBuffer, Integer.valueOf(paramInt2), paramBuffer, Integer.valueOf(paramInt3) });
    }
  }
  
  public void glShaderSource(int paramInt1, int paramInt2, String[] paramArrayOfString, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glShaderSource(paramInt1, paramInt2, paramArrayOfString, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[Ljava.lang.String;>, <java.nio.IntBuffer> %s)", new Object[] { "glShaderSource", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glShaderSource(int paramInt1, int paramInt2, String[] paramArrayOfString, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glShaderSource(paramInt1, paramInt2, paramArrayOfString, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[Ljava.lang.String;>, <[I>, <int> 0x%X)", new Object[] { "glShaderSource", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glStartTilingQCOM(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glStartTilingQCOM(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStartTilingQCOM", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glStencilFunc(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glStencilFunc(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStencilFunc", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glStencilFuncSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glStencilFuncSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStencilFuncSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glStencilMask(int paramInt)
  {
    checkContext();
    downstreamGLES3.glStencilMask(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glStencilMask", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glStencilMaskSeparate(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glStencilMaskSeparate(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glStencilMaskSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glStencilOp(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glStencilOp(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStencilOp", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glStencilOpSeparate(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glStencilOpSeparate(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glStencilOpSeparate", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glSubpixelPrecisionBiasNV(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glSubpixelPrecisionBiasNV(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glSubpixelPrecisionBiasNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glTexBuffer(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexBuffer(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexBufferEXT(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexBufferEXT(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexBufferEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexBufferOES(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexBufferOES(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexBufferOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexBufferRange(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    checkContext();
    downstreamGLES3.glTexBufferRange(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <long> %s)", new Object[] { "glTexBufferRange", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
  }
  
  public void glTexBufferRangeEXT(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    checkContext();
    downstreamGLES3.glTexBufferRangeEXT(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <long> %s)", new Object[] { "glTexBufferRangeEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
  }
  
  public void glTexBufferRangeOES(int paramInt1, int paramInt2, int paramInt3, long paramLong1, long paramLong2)
  {
    checkContext();
    downstreamGLES3.glTexBufferRangeOES(paramInt1, paramInt2, paramInt3, paramLong1, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s, <long> %s)", new Object[] { "glTexBufferRangeOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Long.valueOf(paramLong1), Long.valueOf(paramLong2) });
    }
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES3.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glTexImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glTexImage2DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glTexImage2DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s)", new Object[] { "glTexImage2DMultisample", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, long paramLong)
  {
    checkContext();
    downstreamGLES3.glTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glTexImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), paramBuffer });
    }
  }
  
  public void glTexImage3DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glTexImage3DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s)", new Object[] { "glTexImage3DMultisample", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glTexPageCommitmentEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glTexPageCommitmentEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s)", new Object[] { "glTexPageCommitmentEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glTexParameterIiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glTexParameterIiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexParameterIiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexParameterIiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexParameterIiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameterIuiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glTexParameterIuiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexParameterIuiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexParameterIuiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexParameterIuiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameterf(int paramInt1, int paramInt2, float paramFloat)
  {
    checkContext();
    downstreamGLES3.glTexParameterf(paramInt1, paramInt2, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <float> %s)", new Object[] { "glTexParameterf", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Float.valueOf(paramFloat) });
    }
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glTexParameterfv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glTexParameterfv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexParameterfv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glTexParameterfv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameteri(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexParameteri(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexParameteri", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glTexParameteriv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glTexParameteriv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTexParameteriv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glTexParameteriv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glTexStorage1D(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glTexStorage1D(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexStorage1D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glTexStorage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glTexStorage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexStorage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glTexStorage2DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glTexStorage2DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s)", new Object[] { "glTexStorage2DMultisample", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glTexStorage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glTexStorage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTexStorage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glTexStorage3DMultisample(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glTexStorage3DMultisample(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s)", new Object[] { "glTexStorage3DMultisample", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glTexStorage3DMultisampleOES(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, boolean paramBoolean)
  {
    checkContext();
    downstreamGLES3.glTexStorage3DMultisampleOES(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramBoolean);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s)", new Object[] { "glTexStorage3DMultisampleOES", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Boolean.valueOf(paramBoolean) });
    }
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, long paramLong)
  {
    checkContext();
    downstreamGLES3.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexSubImage2D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glTexSubImage2D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexSubImage2D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), paramBuffer });
    }
  }
  
  public void glTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, long paramLong)
  {
    checkContext();
    downstreamGLES3.glTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glTexSubImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), Long.valueOf(paramLong) });
    }
  }
  
  public void glTexSubImage3D(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, int paramInt9, int paramInt10, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glTexSubImage3D(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8, paramInt9, paramInt10, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glTexSubImage3D", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8), Integer.valueOf(paramInt9), Integer.valueOf(paramInt10), paramBuffer });
    }
  }
  
  public void glTextureStorage1DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glTextureStorage1DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureStorage1DEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glTextureStorage2DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6)
  {
    checkContext();
    downstreamGLES3.glTextureStorage2DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureStorage2DEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6) });
    }
  }
  
  public void glTextureStorage3DEXT(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    checkContext();
    downstreamGLES3.glTextureStorage3DEXT(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureStorage3DEXT", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7) });
    }
  }
  
  public void glTextureView(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    checkContext();
    downstreamGLES3.glTextureView(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5, paramInt6, paramInt7, paramInt8);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glTextureView", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5), Integer.valueOf(paramInt6), Integer.valueOf(paramInt7), Integer.valueOf(paramInt8) });
    }
  }
  
  public void glTransformFeedbackVaryings(int paramInt1, int paramInt2, String[] paramArrayOfString, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glTransformFeedbackVaryings(paramInt1, paramInt2, paramArrayOfString, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[Ljava.lang.String;>, <int> 0x%X)", new Object[] { "glTransformFeedbackVaryings", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform(GLUniformData paramGLUniformData)
  {
    checkContext();
    downstreamGLES3.glUniform(paramGLUniformData);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<com.jogamp.opengl.GLUniformData> %s)", new Object[] { "glUniform", paramGLUniformData });
    }
  }
  

  public void glUniform1f(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES3.glUniform1f(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glUniform1f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glUniform1fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform1fv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glUniform1fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glUniform1fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform1fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glUniform1fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform1i(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glUniform1i(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glUniform1i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glUniform1iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform1iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform1iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform1iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform1iv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform1iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform1ui(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glUniform1ui(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glUniform1ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glUniform1uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform1uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform1uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform1uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform1uiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform1uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform2f(int paramInt, float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES3.glUniform2f(paramInt, paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s)", new Object[] { "glUniform2f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glUniform2fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform2fv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glUniform2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glUniform2fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform2fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glUniform2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform2i(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform2i(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniform2i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform2iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform2iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform2iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform2iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform2iv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform2iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform2ui(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform2ui(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniform2ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform2uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform2uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform2uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform2uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform2uiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform2uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform3f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3)
  {
    checkContext();
    downstreamGLES3.glUniform3f(paramInt, paramFloat1, paramFloat2, paramFloat3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s, <float> %s)", new Object[] { "glUniform3f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3) });
    }
  }
  
  public void glUniform3fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform3fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glUniform3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform3fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform3fv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glUniform3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glUniform3i(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glUniform3i(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniform3i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glUniform3iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform3iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform3iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform3iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform3iv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform3iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform3ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glUniform3ui(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniform3ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glUniform3uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform3uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform3uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform3uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform3uiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform3uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform4f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES3.glUniform4f(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glUniform4f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glUniform4fv(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform4fv(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glUniform4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform4fv(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform4fv(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glUniform4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glUniform4i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glUniform4i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniform4i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glUniform4iv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform4iv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform4iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform4iv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform4iv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform4iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniform4ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glUniform4ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniform4ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glUniform4uiv(int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniform4uiv(paramInt1, paramInt2, paramArrayOfInt, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glUniform4uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniform4uiv(int paramInt1, int paramInt2, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glUniform4uiv(paramInt1, paramInt2, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glUniform4uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramIntBuffer });
    }
  }
  
  public void glUniformBlockBinding(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformBlockBinding(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUniformBlockBinding", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix2fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix2fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix2x3fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x3fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix2x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix2x3fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x3fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix2x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix2x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x3fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix2x3fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix2x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x3fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix2x3fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix2x4fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x4fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix2x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix2x4fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x4fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix2x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix2x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x4fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix2x4fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix2x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix2x4fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix2x4fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix3fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix3fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix3x2fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x2fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix3x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix3x2fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x2fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix3x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix3x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x2fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix3x2fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix3x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x2fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix3x2fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix3x4fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x4fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix3x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix3x4fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x4fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix3x4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix3x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x4fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix3x4fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix3x4fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix3x4fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix3x4fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix4fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix4fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix4x2fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x2fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix4x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix4x2fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x2fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix4x2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix4x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x2fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix4x2fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix4x2fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x2fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix4x2fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix4x3fv(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x3fv(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix4x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public void glUniformMatrix4x3fv(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x3fv(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix4x3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix4x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x3fvNV(paramInt1, paramInt2, paramBoolean, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <[F>, <int> 0x%X)", new Object[] { "glUniformMatrix4x3fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glUniformMatrix4x3fvNV(int paramInt1, int paramInt2, boolean paramBoolean, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glUniformMatrix4x3fvNV(paramInt1, paramInt2, paramBoolean, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <boolean> %s, <java.nio.FloatBuffer> %s)", new Object[] { "glUniformMatrix4x3fvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean), paramFloatBuffer });
    }
  }
  
  public boolean glUnmapBuffer(int paramInt)
  {
    checkContext();
    boolean bool = downstreamGLES3.glUnmapBuffer(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glUnmapBuffer", 
        Integer.valueOf(paramInt) });
    }
    return bool;
  }
  
  public void glUseProgram(int paramInt)
  {
    checkContext();
    downstreamGLES3.glUseProgram(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glUseProgram", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glUseProgramStages(int paramInt1, int paramInt2, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glUseProgramStages(paramInt1, paramInt2, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glUseProgramStages", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glValidateProgram(int paramInt)
  {
    checkContext();
    downstreamGLES3.glValidateProgram(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glValidateProgram", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glValidateProgramPipeline(int paramInt)
  {
    checkContext();
    downstreamGLES3.glValidateProgramPipeline(paramInt);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X)", new Object[] { "glValidateProgramPipeline", 
        Integer.valueOf(paramInt) });
    }
  }
  
  public void glVertexAttrib1f(int paramInt, float paramFloat)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib1f(paramInt, paramFloat);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s)", new Object[] { "glVertexAttrib1f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat) });
    }
  }
  
  public void glVertexAttrib1fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib1fv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glVertexAttrib1fv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glVertexAttrib1fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib1fv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glVertexAttrib1fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttrib2f(int paramInt, float paramFloat1, float paramFloat2)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib2f(paramInt, paramFloat1, paramFloat2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s)", new Object[] { "glVertexAttrib2f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2) });
    }
  }
  
  public void glVertexAttrib2fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib2fv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glVertexAttrib2fv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glVertexAttrib2fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib2fv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glVertexAttrib2fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttrib3f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib3f(paramInt, paramFloat1, paramFloat2, paramFloat3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s, <float> %s)", new Object[] { "glVertexAttrib3f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3) });
    }
  }
  
  public void glVertexAttrib3fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib3fv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glVertexAttrib3fv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glVertexAttrib3fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib3fv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glVertexAttrib3fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttrib4f(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib4f(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glVertexAttrib4f", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glVertexAttrib4fv(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib4fv(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glVertexAttrib4fv", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glVertexAttrib4fv(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttrib4fv(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glVertexAttrib4fv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribBinding(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttribBinding(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribBinding", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribDivisor(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttribDivisor(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribDivisor", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribDivisorANGLE(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttribDivisorANGLE(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribDivisorANGLE", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribDivisorNV(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttribDivisorNV(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribDivisorNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribFormat(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glVertexAttribFormat(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <int> 0x%X)", new Object[] { "glVertexAttribFormat", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glVertexAttribI4i(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glVertexAttribI4i(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribI4i", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glVertexAttribI4iv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttribI4iv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glVertexAttribI4iv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glVertexAttribI4iv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttribI4iv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glVertexAttribI4iv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribI4ui(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
  {
    checkContext();
    downstreamGLES3.glVertexAttribI4ui(paramInt1, paramInt2, paramInt3, paramInt4, paramInt5);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribI4ui", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Integer.valueOf(paramInt5) });
    }
  }
  
  public void glVertexAttribI4uiv(int paramInt, IntBuffer paramIntBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttribI4uiv(paramInt, paramIntBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.IntBuffer> %s)", new Object[] { "glVertexAttribI4uiv", 
        Integer.valueOf(paramInt), paramIntBuffer });
    }
  }
  
  public void glVertexAttribI4uiv(int paramInt1, int[] paramArrayOfInt, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexAttribI4uiv(paramInt1, paramArrayOfInt, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[I>, <int> 0x%X)", new Object[] { "glVertexAttribI4uiv", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glVertexAttribIFormat(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glVertexAttribIFormat(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glVertexAttribIFormat", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glVertexAttribIPointer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, long paramLong)
  {
    checkContext();
    downstreamGLES3.glVertexAttribIPointer(paramInt1, paramInt2, paramInt3, paramInt4, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <long> %s)", new Object[] { "glVertexAttribIPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), Long.valueOf(paramLong) });
    }
  }
  
  public void glVertexAttribIPointer(int paramInt1, int paramInt2, int paramInt3, int paramInt4, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttribIPointer(paramInt1, paramInt2, paramInt3, paramInt4, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glVertexAttribIPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4), paramBuffer });
    }
  }
  
  public void glVertexAttribPointer(GLArrayData paramGLArrayData)
  {
    checkContext();
    downstreamGLES3.glVertexAttribPointer(paramGLArrayData);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<com.jogamp.opengl.GLArrayData> %s)", new Object[] { "glVertexAttribPointer", paramGLArrayData });
    }
  }
  

  public void glVertexAttribPointer(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4, Buffer paramBuffer)
  {
    checkContext();
    downstreamGLES3.glVertexAttribPointer(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4, paramBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <int> 0x%X, <java.nio.Buffer> %s)", new Object[] { "glVertexAttribPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4), paramBuffer });
    }
  }
  
  public void glVertexAttribPointer(int paramInt1, int paramInt2, int paramInt3, boolean paramBoolean, int paramInt4, long paramLong)
  {
    checkContext();
    downstreamGLES3.glVertexAttribPointer(paramInt1, paramInt2, paramInt3, paramBoolean, paramInt4, paramLong);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <boolean> %s, <int> 0x%X, <long> %s)", new Object[] { "glVertexAttribPointer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Boolean.valueOf(paramBoolean), Integer.valueOf(paramInt4), Long.valueOf(paramLong) });
    }
  }
  
  public void glVertexBindingDivisor(int paramInt1, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glVertexBindingDivisor(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "glVertexBindingDivisor", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glViewport(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    checkContext();
    downstreamGLES3.glViewport(paramInt1, paramInt2, paramInt3, paramInt4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <int> 0x%X, <int> 0x%X)", new Object[] { "glViewport", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3), Integer.valueOf(paramInt4) });
    }
  }
  
  public void glViewportArrayvNV(int paramInt1, int paramInt2, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glViewportArrayvNV(paramInt1, paramInt2, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glViewportArrayvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), paramFloatBuffer });
    }
  }
  
  public void glViewportArrayvNV(int paramInt1, int paramInt2, float[] paramArrayOfFloat, int paramInt3)
  {
    checkContext();
    downstreamGLES3.glViewportArrayvNV(paramInt1, paramInt2, paramArrayOfFloat, paramInt3);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glViewportArrayvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2), Integer.valueOf(paramInt3) });
    }
  }
  
  public void glViewportIndexedfNV(int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
  {
    checkContext();
    downstreamGLES3.glViewportIndexedfNV(paramInt, paramFloat1, paramFloat2, paramFloat3, paramFloat4);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <float> %s, <float> %s, <float> %s, <float> %s)", new Object[] { "glViewportIndexedfNV", 
        Integer.valueOf(paramInt), Float.valueOf(paramFloat1), Float.valueOf(paramFloat2), Float.valueOf(paramFloat3), Float.valueOf(paramFloat4) });
    }
  }
  
  public void glViewportIndexedfvNV(int paramInt, FloatBuffer paramFloatBuffer)
  {
    checkContext();
    downstreamGLES3.glViewportIndexedfvNV(paramInt, paramFloatBuffer);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <java.nio.FloatBuffer> %s)", new Object[] { "glViewportIndexedfvNV", 
        Integer.valueOf(paramInt), paramFloatBuffer });
    }
  }
  
  public void glViewportIndexedfvNV(int paramInt1, float[] paramArrayOfFloat, int paramInt2)
  {
    checkContext();
    downstreamGLES3.glViewportIndexedfvNV(paramInt1, paramArrayOfFloat, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <[F>, <int> 0x%X)", new Object[] { "glViewportIndexedfvNV", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
  }
  
  public void glWaitSync(long paramLong1, int paramInt, long paramLong2)
  {
    checkContext();
    downstreamGLES3.glWaitSync(paramLong1, paramInt, paramLong2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<long> %s, <int> 0x%X, <long> %s)", new Object[] { "glWaitSync", 
        Long.valueOf(paramLong1), Integer.valueOf(paramInt), Long.valueOf(paramLong2) });
    }
  }
  
  public boolean hasBasicFBOSupport()
  {
    return downstreamGLES3.hasBasicFBOSupport();
  }
  
  public boolean hasFullFBOSupport()
  {
    return downstreamGLES3.hasFullFBOSupport();
  }
  
  public boolean hasGLSL()
  {
    return downstreamGLES3.hasGLSL();
  }
  
  public boolean isExtensionAvailable(String paramString)
  {
    return downstreamGLES3.isExtensionAvailable(paramString);
  }
  
  public boolean isFunctionAvailable(String paramString)
  {
    return downstreamGLES3.isFunctionAvailable(paramString);
  }
  
  public boolean isGL()
  {
    return true;
  }
  
  public boolean isGL2()
  {
    return downstreamGLES3.isGL2();
  }
  
  public boolean isGL2ES1()
  {
    return downstreamGLES3.isGL2ES1();
  }
  
  public boolean isGL2ES2()
  {
    return downstreamGLES3.isGL2ES2();
  }
  
  public boolean isGL2ES3()
  {
    return downstreamGLES3.isGL2ES3();
  }
  
  public boolean isGL2GL3()
  {
    return downstreamGLES3.isGL2GL3();
  }
  
  public boolean isGL3()
  {
    return downstreamGLES3.isGL3();
  }
  
  public boolean isGL3ES3()
  {
    return downstreamGLES3.isGL3ES3();
  }
  
  public boolean isGL3bc()
  {
    return downstreamGLES3.isGL3bc();
  }
  
  public boolean isGL3core()
  {
    return downstreamGLES3.isGL3core();
  }
  
  public boolean isGL4()
  {
    return downstreamGLES3.isGL4();
  }
  
  public boolean isGL4ES3()
  {
    return downstreamGLES3.isGL4ES3();
  }
  
  public boolean isGL4bc()
  {
    return downstreamGLES3.isGL4bc();
  }
  
  public boolean isGL4core()
  {
    return downstreamGLES3.isGL4core();
  }
  
  public boolean isGLES()
  {
    return downstreamGLES3.isGLES();
  }
  
  public boolean isGLES1()
  {
    return downstreamGLES3.isGLES1();
  }
  
  public boolean isGLES2()
  {
    return downstreamGLES3.isGLES2();
  }
  
  public boolean isGLES2Compatible()
  {
    return downstreamGLES3.isGLES2Compatible();
  }
  
  public boolean isGLES3()
  {
    return downstreamGLES3.isGLES3();
  }
  
  public boolean isGLES31Compatible()
  {
    return downstreamGLES3.isGLES31Compatible();
  }
  
  public boolean isGLES32Compatible()
  {
    return downstreamGLES3.isGLES32Compatible();
  }
  
  public boolean isGLES3Compatible()
  {
    return downstreamGLES3.isGLES3Compatible();
  }
  
  public boolean isGLcore()
  {
    return downstreamGLES3.isGLcore();
  }
  
  public boolean isNPOTTextureAvailable()
  {
    return downstreamGLES3.isNPOTTextureAvailable();
  }
  
  public boolean isPBOPackBound()
  {
    return downstreamGLES3.isPBOPackBound();
  }
  
  public boolean isPBOUnpackBound()
  {
    return downstreamGLES3.isPBOUnpackBound();
  }
  
  public boolean isTextureFormatBGRA8888Available()
  {
    return downstreamGLES3.isTextureFormatBGRA8888Available();
  }
  
  public boolean isVBOArrayBound()
  {
    return downstreamGLES3.isVBOArrayBound();
  }
  
  public boolean isVBOElementArrayBound()
  {
    return downstreamGLES3.isVBOElementArrayBound();
  }
  
  public GLBufferStorage mapBuffer(int paramInt1, int paramInt2)
  {
    checkContext();
    GLBufferStorage localGLBufferStorage = downstreamGLES3.mapBuffer(paramInt1, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <int> 0x%X)", new Object[] { "mapBuffer", 
        Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) });
    }
    return localGLBufferStorage;
  }
  
  public GLBufferStorage mapBufferRange(int paramInt1, long paramLong1, long paramLong2, int paramInt2)
  {
    checkContext();
    GLBufferStorage localGLBufferStorage = downstreamGLES3.mapBufferRange(paramInt1, paramLong1, paramLong2, paramInt2);
    int i = checkGLError();
    if (i != 0) {
      writeGLError(i, "%s(<int> 0x%X, <long> %s, <long> %s, <int> 0x%X)", new Object[] { "mapBufferRange", 
        Integer.valueOf(paramInt1), Long.valueOf(paramLong1), Long.valueOf(paramLong2), Integer.valueOf(paramInt2) });
    }
    return localGLBufferStorage;
  }
  
  public void setSwapInterval(int paramInt)
  {
    downstreamGLES3.setSwapInterval(paramInt);
  }
  
  public String toString() {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("DebugGLES3 [this 0x" + Integer.toHexString(hashCode()) + " implementing com.jogamp.opengl.GLES3,\n\t");
    localStringBuilder.append(" downstream: " + downstreamGLES3.toString() + "\n\t]");
    return localStringBuilder.toString();
  }
  
  private int checkGLError() { return downstreamGLES3.glGetError(); }
  
  private void writeGLError(int paramInt, String paramString, Object... paramVarArgs)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(Thread.currentThread().toString());
    localStringBuilder.append(" glGetError() returned the following error codes after a call to ");
    localStringBuilder.append(String.format(paramString, paramVarArgs));
    localStringBuilder.append(": ");
    


    int i = 10;
    do {
      switch (paramInt) {
      case 1280:  localStringBuilder.append("GL_INVALID_ENUM "); break;
      case 1281:  localStringBuilder.append("GL_INVALID_VALUE "); break;
      case 1282:  localStringBuilder.append("GL_INVALID_OPERATION "); break;
      case 1285:  localStringBuilder.append("GL_OUT_OF_MEMORY "); break;
      case 0:  throw new InternalError("Should not be treating GL_NO_ERROR as error");
      default:  localStringBuilder.append("Unknown glGetError() return value: ");
      }
      localStringBuilder.append("( " + paramInt + " 0x" + Integer.toHexString(paramInt).toUpperCase() + "), ");
      i--; } while ((i >= 0) && ((paramInt = downstreamGLES3.glGetError()) != 0));
    throw new GLException(localStringBuilder.toString());
  }
  
  private void checkContext() { GLContext localGLContext = GLContext.getCurrent();
    if (localGLContext == null) {
      throw new GLException("No OpenGL context is current on this thread");
    }
    if ((_context != null) && (_context != localGLContext)) {
      throw new GLException("This GL object is being incorrectly used with a different GLContext than that which created it");
    }
  }
}
